<xsl:stylesheet xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:core="http://www.opengis.net/citygml/3.0" xmlns:app="http://www.opengis.net/citygml/appearance/3.0" xmlns:brid="http://www.opengis.net/citygml/bridge/3.0" xmlns:bldg="http://www.opengis.net/citygml/building/3.0" xmlns:pcl="http://www.opengis.net/citygml/pointcloud/3.0" xmlns:frn="http://www.opengis.net/citygml/cityfurniture/3.0" xmlns:grp="http://www.opengis.net/citygml/cityobjectgroup/3.0" xmlns:con="http://www.opengis.net/citygml/construction/3.0" xmlns:dyn="http://www.opengis.net/citygml/dynamizer/3.0" xmlns:gen="http://www.opengis.net/citygml/generics/3.0" xmlns:luse="http://www.opengis.net/citygml/landuse/3.0" xmlns:dem="http://www.opengis.net/citygml/relief/3.0" xmlns:tran="http://www.opengis.net/citygml/transportation/3.0" xmlns:tun="http://www.opengis.net/citygml/tunnel/3.0" xmlns:veg="http://www.opengis.net/citygml/vegetation/3.0" xmlns:vers="http://www.opengis.net/citygml/versioning/3.0" xmlns:wtr="http://www.opengis.net/citygml/waterbody/3.0" xmlns:xAL="urn:oasis:names:tc:ciq:xsdschema:xAL:3.0" xmlns:sch="http://www.ascc.net/xml/schematron" xmlns:smil20="http://www.w3.org/2001/SMIL20/" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/citygml/3.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0"><xsl:output indent="yes"/>
   <xsl:strip-space elements="*"/>
   <xsl:variable name="namespace" select="'https://liris.cnrs.fr/ontologies#'"/>
   <xsl:template match="/">
      <rdf:RDF xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#">
         <owl:Ontology rdf:about="https://liris.cnrs.fr/ontologies#"/>
         <xsl:apply-templates select="//*"/>
      </rdf:RDF>
   </xsl:template>
   <xsl:template name="app:ADEOfAbstractSurfaceDataType_Template"/>
   <xsl:template name="app:ADEOfAbstractSurfaceDataPropertyType_Template">
      <xsl:for-each select="./app:ADEOfAbstractSurfaceData">
         <xsl:call-template name="app:ADEOfAbstractSurfaceData_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="app:ADEOfAbstractTextureType_Template"/>
   <xsl:template name="app:ADEOfAbstractTexturePropertyType_Template">
      <xsl:for-each select="./app:ADEOfAbstractTexture">
         <xsl:call-template name="app:ADEOfAbstractTexture_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="app:ADEOfAppearanceType_Template"/>
   <xsl:template name="app:ADEOfAppearancePropertyType_Template">
      <xsl:for-each select="./app:ADEOfAppearance">
         <xsl:call-template name="app:ADEOfAppearance_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="app:ADEOfGeoreferencedTextureType_Template"/>
   <xsl:template name="app:ADEOfGeoreferencedTexturePropertyType_Template">
      <xsl:for-each select="./app:ADEOfGeoreferencedTexture">
         <xsl:call-template name="app:ADEOfGeoreferencedTexture_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="app:ADEOfParameterizedTextureType_Template"/>
   <xsl:template name="app:ADEOfParameterizedTexturePropertyType_Template">
      <xsl:for-each select="./app:ADEOfParameterizedTexture">
         <xsl:call-template name="app:ADEOfParameterizedTexture_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="app:ADEOfX3DMaterialType_Template"/>
   <xsl:template name="app:ADEOfX3DMaterialPropertyType_Template">
      <xsl:for-each select="./app:ADEOfX3DMaterial">
         <xsl:call-template name="app:ADEOfX3DMaterial_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="app:AbstractSurfaceDataType_Template">
      <xsl:for-each select="./app:isFront">
         <xsl:call-template name="app:isFront_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:adeOfAbstractSurfaceData">
         <xsl:call-template name="app:adeOfAbstractSurfaceData_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="app:AbstractSurfaceDataPropertyType_Template">
      <xsl:for-each select="./app:AbstractSurfaceData">
         <xsl:call-template name="app:AbstractSurfaceData_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractTexture">
         <xsl:call-template name="app:AbstractTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:X3DMaterial">
         <xsl:call-template name="app:X3DMaterial_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="app:AbstractTextureType_Template">
      <xsl:for-each select="./app:imageURI">
         <xsl:call-template name="app:imageURI_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:mimeType">
         <xsl:call-template name="app:mimeType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:textureType">
         <xsl:call-template name="app:textureType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:wrapMode">
         <xsl:call-template name="app:wrapMode_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:borderColor">
         <xsl:call-template name="app:borderColor_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:adeOfAbstractTexture">
         <xsl:call-template name="app:adeOfAbstractTexture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="app:AbstractSurfaceDataType_Template"/>
   </xsl:template>
   <xsl:template name="app:AbstractTexturePropertyType_Template">
      <xsl:for-each select="./app:AbstractTexture">
         <xsl:call-template name="app:AbstractTexture_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="app:AbstractTextureParameterizationType_Template"/>
   <xsl:template name="app:AbstractTextureParameterizationPropertyType_Template">
      <xsl:for-each select="./app:AbstractTextureParameterization">
         <xsl:call-template name="app:AbstractTextureParameterization_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:TexCoordGen">
         <xsl:call-template name="app:TexCoordGen_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:TexCoordList">
         <xsl:call-template name="app:TexCoordList_Substitution"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="app:AppearanceType_Template">
      <xsl:for-each select="./app:theme">
         <xsl:call-template name="app:theme_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:surfaceData">
         <xsl:call-template name="app:surfaceData_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:adeOfAppearance">
         <xsl:call-template name="app:adeOfAppearance_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractAppearanceType_Template"/>
   </xsl:template>
   <xsl:template name="app:surfaceData_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="app:AppearancePropertyType_Template">
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="app:GeoreferencedTextureType_Template">
      <xsl:for-each select="./app:preferWorldFile">
         <xsl:call-template name="app:preferWorldFile_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:referencePoint">
         <xsl:call-template name="app:referencePoint_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:orientation">
         <xsl:call-template name="app:orientation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:target">
         <xsl:call-template name="app:target_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:adeOfGeoreferencedTexture">
         <xsl:call-template name="app:adeOfGeoreferencedTexture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="app:AbstractTextureType_Template"/>
   </xsl:template>
   <xsl:template name="app:GeoreferencedTexturePropertyType_Template">
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="app:ParameterizedTextureType_Template">
      <xsl:for-each select="./app:textureParameterization">
         <xsl:call-template name="app:textureParameterization_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:adeOfParameterizedTexture">
         <xsl:call-template name="app:adeOfParameterizedTexture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="app:AbstractTextureType_Template"/>
   </xsl:template>
   <xsl:template name="app:ParameterizedTexturePropertyType_Template">
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="app:TexCoordGenType_Template">
      <xsl:for-each select="./app:worldToTexture">
         <xsl:call-template name="app:worldToTexture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:SRSReferenceGroup_Template"/>
      <xsl:call-template name="app:AbstractTextureParameterizationType_Template"/>
   </xsl:template>
   <xsl:template name="app:TexCoordGenPropertyType_Template">
      <xsl:for-each select="./app:TexCoordGen">
         <xsl:call-template name="app:TexCoordGen_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="app:TexCoordListType_Template">
      <xsl:for-each select="./app:textureCoordinates">
         <xsl:call-template name="app:textureCoordinates_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ring">
         <xsl:call-template name="app:ring_Property"/>
      </xsl:for-each>
      <xsl:call-template name="app:AbstractTextureParameterizationType_Template"/>
   </xsl:template>
   <xsl:template name="app:TexCoordListPropertyType_Template">
      <xsl:for-each select="./app:TexCoordList">
         <xsl:call-template name="app:TexCoordList_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="app:TextureAssociationType_Template">
      <xsl:for-each select="./app:target">
         <xsl:call-template name="app:target_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:textureParameterization">
         <xsl:call-template name="app:textureParameterization_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="app:TextureAssociationPropertyType_Template">
      <xsl:for-each select="./app:TextureAssociation">
         <xsl:call-template name="app:TextureAssociation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="app:X3DMaterialType_Template">
      <xsl:for-each select="./app:ambientIntensity">
         <xsl:call-template name="app:ambientIntensity_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:diffuseColor">
         <xsl:call-template name="app:diffuseColor_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:emissiveColor">
         <xsl:call-template name="app:emissiveColor_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:specularColor">
         <xsl:call-template name="app:specularColor_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:shininess">
         <xsl:call-template name="app:shininess_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:transparency">
         <xsl:call-template name="app:transparency_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:isSmooth">
         <xsl:call-template name="app:isSmooth_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:target">
         <xsl:call-template name="app:target_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:adeOfX3DMaterial">
         <xsl:call-template name="app:adeOfX3DMaterial_Property"/>
      </xsl:for-each>
      <xsl:call-template name="app:AbstractSurfaceDataType_Template"/>
   </xsl:template>
   <xsl:template name="app:X3DMaterialPropertyType_Template">
      <xsl:for-each select="./app:X3DMaterial">
         <xsl:call-template name="app:X3DMaterial_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="brid:ADEOfAbstractBridgeType_Template"/>
   <xsl:template name="brid:ADEOfAbstractBridgePropertyType_Template">
      <xsl:for-each select="./brid:ADEOfAbstractBridge">
         <xsl:call-template name="brid:ADEOfAbstractBridge_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeType_Template"/>
   <xsl:template name="brid:ADEOfBridgePropertyType_Template">
      <xsl:for-each select="./brid:ADEOfBridge">
         <xsl:call-template name="brid:ADEOfBridge_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeConstructiveElementType_Template"/>
   <xsl:template name="brid:ADEOfBridgeConstructiveElementPropertyType_Template">
      <xsl:for-each select="./brid:ADEOfBridgeConstructiveElement">
         <xsl:call-template name="brid:ADEOfBridgeConstructiveElement_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeFurnitureType_Template"/>
   <xsl:template name="brid:ADEOfBridgeFurniturePropertyType_Template">
      <xsl:for-each select="./brid:ADEOfBridgeFurniture">
         <xsl:call-template name="brid:ADEOfBridgeFurniture_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeInstallationType_Template"/>
   <xsl:template name="brid:ADEOfBridgeInstallationPropertyType_Template">
      <xsl:for-each select="./brid:ADEOfBridgeInstallation">
         <xsl:call-template name="brid:ADEOfBridgeInstallation_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgePartType_Template"/>
   <xsl:template name="brid:ADEOfBridgePartPropertyType_Template">
      <xsl:for-each select="./brid:ADEOfBridgePart">
         <xsl:call-template name="brid:ADEOfBridgePart_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeRoomType_Template"/>
   <xsl:template name="brid:ADEOfBridgeRoomPropertyType_Template">
      <xsl:for-each select="./brid:ADEOfBridgeRoom">
         <xsl:call-template name="brid:ADEOfBridgeRoom_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="brid:AbstractBridgeType_Template">
      <xsl:for-each select="./brid:class">
         <xsl:call-template name="brid:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:function">
         <xsl:call-template name="brid:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:usage">
         <xsl:call-template name="brid:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:isMovable">
         <xsl:call-template name="brid:isMovable_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:bridgeConstructiveElement">
         <xsl:call-template name="brid:bridgeConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:bridgeInstallation">
         <xsl:call-template name="brid:bridgeInstallation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:bridgeRoom">
         <xsl:call-template name="brid:bridgeRoom_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:bridgeFurniture">
         <xsl:call-template name="brid:bridgeFurniture_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:address">
         <xsl:call-template name="brid:address_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:adeOfAbstractBridge">
         <xsl:call-template name="brid:adeOfAbstractBridge_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionType_Template"/>
   </xsl:template>
   <xsl:template name="brid:bridgeConstructiveElement_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="brid:bridgeInstallation_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="brid:bridgeRoom_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="brid:bridgeFurniture_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="brid:AbstractBridgePropertyType_Template">
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgeType_Template">
      <xsl:for-each select="./brid:bridgePart">
         <xsl:call-template name="brid:bridgePart_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:adeOfBridge">
         <xsl:call-template name="brid:adeOfBridge_Property"/>
      </xsl:for-each>
      <xsl:call-template name="brid:AbstractBridgeType_Template"/>
   </xsl:template>
   <xsl:template name="brid:bridgePart_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgePropertyType_Template">
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgeConstructiveElementType_Template">
      <xsl:for-each select="./brid:class">
         <xsl:call-template name="brid:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:function">
         <xsl:call-template name="brid:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:usage">
         <xsl:call-template name="brid:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:adeOfBridgeConstructiveElement">
         <xsl:call-template name="brid:adeOfBridgeConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructiveElementType_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgeConstructiveElementPropertyType_Template">
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgeFurnitureType_Template">
      <xsl:for-each select="./brid:class">
         <xsl:call-template name="brid:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:function">
         <xsl:call-template name="brid:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:usage">
         <xsl:call-template name="brid:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:adeOfBridgeFurniture">
         <xsl:call-template name="brid:adeOfBridgeFurniture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractFurnitureType_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgeFurniturePropertyType_Template">
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgeInstallationType_Template">
      <xsl:for-each select="./brid:class">
         <xsl:call-template name="brid:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:function">
         <xsl:call-template name="brid:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:usage">
         <xsl:call-template name="brid:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:adeOfBridgeInstallation">
         <xsl:call-template name="brid:adeOfBridgeInstallation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractInstallationType_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgeInstallationPropertyType_Template">
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgePartType_Template">
      <xsl:for-each select="./brid:adeOfBridgePart">
         <xsl:call-template name="brid:adeOfBridgePart_Property"/>
      </xsl:for-each>
      <xsl:call-template name="brid:AbstractBridgeType_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgePartPropertyType_Template">
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgeRoomType_Template">
      <xsl:for-each select="./brid:class">
         <xsl:call-template name="brid:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:function">
         <xsl:call-template name="brid:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:usage">
         <xsl:call-template name="brid:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:bridgeFurniture">
         <xsl:call-template name="brid:bridgeFurniture_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:bridgeInstallation">
         <xsl:call-template name="brid:bridgeInstallation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:adeOfBridgeRoom">
         <xsl:call-template name="brid:adeOfBridgeRoom_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractUnoccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="brid:BridgeRoomPropertyType_Template">
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfAbstractBuildingType_Template"/>
   <xsl:template name="bldg:ADEOfAbstractBuildingPropertyType_Template">
      <xsl:for-each select="./bldg:ADEOfAbstractBuilding">
         <xsl:call-template name="bldg:ADEOfAbstractBuilding_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:ADEOfAbstractBuildingSubdivisionType_Template"/>
   <xsl:template name="bldg:ADEOfAbstractBuildingSubdivisionPropertyType_Template">
      <xsl:for-each select="./bldg:ADEOfAbstractBuildingSubdivision">
         <xsl:call-template name="bldg:ADEOfAbstractBuildingSubdivision_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingType_Template"/>
   <xsl:template name="bldg:ADEOfBuildingPropertyType_Template">
      <xsl:for-each select="./bldg:ADEOfBuilding">
         <xsl:call-template name="bldg:ADEOfBuilding_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingConstructiveElementType_Template"/>
   <xsl:template name="bldg:ADEOfBuildingConstructiveElementPropertyType_Template">
      <xsl:for-each select="./bldg:ADEOfBuildingConstructiveElement">
         <xsl:call-template name="bldg:ADEOfBuildingConstructiveElement_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingFurnitureType_Template"/>
   <xsl:template name="bldg:ADEOfBuildingFurniturePropertyType_Template">
      <xsl:for-each select="./bldg:ADEOfBuildingFurniture">
         <xsl:call-template name="bldg:ADEOfBuildingFurniture_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingInstallationType_Template"/>
   <xsl:template name="bldg:ADEOfBuildingInstallationPropertyType_Template">
      <xsl:for-each select="./bldg:ADEOfBuildingInstallation">
         <xsl:call-template name="bldg:ADEOfBuildingInstallation_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingPartType_Template"/>
   <xsl:template name="bldg:ADEOfBuildingPartPropertyType_Template">
      <xsl:for-each select="./bldg:ADEOfBuildingPart">
         <xsl:call-template name="bldg:ADEOfBuildingPart_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingRoomType_Template"/>
   <xsl:template name="bldg:ADEOfBuildingRoomPropertyType_Template">
      <xsl:for-each select="./bldg:ADEOfBuildingRoom">
         <xsl:call-template name="bldg:ADEOfBuildingRoom_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingUnitType_Template"/>
   <xsl:template name="bldg:ADEOfBuildingUnitPropertyType_Template">
      <xsl:for-each select="./bldg:ADEOfBuildingUnit">
         <xsl:call-template name="bldg:ADEOfBuildingUnit_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:ADEOfStoreyType_Template"/>
   <xsl:template name="bldg:ADEOfStoreyPropertyType_Template">
      <xsl:for-each select="./bldg:ADEOfStorey">
         <xsl:call-template name="bldg:ADEOfStorey_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:AbstractBuildingType_Template">
      <xsl:for-each select="./bldg:class">
         <xsl:call-template name="bldg:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:function">
         <xsl:call-template name="bldg:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:usage">
         <xsl:call-template name="bldg:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:roofType">
         <xsl:call-template name="bldg:roofType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:storeysAboveGround">
         <xsl:call-template name="bldg:storeysAboveGround_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:storeysBelowGround">
         <xsl:call-template name="bldg:storeysBelowGround_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:storeyHeightsAboveGround">
         <xsl:call-template name="bldg:storeyHeightsAboveGround_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:storeyHeightsBelowGround">
         <xsl:call-template name="bldg:storeyHeightsBelowGround_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingConstructiveElement">
         <xsl:call-template name="bldg:buildingConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingInstallation">
         <xsl:call-template name="bldg:buildingInstallation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingRoom">
         <xsl:call-template name="bldg:buildingRoom_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingFurniture">
         <xsl:call-template name="bldg:buildingFurniture_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingSubdivision">
         <xsl:call-template name="bldg:buildingSubdivision_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:address">
         <xsl:call-template name="bldg:address_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:adeOfAbstractBuilding">
         <xsl:call-template name="bldg:adeOfAbstractBuilding_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:buildingConstructiveElement_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:buildingInstallation_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:buildingRoom_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:buildingFurniture_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:buildingSubdivision_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:AbstractBuildingPropertyType_Template">
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="bldg:AbstractBuildingSubdivisionType_Template">
      <xsl:for-each select="./bldg:class">
         <xsl:call-template name="bldg:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:function">
         <xsl:call-template name="bldg:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:usage">
         <xsl:call-template name="bldg:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:elevation">
         <xsl:call-template name="bldg:elevation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:sortKey">
         <xsl:call-template name="bldg:sortKey_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingConstructiveElement">
         <xsl:call-template name="bldg:buildingConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingFurniture">
         <xsl:call-template name="bldg:buildingFurniture_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingInstallation">
         <xsl:call-template name="bldg:buildingInstallation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingRoom">
         <xsl:call-template name="bldg:buildingRoom_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:adeOfAbstractBuildingSubdivision">
         <xsl:call-template name="bldg:adeOfAbstractBuildingSubdivision_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractLogicalSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:AbstractBuildingSubdivisionPropertyType_Template">
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingType_Template">
      <xsl:for-each select="./bldg:buildingPart">
         <xsl:call-template name="bldg:buildingPart_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:adeOfBuilding">
         <xsl:call-template name="bldg:adeOfBuilding_Property"/>
      </xsl:for-each>
      <xsl:call-template name="bldg:AbstractBuildingType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:buildingPart_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingPropertyType_Template">
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingConstructiveElementType_Template">
      <xsl:for-each select="./bldg:class">
         <xsl:call-template name="bldg:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:function">
         <xsl:call-template name="bldg:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:usage">
         <xsl:call-template name="bldg:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:adeOfBuildingConstructiveElement">
         <xsl:call-template name="bldg:adeOfBuildingConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructiveElementType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingConstructiveElementPropertyType_Template">
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingFurnitureType_Template">
      <xsl:for-each select="./bldg:class">
         <xsl:call-template name="bldg:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:function">
         <xsl:call-template name="bldg:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:usage">
         <xsl:call-template name="bldg:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:adeOfBuildingFurniture">
         <xsl:call-template name="bldg:adeOfBuildingFurniture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractFurnitureType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingFurniturePropertyType_Template">
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingInstallationType_Template">
      <xsl:for-each select="./bldg:class">
         <xsl:call-template name="bldg:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:function">
         <xsl:call-template name="bldg:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:usage">
         <xsl:call-template name="bldg:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:adeOfBuildingInstallation">
         <xsl:call-template name="bldg:adeOfBuildingInstallation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractInstallationType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingInstallationPropertyType_Template">
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingPartType_Template">
      <xsl:for-each select="./bldg:adeOfBuildingPart">
         <xsl:call-template name="bldg:adeOfBuildingPart_Property"/>
      </xsl:for-each>
      <xsl:call-template name="bldg:AbstractBuildingType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingPartPropertyType_Template">
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingRoomType_Template">
      <xsl:for-each select="./bldg:class">
         <xsl:call-template name="bldg:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:function">
         <xsl:call-template name="bldg:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:usage">
         <xsl:call-template name="bldg:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:roomHeight">
         <xsl:call-template name="bldg:roomHeight_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingFurniture">
         <xsl:call-template name="bldg:buildingFurniture_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:buildingInstallation">
         <xsl:call-template name="bldg:buildingInstallation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:adeOfBuildingRoom">
         <xsl:call-template name="bldg:adeOfBuildingRoom_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractUnoccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingRoomPropertyType_Template">
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingUnitType_Template">
      <xsl:for-each select="./bldg:storey">
         <xsl:call-template name="bldg:storey_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:address">
         <xsl:call-template name="bldg:address_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:adeOfBuildingUnit">
         <xsl:call-template name="bldg:adeOfBuildingUnit_Property"/>
      </xsl:for-each>
      <xsl:call-template name="bldg:AbstractBuildingSubdivisionType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingUnitPropertyType_Template">
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="bldg:RoomHeightType_Template">
      <xsl:for-each select="./bldg:highReference">
         <xsl:call-template name="bldg:highReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:lowReference">
         <xsl:call-template name="bldg:lowReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:status">
         <xsl:call-template name="bldg:status_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:value">
         <xsl:call-template name="bldg:value_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:RoomHeightPropertyType_Template">
      <xsl:for-each select="./bldg:RoomHeight">
         <xsl:call-template name="bldg:RoomHeight_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="bldg:StoreyType_Template">
      <xsl:for-each select="./bldg:buildingUnit">
         <xsl:call-template name="bldg:buildingUnit_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:adeOfStorey">
         <xsl:call-template name="bldg:adeOfStorey_Property"/>
      </xsl:for-each>
      <xsl:call-template name="bldg:AbstractBuildingSubdivisionType_Template"/>
   </xsl:template>
   <xsl:template name="bldg:StoreyPropertyType_Template">
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="frn:ADEOfCityFurnitureType_Template"/>
   <xsl:template name="frn:ADEOfCityFurniturePropertyType_Template">
      <xsl:for-each select="./frn:ADEOfCityFurniture">
         <xsl:call-template name="frn:ADEOfCityFurniture_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="frn:CityFurnitureType_Template">
      <xsl:for-each select="./frn:class">
         <xsl:call-template name="frn:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:function">
         <xsl:call-template name="frn:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:usage">
         <xsl:call-template name="frn:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:adeOfCityFurniture">
         <xsl:call-template name="frn:adeOfCityFurniture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractOccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="frn:CityFurniturePropertyType_Template">
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractAppearanceType_Template"/>
   <xsl:template name="core:ADEOfAbstractAppearancePropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractAppearance">
         <xsl:call-template name="core:ADEOfAbstractAppearance_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractCityObjectType_Template"/>
   <xsl:template name="core:ADEOfAbstractCityObjectPropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractCityObject">
         <xsl:call-template name="core:ADEOfAbstractCityObject_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractDynamizerType_Template"/>
   <xsl:template name="core:ADEOfAbstractDynamizerPropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractDynamizer">
         <xsl:call-template name="core:ADEOfAbstractDynamizer_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractFeatureType_Template"/>
   <xsl:template name="core:ADEOfAbstractFeaturePropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractFeature">
         <xsl:call-template name="core:ADEOfAbstractFeature_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractFeatureWithLifespanType_Template"/>
   <xsl:template name="core:ADEOfAbstractFeatureWithLifespanPropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractFeatureWithLifespan">
         <xsl:call-template name="core:ADEOfAbstractFeatureWithLifespan_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractLogicalSpaceType_Template"/>
   <xsl:template name="core:ADEOfAbstractLogicalSpacePropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractLogicalSpace">
         <xsl:call-template name="core:ADEOfAbstractLogicalSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractOccupiedSpaceType_Template"/>
   <xsl:template name="core:ADEOfAbstractOccupiedSpacePropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractOccupiedSpace">
         <xsl:call-template name="core:ADEOfAbstractOccupiedSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractPhysicalSpaceType_Template"/>
   <xsl:template name="core:ADEOfAbstractPhysicalSpacePropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractPhysicalSpace">
         <xsl:call-template name="core:ADEOfAbstractPhysicalSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractPointCloudType_Template"/>
   <xsl:template name="core:ADEOfAbstractPointCloudPropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractPointCloud">
         <xsl:call-template name="core:ADEOfAbstractPointCloud_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractSpaceType_Template"/>
   <xsl:template name="core:ADEOfAbstractSpacePropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractSpace">
         <xsl:call-template name="core:ADEOfAbstractSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractSpaceBoundaryType_Template"/>
   <xsl:template name="core:ADEOfAbstractSpaceBoundaryPropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractSpaceBoundary">
         <xsl:call-template name="core:ADEOfAbstractSpaceBoundary_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractThematicSurfaceType_Template"/>
   <xsl:template name="core:ADEOfAbstractThematicSurfacePropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractThematicSurface">
         <xsl:call-template name="core:ADEOfAbstractThematicSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractUnoccupiedSpaceType_Template"/>
   <xsl:template name="core:ADEOfAbstractUnoccupiedSpacePropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractUnoccupiedSpace">
         <xsl:call-template name="core:ADEOfAbstractUnoccupiedSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractVersionType_Template"/>
   <xsl:template name="core:ADEOfAbstractVersionPropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractVersion">
         <xsl:call-template name="core:ADEOfAbstractVersion_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractVersionTransitionType_Template"/>
   <xsl:template name="core:ADEOfAbstractVersionTransitionPropertyType_Template">
      <xsl:for-each select="./core:ADEOfAbstractVersionTransition">
         <xsl:call-template name="core:ADEOfAbstractVersionTransition_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfAddressType_Template"/>
   <xsl:template name="core:ADEOfAddressPropertyType_Template">
      <xsl:for-each select="./core:ADEOfAddress">
         <xsl:call-template name="core:ADEOfAddress_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfCityModelType_Template"/>
   <xsl:template name="core:ADEOfCityModelPropertyType_Template">
      <xsl:for-each select="./core:ADEOfCityModel">
         <xsl:call-template name="core:ADEOfCityModel_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ADEOfClosureSurfaceType_Template"/>
   <xsl:template name="core:ADEOfClosureSurfacePropertyType_Template">
      <xsl:for-each select="./core:ADEOfClosureSurface">
         <xsl:call-template name="core:ADEOfClosureSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:AbstractAppearanceType_Template">
      <xsl:for-each select="./core:adeOfAbstractAppearance">
         <xsl:call-template name="core:adeOfAbstractAppearance_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractFeatureWithLifespanType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractAppearancePropertyType_Template">
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractCityObjectType_Template">
      <xsl:for-each select="./core:externalReference">
         <xsl:call-template name="core:externalReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:generalizesTo">
         <xsl:call-template name="core:generalizesTo_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:relativeToTerrain">
         <xsl:call-template name="core:relativeToTerrain_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:relativeToWater">
         <xsl:call-template name="core:relativeToWater_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:relatedTo">
         <xsl:call-template name="core:relatedTo_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:appearance">
         <xsl:call-template name="core:appearance_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:genericAttribute">
         <xsl:call-template name="core:genericAttribute_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:dynamizer">
         <xsl:call-template name="core:dynamizer_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:adeOfAbstractCityObject">
         <xsl:call-template name="core:adeOfAbstractCityObject_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractFeatureWithLifespanType_Template"/>
   </xsl:template>
   <xsl:template name="core:appearance_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractCityObjectPropertyType_Template">
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractDynamizerType_Template">
      <xsl:for-each select="./core:adeOfAbstractDynamizer">
         <xsl:call-template name="core:adeOfAbstractDynamizer_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractFeatureWithLifespanType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractDynamizerPropertyType_Template">
      <xsl:for-each select="./core:AbstractDynamizer">
         <xsl:call-template name="core:AbstractDynamizer_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractFeatureType_Template">
      <xsl:for-each select="./core:adeOfAbstractFeature">
         <xsl:call-template name="core:adeOfAbstractFeature_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractFeaturePropertyType_Template">
      <xsl:for-each select="./core:AbstractFeature">
         <xsl:call-template name="core:AbstractFeature_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractSurfaceData">
         <xsl:call-template name="app:AbstractSurfaceData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractTexture">
         <xsl:call-template name="app:AbstractTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:X3DMaterial">
         <xsl:call-template name="app:X3DMaterial_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeatureWithLifespan">
         <xsl:call-template name="core:AbstractFeatureWithLifespan_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractDynamizer">
         <xsl:call-template name="core:AbstractDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:CityModel">
         <xsl:call-template name="core:CityModel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPointCloud">
         <xsl:call-template name="core:AbstractPointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:PointCloud">
         <xsl:call-template name="pcl:PointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:Address">
         <xsl:call-template name="core:Address_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractTimeseries">
         <xsl:call-template name="dyn:AbstractTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractAtomicTimeseries">
         <xsl:call-template name="dyn:AbstractAtomicTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:CompositeTimeseries">
         <xsl:call-template name="dyn:CompositeTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractFeatureWithLifespanType_Template">
      <xsl:for-each select="./core:creationDate">
         <xsl:call-template name="core:creationDate_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:terminationDate">
         <xsl:call-template name="core:terminationDate_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:validFrom">
         <xsl:call-template name="core:validFrom_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:validTo">
         <xsl:call-template name="core:validTo_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:adeOfAbstractFeatureWithLifespan">
         <xsl:call-template name="core:adeOfAbstractFeatureWithLifespan_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractFeatureWithLifespanPropertyType_Template">
      <xsl:for-each select="./core:AbstractFeatureWithLifespan">
         <xsl:call-template name="core:AbstractFeatureWithLifespan_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractDynamizer">
         <xsl:call-template name="core:AbstractDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:CityModel">
         <xsl:call-template name="core:CityModel_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractGenericAttributeType_Template"/>
   <xsl:template name="core:AbstractGenericAttributePropertyType_Template">
      <xsl:for-each select="./core:AbstractGenericAttribute">
         <xsl:call-template name="core:AbstractGenericAttribute_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:CodeAttribute">
         <xsl:call-template name="gen:CodeAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:DateAttribute">
         <xsl:call-template name="gen:DateAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:DoubleAttribute">
         <xsl:call-template name="gen:DoubleAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericAttributeSet">
         <xsl:call-template name="gen:GenericAttributeSet_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:IntAttribute">
         <xsl:call-template name="gen:IntAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:MeasureAttribute">
         <xsl:call-template name="gen:MeasureAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:StringAttribute">
         <xsl:call-template name="gen:StringAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:UriAttribute">
         <xsl:call-template name="gen:UriAttribute_Substitution"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:AbstractLogicalSpaceType_Template">
      <xsl:for-each select="./core:adeOfAbstractLogicalSpace">
         <xsl:call-template name="core:adeOfAbstractLogicalSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractLogicalSpacePropertyType_Template">
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractOccupiedSpaceType_Template">
      <xsl:for-each select="./core:lod1ImplicitRepresentation">
         <xsl:call-template name="core:lod1ImplicitRepresentation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod2ImplicitRepresentation">
         <xsl:call-template name="core:lod2ImplicitRepresentation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod3ImplicitRepresentation">
         <xsl:call-template name="core:lod3ImplicitRepresentation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:adeOfAbstractOccupiedSpace">
         <xsl:call-template name="core:adeOfAbstractOccupiedSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractPhysicalSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractOccupiedSpacePropertyType_Template">
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractPhysicalSpaceType_Template">
      <xsl:for-each select="./core:lod1TerrainIntersectionCurve">
         <xsl:call-template name="core:lod1TerrainIntersectionCurve_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod2TerrainIntersectionCurve">
         <xsl:call-template name="core:lod2TerrainIntersectionCurve_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod3TerrainIntersectionCurve">
         <xsl:call-template name="core:lod3TerrainIntersectionCurve_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:pointCloud">
         <xsl:call-template name="core:pointCloud_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:adeOfAbstractPhysicalSpace">
         <xsl:call-template name="core:adeOfAbstractPhysicalSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractPhysicalSpacePropertyType_Template">
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractPointCloudType_Template">
      <xsl:for-each select="./core:adeOfAbstractPointCloud">
         <xsl:call-template name="core:adeOfAbstractPointCloud_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractPointCloudPropertyType_Template">
      <xsl:for-each select="./core:AbstractPointCloud">
         <xsl:call-template name="core:AbstractPointCloud_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:PointCloud">
         <xsl:call-template name="pcl:PointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractSpaceType_Template">
      <xsl:for-each select="./core:spaceType">
         <xsl:call-template name="core:spaceType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:volume">
         <xsl:call-template name="core:volume_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:area">
         <xsl:call-template name="core:area_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:boundary">
         <xsl:call-template name="core:boundary_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod0Point">
         <xsl:call-template name="core:lod0Point_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod0MultiSurface">
         <xsl:call-template name="core:lod0MultiSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod0MultiCurve">
         <xsl:call-template name="core:lod0MultiCurve_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod1Solid">
         <xsl:call-template name="core:lod1Solid_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod2Solid">
         <xsl:call-template name="core:lod2Solid_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod2MultiSurface">
         <xsl:call-template name="core:lod2MultiSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod2MultiCurve">
         <xsl:call-template name="core:lod2MultiCurve_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod3Solid">
         <xsl:call-template name="core:lod3Solid_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod3MultiSurface">
         <xsl:call-template name="core:lod3MultiSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod3MultiCurve">
         <xsl:call-template name="core:lod3MultiCurve_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:adeOfAbstractSpace">
         <xsl:call-template name="core:adeOfAbstractSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractCityObjectType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractSpacePropertyType_Template">
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractSpaceBoundaryType_Template">
      <xsl:for-each select="./core:adeOfAbstractSpaceBoundary">
         <xsl:call-template name="core:adeOfAbstractSpaceBoundary_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractCityObjectType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractSpaceBoundaryPropertyType_Template">
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractThematicSurfaceType_Template">
      <xsl:for-each select="./core:area">
         <xsl:call-template name="core:area_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod0MultiCurve">
         <xsl:call-template name="core:lod0MultiCurve_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod0MultiSurface">
         <xsl:call-template name="core:lod0MultiSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod1MultiSurface">
         <xsl:call-template name="core:lod1MultiSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod2MultiSurface">
         <xsl:call-template name="core:lod2MultiSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:lod3MultiSurface">
         <xsl:call-template name="core:lod3MultiSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:pointCloud">
         <xsl:call-template name="core:pointCloud_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:adeOfAbstractThematicSurface">
         <xsl:call-template name="core:adeOfAbstractThematicSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractSpaceBoundaryType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractThematicSurfacePropertyType_Template">
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractUnoccupiedSpaceType_Template">
      <xsl:for-each select="./core:adeOfAbstractUnoccupiedSpace">
         <xsl:call-template name="core:adeOfAbstractUnoccupiedSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractPhysicalSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractUnoccupiedSpacePropertyType_Template">
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractVersionType_Template">
      <xsl:for-each select="./core:adeOfAbstractVersion">
         <xsl:call-template name="core:adeOfAbstractVersion_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractFeatureWithLifespanType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractVersionPropertyType_Template">
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractVersionTransitionType_Template">
      <xsl:for-each select="./core:adeOfAbstractVersionTransition">
         <xsl:call-template name="core:adeOfAbstractVersionTransition_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractFeatureWithLifespanType_Template"/>
   </xsl:template>
   <xsl:template name="core:AbstractVersionTransitionPropertyType_Template">
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:AddressType_Template">
      <xsl:for-each select="./core:xalAddress">
         <xsl:call-template name="core:xalAddress_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:multiPoint">
         <xsl:call-template name="core:multiPoint_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:adeOfAddress">
         <xsl:call-template name="core:adeOfAddress_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="core:xalAddress_Template"/>
   <xsl:template name="core:AddressPropertyType_Template">
      <xsl:for-each select="./core:Address">
         <xsl:call-template name="core:Address_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:CityModelType_Template">
      <xsl:for-each select="./core:engineeringCRS">
         <xsl:call-template name="core:engineeringCRS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:adeOfCityModel">
         <xsl:call-template name="core:adeOfCityModel_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:CityModelMemberGroup_Template"/>
      <xsl:call-template name="core:AbstractFeatureWithLifespanType_Template"/>
   </xsl:template>
   <xsl:template name="core:engineeringCRS_Template">
      <xsl:call-template name="gml:AbstractMetadataPropertyType_Template"/>
   </xsl:template>
   <xsl:template name="core:CityModelPropertyType_Template">
      <xsl:for-each select="./core:CityModel">
         <xsl:call-template name="core:CityModel_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:cityObjectMember_Template">
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="core:appearanceMember_Template">
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="core:versionMember_Template">
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="core:versionTransitionMember_Template">
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="core:featureMember_Template">
      <xsl:for-each select="./core:AbstractFeature">
         <xsl:call-template name="core:AbstractFeature_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractSurfaceData">
         <xsl:call-template name="app:AbstractSurfaceData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractTexture">
         <xsl:call-template name="app:AbstractTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:X3DMaterial">
         <xsl:call-template name="app:X3DMaterial_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeatureWithLifespan">
         <xsl:call-template name="core:AbstractFeatureWithLifespan_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractDynamizer">
         <xsl:call-template name="core:AbstractDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:CityModel">
         <xsl:call-template name="core:CityModel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPointCloud">
         <xsl:call-template name="core:AbstractPointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:PointCloud">
         <xsl:call-template name="pcl:PointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:Address">
         <xsl:call-template name="core:Address_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractTimeseries">
         <xsl:call-template name="dyn:AbstractTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractAtomicTimeseries">
         <xsl:call-template name="dyn:AbstractAtomicTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:CompositeTimeseries">
         <xsl:call-template name="dyn:CompositeTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="core:CityObjectRelationType_Template">
      <xsl:for-each select="./core:genericAttribute">
         <xsl:call-template name="core:genericAttribute_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:relationType">
         <xsl:call-template name="core:relationType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:relatedTo">
         <xsl:call-template name="core:relatedTo_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="core:CityObjectRelationPropertyType_Template">
      <xsl:for-each select="./core:CityObjectRelation">
         <xsl:call-template name="core:CityObjectRelation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:ClosureSurfaceType_Template">
      <xsl:for-each select="./core:adeOfClosureSurface">
         <xsl:call-template name="core:adeOfClosureSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="core:ClosureSurfacePropertyType_Template">
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:ExternalReferenceType_Template">
      <xsl:for-each select="./core:targetResource">
         <xsl:call-template name="core:targetResource_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:informationSystem">
         <xsl:call-template name="core:informationSystem_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:relationType">
         <xsl:call-template name="core:relationType_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ExternalReferencePropertyType_Template">
      <xsl:for-each select="./core:ExternalReference">
         <xsl:call-template name="core:ExternalReference_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:ImplicitGeometryType_Template">
      <xsl:for-each select="./core:transformationMatrix">
         <xsl:call-template name="core:transformationMatrix_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:mimeType">
         <xsl:call-template name="core:mimeType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:libraryObject">
         <xsl:call-template name="core:libraryObject_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:referencePoint">
         <xsl:call-template name="core:referencePoint_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:relativeGeometry">
         <xsl:call-template name="core:relativeGeometry_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:appearance">
         <xsl:call-template name="core:appearance_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="core:ImplicitGeometryPropertyType_Template">
      <xsl:for-each select="./core:ImplicitGeometry">
         <xsl:call-template name="core:ImplicitGeometry_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="core:OccupancyType_Template">
      <xsl:for-each select="./core:numberOfOccupants">
         <xsl:call-template name="core:numberOfOccupants_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:interval">
         <xsl:call-template name="core:interval_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:occupantType">
         <xsl:call-template name="core:occupantType_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:OccupancyPropertyType_Template">
      <xsl:for-each select="./core:Occupancy">
         <xsl:call-template name="core:Occupancy_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:QualifiedAreaType_Template">
      <xsl:for-each select="./core:area">
         <xsl:call-template name="core:area_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:typeOfArea">
         <xsl:call-template name="core:typeOfArea_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:QualifiedAreaPropertyType_Template">
      <xsl:for-each select="./core:QualifiedArea">
         <xsl:call-template name="core:QualifiedArea_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:QualifiedVolumeType_Template">
      <xsl:for-each select="./core:volume">
         <xsl:call-template name="core:volume_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:typeOfVolume">
         <xsl:call-template name="core:typeOfVolume_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="core:QualifiedVolumePropertyType_Template">
      <xsl:for-each select="./core:QualifiedVolume">
         <xsl:call-template name="core:QualifiedVolume_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="grp:ADEOfCityObjectGroupType_Template"/>
   <xsl:template name="grp:ADEOfCityObjectGroupPropertyType_Template">
      <xsl:for-each select="./grp:ADEOfCityObjectGroup">
         <xsl:call-template name="grp:ADEOfCityObjectGroup_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="grp:CityObjectGroupType_Template">
      <xsl:for-each select="./grp:class">
         <xsl:call-template name="grp:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:function">
         <xsl:call-template name="grp:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:usage">
         <xsl:call-template name="grp:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:groupMember">
         <xsl:call-template name="grp:groupMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:parent">
         <xsl:call-template name="grp:parent_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:adeOfCityObjectGroup">
         <xsl:call-template name="grp:adeOfCityObjectGroup_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractLogicalSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="grp:groupMember_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="grp:CityObjectGroupPropertyType_Template">
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="grp:RoleType_Template">
      <xsl:for-each select="./grp:role">
         <xsl:call-template name="grp:role_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:groupMember">
         <xsl:call-template name="grp:groupMember_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="grp:RolePropertyType_Template">
      <xsl:for-each select="./grp:Role">
         <xsl:call-template name="grp:Role_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractConstructionType_Template"/>
   <xsl:template name="con:ADEOfAbstractConstructionPropertyType_Template">
      <xsl:for-each select="./con:ADEOfAbstractConstruction">
         <xsl:call-template name="con:ADEOfAbstractConstruction_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractConstructionSurfaceType_Template"/>
   <xsl:template name="con:ADEOfAbstractConstructionSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfAbstractConstructionSurface">
         <xsl:call-template name="con:ADEOfAbstractConstructionSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractConstructiveElementType_Template"/>
   <xsl:template name="con:ADEOfAbstractConstructiveElementPropertyType_Template">
      <xsl:for-each select="./con:ADEOfAbstractConstructiveElement">
         <xsl:call-template name="con:ADEOfAbstractConstructiveElement_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractFillingElementType_Template"/>
   <xsl:template name="con:ADEOfAbstractFillingElementPropertyType_Template">
      <xsl:for-each select="./con:ADEOfAbstractFillingElement">
         <xsl:call-template name="con:ADEOfAbstractFillingElement_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractFillingSurfaceType_Template"/>
   <xsl:template name="con:ADEOfAbstractFillingSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfAbstractFillingSurface">
         <xsl:call-template name="con:ADEOfAbstractFillingSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractFurnitureType_Template"/>
   <xsl:template name="con:ADEOfAbstractFurniturePropertyType_Template">
      <xsl:for-each select="./con:ADEOfAbstractFurniture">
         <xsl:call-template name="con:ADEOfAbstractFurniture_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractInstallationType_Template"/>
   <xsl:template name="con:ADEOfAbstractInstallationPropertyType_Template">
      <xsl:for-each select="./con:ADEOfAbstractInstallation">
         <xsl:call-template name="con:ADEOfAbstractInstallation_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfCeilingSurfaceType_Template"/>
   <xsl:template name="con:ADEOfCeilingSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfCeilingSurface">
         <xsl:call-template name="con:ADEOfCeilingSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfDoorType_Template"/>
   <xsl:template name="con:ADEOfDoorPropertyType_Template">
      <xsl:for-each select="./con:ADEOfDoor">
         <xsl:call-template name="con:ADEOfDoor_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfDoorSurfaceType_Template"/>
   <xsl:template name="con:ADEOfDoorSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfDoorSurface">
         <xsl:call-template name="con:ADEOfDoorSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfFloorSurfaceType_Template"/>
   <xsl:template name="con:ADEOfFloorSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfFloorSurface">
         <xsl:call-template name="con:ADEOfFloorSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfGroundSurfaceType_Template"/>
   <xsl:template name="con:ADEOfGroundSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfGroundSurface">
         <xsl:call-template name="con:ADEOfGroundSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfInteriorWallSurfaceType_Template"/>
   <xsl:template name="con:ADEOfInteriorWallSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfInteriorWallSurface">
         <xsl:call-template name="con:ADEOfInteriorWallSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfOtherConstructionType_Template"/>
   <xsl:template name="con:ADEOfOtherConstructionPropertyType_Template">
      <xsl:for-each select="./con:ADEOfOtherConstruction">
         <xsl:call-template name="con:ADEOfOtherConstruction_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfOuterCeilingSurfaceType_Template"/>
   <xsl:template name="con:ADEOfOuterCeilingSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfOuterCeilingSurface">
         <xsl:call-template name="con:ADEOfOuterCeilingSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfOuterFloorSurfaceType_Template"/>
   <xsl:template name="con:ADEOfOuterFloorSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfOuterFloorSurface">
         <xsl:call-template name="con:ADEOfOuterFloorSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfRoofSurfaceType_Template"/>
   <xsl:template name="con:ADEOfRoofSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfRoofSurface">
         <xsl:call-template name="con:ADEOfRoofSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfWallSurfaceType_Template"/>
   <xsl:template name="con:ADEOfWallSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfWallSurface">
         <xsl:call-template name="con:ADEOfWallSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfWindowType_Template"/>
   <xsl:template name="con:ADEOfWindowPropertyType_Template">
      <xsl:for-each select="./con:ADEOfWindow">
         <xsl:call-template name="con:ADEOfWindow_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ADEOfWindowSurfaceType_Template"/>
   <xsl:template name="con:ADEOfWindowSurfacePropertyType_Template">
      <xsl:for-each select="./con:ADEOfWindowSurface">
         <xsl:call-template name="con:ADEOfWindowSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:AbstractConstructionType_Template">
      <xsl:for-each select="./con:conditionOfConstruction">
         <xsl:call-template name="con:conditionOfConstruction_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:dateOfConstruction">
         <xsl:call-template name="con:dateOfConstruction_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:dateOfDemolition">
         <xsl:call-template name="con:dateOfDemolition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:constructionEvent">
         <xsl:call-template name="con:constructionEvent_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:elevation">
         <xsl:call-template name="con:elevation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:height">
         <xsl:call-template name="con:height_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:occupancy">
         <xsl:call-template name="con:occupancy_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:adeOfAbstractConstruction">
         <xsl:call-template name="con:adeOfAbstractConstruction_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractOccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractConstructionPropertyType_Template">
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractConstructionSurfaceType_Template">
      <xsl:for-each select="./con:fillingSurface">
         <xsl:call-template name="con:fillingSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:adeOfAbstractConstructionSurface">
         <xsl:call-template name="con:adeOfAbstractConstructionSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractConstructionSurfacePropertyType_Template">
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractConstructiveElementType_Template">
      <xsl:for-each select="./con:isStructuralElement">
         <xsl:call-template name="con:isStructuralElement_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:filling">
         <xsl:call-template name="con:filling_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:adeOfAbstractConstructiveElement">
         <xsl:call-template name="con:adeOfAbstractConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractOccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractConstructiveElementPropertyType_Template">
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractFillingElementType_Template">
      <xsl:for-each select="./con:adeOfAbstractFillingElement">
         <xsl:call-template name="con:adeOfAbstractFillingElement_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractOccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractFillingElementPropertyType_Template">
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractFillingSurfaceType_Template">
      <xsl:for-each select="./con:adeOfAbstractFillingSurface">
         <xsl:call-template name="con:adeOfAbstractFillingSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractFillingSurfacePropertyType_Template">
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractFurnitureType_Template">
      <xsl:for-each select="./con:adeOfAbstractFurniture">
         <xsl:call-template name="con:adeOfAbstractFurniture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractOccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractFurniturePropertyType_Template">
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractInstallationType_Template">
      <xsl:for-each select="./con:relationToConstruction">
         <xsl:call-template name="con:relationToConstruction_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:adeOfAbstractInstallation">
         <xsl:call-template name="con:adeOfAbstractInstallation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractOccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:AbstractInstallationPropertyType_Template">
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:CeilingSurfaceType_Template">
      <xsl:for-each select="./con:adeOfCeilingSurface">
         <xsl:call-template name="con:adeOfCeilingSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:CeilingSurfacePropertyType_Template">
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:ConstructionEventType_Template">
      <xsl:for-each select="./con:event">
         <xsl:call-template name="con:event_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:dateOfEvent">
         <xsl:call-template name="con:dateOfEvent_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:description">
         <xsl:call-template name="con:description_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ConstructionEventPropertyType_Template">
      <xsl:for-each select="./con:ConstructionEvent">
         <xsl:call-template name="con:ConstructionEvent_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:DoorType_Template">
      <xsl:for-each select="./con:class">
         <xsl:call-template name="con:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:function">
         <xsl:call-template name="con:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:usage">
         <xsl:call-template name="con:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:address">
         <xsl:call-template name="con:address_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:adeOfDoor">
         <xsl:call-template name="con:adeOfDoor_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractFillingElementType_Template"/>
   </xsl:template>
   <xsl:template name="con:DoorPropertyType_Template">
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:DoorSurfaceType_Template">
      <xsl:for-each select="./con:address">
         <xsl:call-template name="con:address_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:adeOfDoorSurface">
         <xsl:call-template name="con:adeOfDoorSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractFillingSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:DoorSurfacePropertyType_Template">
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:ElevationType_Template">
      <xsl:for-each select="./con:elevationReference">
         <xsl:call-template name="con:elevationReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:elevationValue">
         <xsl:call-template name="con:elevationValue_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:ElevationPropertyType_Template">
      <xsl:for-each select="./con:Elevation">
         <xsl:call-template name="con:Elevation_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:FloorSurfaceType_Template">
      <xsl:for-each select="./con:adeOfFloorSurface">
         <xsl:call-template name="con:adeOfFloorSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:FloorSurfacePropertyType_Template">
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:GroundSurfaceType_Template">
      <xsl:for-each select="./con:adeOfGroundSurface">
         <xsl:call-template name="con:adeOfGroundSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:GroundSurfacePropertyType_Template">
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:HeightType_Template">
      <xsl:for-each select="./con:highReference">
         <xsl:call-template name="con:highReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:lowReference">
         <xsl:call-template name="con:lowReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:status">
         <xsl:call-template name="con:status_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:value">
         <xsl:call-template name="con:value_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:HeightPropertyType_Template">
      <xsl:for-each select="./con:Height">
         <xsl:call-template name="con:Height_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="con:InteriorWallSurfaceType_Template">
      <xsl:for-each select="./con:adeOfInteriorWallSurface">
         <xsl:call-template name="con:adeOfInteriorWallSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:InteriorWallSurfacePropertyType_Template">
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:OtherConstructionType_Template">
      <xsl:for-each select="./con:class">
         <xsl:call-template name="con:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:function">
         <xsl:call-template name="con:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:usage">
         <xsl:call-template name="con:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:adeOfOtherConstruction">
         <xsl:call-template name="con:adeOfOtherConstruction_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionType_Template"/>
   </xsl:template>
   <xsl:template name="con:OtherConstructionPropertyType_Template">
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:OuterCeilingSurfaceType_Template">
      <xsl:for-each select="./con:adeOfOuterCeilingSurface">
         <xsl:call-template name="con:adeOfOuterCeilingSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:OuterCeilingSurfacePropertyType_Template">
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:OuterFloorSurfaceType_Template">
      <xsl:for-each select="./con:adeOfOuterFloorSurface">
         <xsl:call-template name="con:adeOfOuterFloorSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:OuterFloorSurfacePropertyType_Template">
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:RoofSurfaceType_Template">
      <xsl:for-each select="./con:adeOfRoofSurface">
         <xsl:call-template name="con:adeOfRoofSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:RoofSurfacePropertyType_Template">
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:WallSurfaceType_Template">
      <xsl:for-each select="./con:adeOfWallSurface">
         <xsl:call-template name="con:adeOfWallSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:WallSurfacePropertyType_Template">
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:WindowType_Template">
      <xsl:for-each select="./con:class">
         <xsl:call-template name="con:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:function">
         <xsl:call-template name="con:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:usage">
         <xsl:call-template name="con:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./con:adeOfWindow">
         <xsl:call-template name="con:adeOfWindow_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractFillingElementType_Template"/>
   </xsl:template>
   <xsl:template name="con:WindowPropertyType_Template">
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="con:WindowSurfaceType_Template">
      <xsl:for-each select="./con:adeOfWindowSurface">
         <xsl:call-template name="con:adeOfWindowSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractFillingSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="con:WindowSurfacePropertyType_Template">
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dyn:ADEOfAbstractAtomicTimeseriesType_Template"/>
   <xsl:template name="dyn:ADEOfAbstractAtomicTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:ADEOfAbstractAtomicTimeseries">
         <xsl:call-template name="dyn:ADEOfAbstractAtomicTimeseries_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:ADEOfAbstractTimeseriesType_Template"/>
   <xsl:template name="dyn:ADEOfAbstractTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:ADEOfAbstractTimeseries">
         <xsl:call-template name="dyn:ADEOfAbstractTimeseries_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:ADEOfCompositeTimeseriesType_Template"/>
   <xsl:template name="dyn:ADEOfCompositeTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:ADEOfCompositeTimeseries">
         <xsl:call-template name="dyn:ADEOfCompositeTimeseries_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:ADEOfDynamizerType_Template"/>
   <xsl:template name="dyn:ADEOfDynamizerPropertyType_Template">
      <xsl:for-each select="./dyn:ADEOfDynamizer">
         <xsl:call-template name="dyn:ADEOfDynamizer_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:ADEOfGenericTimeseriesType_Template"/>
   <xsl:template name="dyn:ADEOfGenericTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:ADEOfGenericTimeseries">
         <xsl:call-template name="dyn:ADEOfGenericTimeseries_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:ADEOfStandardFileTimeseriesType_Template"/>
   <xsl:template name="dyn:ADEOfStandardFileTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:ADEOfStandardFileTimeseries">
         <xsl:call-template name="dyn:ADEOfStandardFileTimeseries_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:ADEOfTabulatedFileTimeseriesType_Template"/>
   <xsl:template name="dyn:ADEOfTabulatedFileTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:ADEOfTabulatedFileTimeseries">
         <xsl:call-template name="dyn:ADEOfTabulatedFileTimeseries_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:AbstractAtomicTimeseriesType_Template">
      <xsl:for-each select="./dyn:observationProperty">
         <xsl:call-template name="dyn:observationProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:uom">
         <xsl:call-template name="dyn:uom_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:adeOfAbstractAtomicTimeseries">
         <xsl:call-template name="dyn:adeOfAbstractAtomicTimeseries_Property"/>
      </xsl:for-each>
      <xsl:call-template name="dyn:AbstractTimeseriesType_Template"/>
   </xsl:template>
   <xsl:template name="dyn:AbstractAtomicTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:AbstractAtomicTimeseries">
         <xsl:call-template name="dyn:AbstractAtomicTimeseries_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dyn:AbstractTimeseriesType_Template">
      <xsl:for-each select="./dyn:firstTimestamp">
         <xsl:call-template name="dyn:firstTimestamp_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:lastTimestamp">
         <xsl:call-template name="dyn:lastTimestamp_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:adeOfAbstractTimeseries">
         <xsl:call-template name="dyn:adeOfAbstractTimeseries_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="dyn:AbstractTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:AbstractTimeseries">
         <xsl:call-template name="dyn:AbstractTimeseries_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractAtomicTimeseries">
         <xsl:call-template name="dyn:AbstractAtomicTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:CompositeTimeseries">
         <xsl:call-template name="dyn:CompositeTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dyn:CompositeTimeseriesType_Template">
      <xsl:for-each select="./dyn:component">
         <xsl:call-template name="dyn:component_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:adeOfCompositeTimeseries">
         <xsl:call-template name="dyn:adeOfCompositeTimeseries_Property"/>
      </xsl:for-each>
      <xsl:call-template name="dyn:AbstractTimeseriesType_Template"/>
   </xsl:template>
   <xsl:template name="dyn:CompositeTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:CompositeTimeseries">
         <xsl:call-template name="dyn:CompositeTimeseries_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dyn:DynamizerType_Template">
      <xsl:for-each select="./dyn:attributeRef">
         <xsl:call-template name="dyn:attributeRef_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:startTime">
         <xsl:call-template name="dyn:startTime_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:endTime">
         <xsl:call-template name="dyn:endTime_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:dynamicData">
         <xsl:call-template name="dyn:dynamicData_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:sensorConnection">
         <xsl:call-template name="dyn:sensorConnection_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:adeOfDynamizer">
         <xsl:call-template name="dyn:adeOfDynamizer_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractDynamizerType_Template"/>
   </xsl:template>
   <xsl:template name="dyn:dynamicData_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="dyn:DynamizerPropertyType_Template">
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dyn:GenericTimeseriesType_Template">
      <xsl:for-each select="./dyn:valueType">
         <xsl:call-template name="dyn:valueType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:timeValuePair">
         <xsl:call-template name="dyn:timeValuePair_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:adeOfGenericTimeseries">
         <xsl:call-template name="dyn:adeOfGenericTimeseries_Property"/>
      </xsl:for-each>
      <xsl:call-template name="dyn:AbstractAtomicTimeseriesType_Template"/>
   </xsl:template>
   <xsl:template name="dyn:GenericTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dyn:SensorConnectionType_Template">
      <xsl:for-each select="./dyn:connectionType">
         <xsl:call-template name="dyn:connectionType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:observationProperty">
         <xsl:call-template name="dyn:observationProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:uom">
         <xsl:call-template name="dyn:uom_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:sensorID">
         <xsl:call-template name="dyn:sensorID_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:sensorName">
         <xsl:call-template name="dyn:sensorName_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:observationID">
         <xsl:call-template name="dyn:observationID_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:datastreamID">
         <xsl:call-template name="dyn:datastreamID_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:baseURL">
         <xsl:call-template name="dyn:baseURL_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:authType">
         <xsl:call-template name="dyn:authType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:mqttServer">
         <xsl:call-template name="dyn:mqttServer_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:mqttTopic">
         <xsl:call-template name="dyn:mqttTopic_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:linkToObservation">
         <xsl:call-template name="dyn:linkToObservation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:linkToSensorDescription">
         <xsl:call-template name="dyn:linkToSensorDescription_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:sensorLocation">
         <xsl:call-template name="dyn:sensorLocation_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:SensorConnectionPropertyType_Template">
      <xsl:for-each select="./dyn:SensorConnection">
         <xsl:call-template name="dyn:SensorConnection_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:StandardFileTimeseriesType_Template">
      <xsl:for-each select="./dyn:fileLocation">
         <xsl:call-template name="dyn:fileLocation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:fileType">
         <xsl:call-template name="dyn:fileType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:mimeType">
         <xsl:call-template name="dyn:mimeType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:adeOfStandardFileTimeseries">
         <xsl:call-template name="dyn:adeOfStandardFileTimeseries_Property"/>
      </xsl:for-each>
      <xsl:call-template name="dyn:AbstractAtomicTimeseriesType_Template"/>
   </xsl:template>
   <xsl:template name="dyn:StandardFileTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dyn:TabulatedFileTimeseriesType_Template">
      <xsl:for-each select="./dyn:fileLocation">
         <xsl:call-template name="dyn:fileLocation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:fileType">
         <xsl:call-template name="dyn:fileType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:mimeType">
         <xsl:call-template name="dyn:mimeType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:valueType">
         <xsl:call-template name="dyn:valueType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:numberOfHeaderLines">
         <xsl:call-template name="dyn:numberOfHeaderLines_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:fieldSeparator">
         <xsl:call-template name="dyn:fieldSeparator_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:decimalSymbol">
         <xsl:call-template name="dyn:decimalSymbol_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:idColumnNo">
         <xsl:call-template name="dyn:idColumnNo_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:idColumnName">
         <xsl:call-template name="dyn:idColumnName_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:idValue">
         <xsl:call-template name="dyn:idValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:timeColumnNo">
         <xsl:call-template name="dyn:timeColumnNo_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:timeColumnName">
         <xsl:call-template name="dyn:timeColumnName_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:valueColumnNo">
         <xsl:call-template name="dyn:valueColumnNo_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:valueColumnName">
         <xsl:call-template name="dyn:valueColumnName_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:adeOfTabulatedFileTimeseries">
         <xsl:call-template name="dyn:adeOfTabulatedFileTimeseries_Property"/>
      </xsl:for-each>
      <xsl:call-template name="dyn:AbstractAtomicTimeseriesType_Template"/>
   </xsl:template>
   <xsl:template name="dyn:TabulatedFileTimeseriesPropertyType_Template">
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dyn:TimeValuePairType_Template">
      <xsl:for-each select="./dyn:timestamp">
         <xsl:call-template name="dyn:timestamp_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:intValue">
         <xsl:call-template name="dyn:intValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:doubleValue">
         <xsl:call-template name="dyn:doubleValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:stringValue">
         <xsl:call-template name="dyn:stringValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:geometryValue">
         <xsl:call-template name="dyn:geometryValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:uriValue">
         <xsl:call-template name="dyn:uriValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:boolValue">
         <xsl:call-template name="dyn:boolValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:implicitGeometryValue">
         <xsl:call-template name="dyn:implicitGeometryValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:appearanceValue">
         <xsl:call-template name="dyn:appearanceValue_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:implicitGeometryValue_Template">
      <xsl:call-template name="gml:AbstractMemberType_Template"/>
   </xsl:template>
   <xsl:template name="dyn:appearanceValue_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="dyn:TimeValuePairPropertyType_Template">
      <xsl:for-each select="./dyn:TimeValuePair">
         <xsl:call-template name="dyn:TimeValuePair_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:TimeseriesComponentType_Template">
      <xsl:for-each select="./dyn:repetitions">
         <xsl:call-template name="dyn:repetitions_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:additionalGap">
         <xsl:call-template name="dyn:additionalGap_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:timeseries">
         <xsl:call-template name="dyn:timeseries_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dyn:TimeseriesComponentPropertyType_Template">
      <xsl:for-each select="./dyn:TimeseriesComponent">
         <xsl:call-template name="dyn:TimeseriesComponent_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericLogicalSpaceType_Template"/>
   <xsl:template name="gen:ADEOfGenericLogicalSpacePropertyType_Template">
      <xsl:for-each select="./gen:ADEOfGenericLogicalSpace">
         <xsl:call-template name="gen:ADEOfGenericLogicalSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericOccupiedSpaceType_Template"/>
   <xsl:template name="gen:ADEOfGenericOccupiedSpacePropertyType_Template">
      <xsl:for-each select="./gen:ADEOfGenericOccupiedSpace">
         <xsl:call-template name="gen:ADEOfGenericOccupiedSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericThematicSurfaceType_Template"/>
   <xsl:template name="gen:ADEOfGenericThematicSurfacePropertyType_Template">
      <xsl:for-each select="./gen:ADEOfGenericThematicSurface">
         <xsl:call-template name="gen:ADEOfGenericThematicSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericUnoccupiedSpaceType_Template"/>
   <xsl:template name="gen:ADEOfGenericUnoccupiedSpacePropertyType_Template">
      <xsl:for-each select="./gen:ADEOfGenericUnoccupiedSpace">
         <xsl:call-template name="gen:ADEOfGenericUnoccupiedSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:CodeAttributeType_Template">
      <xsl:for-each select="./gen:name">
         <xsl:call-template name="gen:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:value">
         <xsl:call-template name="gen:value_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractGenericAttributeType_Template"/>
   </xsl:template>
   <xsl:template name="gen:CodeAttributePropertyType_Template">
      <xsl:for-each select="./gen:CodeAttribute">
         <xsl:call-template name="gen:CodeAttribute_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:DateAttributeType_Template">
      <xsl:for-each select="./gen:name">
         <xsl:call-template name="gen:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:value">
         <xsl:call-template name="gen:value_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractGenericAttributeType_Template"/>
   </xsl:template>
   <xsl:template name="gen:DateAttributePropertyType_Template">
      <xsl:for-each select="./gen:DateAttribute">
         <xsl:call-template name="gen:DateAttribute_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:DoubleAttributeType_Template">
      <xsl:for-each select="./gen:name">
         <xsl:call-template name="gen:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:value">
         <xsl:call-template name="gen:value_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractGenericAttributeType_Template"/>
   </xsl:template>
   <xsl:template name="gen:DoubleAttributePropertyType_Template">
      <xsl:for-each select="./gen:DoubleAttribute">
         <xsl:call-template name="gen:DoubleAttribute_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:GenericAttributeSetType_Template">
      <xsl:for-each select="./gen:name">
         <xsl:call-template name="gen:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:codeSpace">
         <xsl:call-template name="gen:codeSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:genericAttribute">
         <xsl:call-template name="gen:genericAttribute_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractGenericAttributeType_Template"/>
   </xsl:template>
   <xsl:template name="gen:GenericAttributeSetPropertyType_Template">
      <xsl:for-each select="./gen:GenericAttributeSet">
         <xsl:call-template name="gen:GenericAttributeSet_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:GenericLogicalSpaceType_Template">
      <xsl:for-each select="./gen:class">
         <xsl:call-template name="gen:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:function">
         <xsl:call-template name="gen:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:usage">
         <xsl:call-template name="gen:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:adeOfGenericLogicalSpace">
         <xsl:call-template name="gen:adeOfGenericLogicalSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractLogicalSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="gen:GenericLogicalSpacePropertyType_Template">
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gen:GenericOccupiedSpaceType_Template">
      <xsl:for-each select="./gen:class">
         <xsl:call-template name="gen:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:function">
         <xsl:call-template name="gen:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:usage">
         <xsl:call-template name="gen:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:adeOfGenericOccupiedSpace">
         <xsl:call-template name="gen:adeOfGenericOccupiedSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractOccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="gen:GenericOccupiedSpacePropertyType_Template">
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gen:GenericThematicSurfaceType_Template">
      <xsl:for-each select="./gen:class">
         <xsl:call-template name="gen:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:function">
         <xsl:call-template name="gen:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:usage">
         <xsl:call-template name="gen:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:adeOfGenericThematicSurface">
         <xsl:call-template name="gen:adeOfGenericThematicSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="gen:GenericThematicSurfacePropertyType_Template">
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gen:GenericUnoccupiedSpaceType_Template">
      <xsl:for-each select="./gen:class">
         <xsl:call-template name="gen:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:function">
         <xsl:call-template name="gen:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:usage">
         <xsl:call-template name="gen:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:adeOfGenericUnoccupiedSpace">
         <xsl:call-template name="gen:adeOfGenericUnoccupiedSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractUnoccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="gen:GenericUnoccupiedSpacePropertyType_Template">
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gen:IntAttributeType_Template">
      <xsl:for-each select="./gen:name">
         <xsl:call-template name="gen:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:value">
         <xsl:call-template name="gen:value_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractGenericAttributeType_Template"/>
   </xsl:template>
   <xsl:template name="gen:IntAttributePropertyType_Template">
      <xsl:for-each select="./gen:IntAttribute">
         <xsl:call-template name="gen:IntAttribute_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:MeasureAttributeType_Template">
      <xsl:for-each select="./gen:name">
         <xsl:call-template name="gen:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:value">
         <xsl:call-template name="gen:value_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractGenericAttributeType_Template"/>
   </xsl:template>
   <xsl:template name="gen:MeasureAttributePropertyType_Template">
      <xsl:for-each select="./gen:MeasureAttribute">
         <xsl:call-template name="gen:MeasureAttribute_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:StringAttributeType_Template">
      <xsl:for-each select="./gen:name">
         <xsl:call-template name="gen:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:value">
         <xsl:call-template name="gen:value_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractGenericAttributeType_Template"/>
   </xsl:template>
   <xsl:template name="gen:StringAttributePropertyType_Template">
      <xsl:for-each select="./gen:StringAttribute">
         <xsl:call-template name="gen:StringAttribute_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gen:UriAttributeType_Template">
      <xsl:for-each select="./gen:name">
         <xsl:call-template name="gen:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:value">
         <xsl:call-template name="gen:value_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractGenericAttributeType_Template"/>
   </xsl:template>
   <xsl:template name="gen:UriAttributePropertyType_Template">
      <xsl:for-each select="./gen:UriAttribute">
         <xsl:call-template name="gen:UriAttribute_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="luse:ADEOfLandUseType_Template"/>
   <xsl:template name="luse:ADEOfLandUsePropertyType_Template">
      <xsl:for-each select="./luse:ADEOfLandUse">
         <xsl:call-template name="luse:ADEOfLandUse_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="luse:LandUseType_Template">
      <xsl:for-each select="./luse:class">
         <xsl:call-template name="luse:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:function">
         <xsl:call-template name="luse:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:usage">
         <xsl:call-template name="luse:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:adeOfLandUse">
         <xsl:call-template name="luse:adeOfLandUse_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="luse:LandUsePropertyType_Template">
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="pcl:ADEOfPointCloudType_Template"/>
   <xsl:template name="pcl:ADEOfPointCloudPropertyType_Template">
      <xsl:for-each select="./pcl:ADEOfPointCloud">
         <xsl:call-template name="pcl:ADEOfPointCloud_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="pcl:PointCloudType_Template">
      <xsl:for-each select="./pcl:mimeType">
         <xsl:call-template name="pcl:mimeType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:pointFile">
         <xsl:call-template name="pcl:pointFile_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:pointFileSrsName">
         <xsl:call-template name="pcl:pointFileSrsName_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:points">
         <xsl:call-template name="pcl:points_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:adeOfPointCloud">
         <xsl:call-template name="pcl:adeOfPointCloud_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractPointCloudType_Template"/>
   </xsl:template>
   <xsl:template name="pcl:PointCloudPropertyType_Template">
      <xsl:for-each select="./pcl:PointCloud">
         <xsl:call-template name="pcl:PointCloud_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dem:ADEOfAbstractReliefComponentType_Template"/>
   <xsl:template name="dem:ADEOfAbstractReliefComponentPropertyType_Template">
      <xsl:for-each select="./dem:ADEOfAbstractReliefComponent">
         <xsl:call-template name="dem:ADEOfAbstractReliefComponent_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dem:ADEOfBreaklineReliefType_Template"/>
   <xsl:template name="dem:ADEOfBreaklineReliefPropertyType_Template">
      <xsl:for-each select="./dem:ADEOfBreaklineRelief">
         <xsl:call-template name="dem:ADEOfBreaklineRelief_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dem:ADEOfMassPointReliefType_Template"/>
   <xsl:template name="dem:ADEOfMassPointReliefPropertyType_Template">
      <xsl:for-each select="./dem:ADEOfMassPointRelief">
         <xsl:call-template name="dem:ADEOfMassPointRelief_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dem:ADEOfRasterReliefType_Template"/>
   <xsl:template name="dem:ADEOfRasterReliefPropertyType_Template">
      <xsl:for-each select="./dem:ADEOfRasterRelief">
         <xsl:call-template name="dem:ADEOfRasterRelief_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dem:ADEOfReliefFeatureType_Template"/>
   <xsl:template name="dem:ADEOfReliefFeaturePropertyType_Template">
      <xsl:for-each select="./dem:ADEOfReliefFeature">
         <xsl:call-template name="dem:ADEOfReliefFeature_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dem:ADEOfTINReliefType_Template"/>
   <xsl:template name="dem:ADEOfTINReliefPropertyType_Template">
      <xsl:for-each select="./dem:ADEOfTINRelief">
         <xsl:call-template name="dem:ADEOfTINRelief_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="dem:AbstractReliefComponentType_Template">
      <xsl:for-each select="./dem:lod">
         <xsl:call-template name="dem:lod_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:extent">
         <xsl:call-template name="dem:extent_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:adeOfAbstractReliefComponent">
         <xsl:call-template name="dem:adeOfAbstractReliefComponent_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractSpaceBoundaryType_Template"/>
   </xsl:template>
   <xsl:template name="dem:AbstractReliefComponentPropertyType_Template">
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dem:BreaklineReliefType_Template">
      <xsl:for-each select="./dem:ridgeOrValleyLines">
         <xsl:call-template name="dem:ridgeOrValleyLines_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:breaklines">
         <xsl:call-template name="dem:breaklines_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:adeOfBreaklineRelief">
         <xsl:call-template name="dem:adeOfBreaklineRelief_Property"/>
      </xsl:for-each>
      <xsl:call-template name="dem:AbstractReliefComponentType_Template"/>
   </xsl:template>
   <xsl:template name="dem:BreaklineReliefPropertyType_Template">
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dem:MassPointReliefType_Template">
      <xsl:for-each select="./dem:reliefPoints">
         <xsl:call-template name="dem:reliefPoints_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:pointCloud">
         <xsl:call-template name="dem:pointCloud_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:adeOfMassPointRelief">
         <xsl:call-template name="dem:adeOfMassPointRelief_Property"/>
      </xsl:for-each>
      <xsl:call-template name="dem:AbstractReliefComponentType_Template"/>
   </xsl:template>
   <xsl:template name="dem:MassPointReliefPropertyType_Template">
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dem:RasterReliefType_Template">
      <xsl:for-each select="./dem:grid">
         <xsl:call-template name="dem:grid_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:adeOfRasterRelief">
         <xsl:call-template name="dem:adeOfRasterRelief_Property"/>
      </xsl:for-each>
      <xsl:call-template name="dem:AbstractReliefComponentType_Template"/>
   </xsl:template>
   <xsl:template name="dem:grid_Template"/>
   <xsl:template name="dem:RasterReliefPropertyType_Template">
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dem:ReliefFeatureType_Template">
      <xsl:for-each select="./dem:lod">
         <xsl:call-template name="dem:lod_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:reliefComponent">
         <xsl:call-template name="dem:reliefComponent_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:adeOfReliefFeature">
         <xsl:call-template name="dem:adeOfReliefFeature_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractSpaceBoundaryType_Template"/>
   </xsl:template>
   <xsl:template name="dem:reliefComponent_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="dem:ReliefFeaturePropertyType_Template">
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="dem:TINReliefType_Template">
      <xsl:for-each select="./dem:tin">
         <xsl:call-template name="dem:tin_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:adeOfTINRelief">
         <xsl:call-template name="dem:adeOfTINRelief_Property"/>
      </xsl:for-each>
      <xsl:call-template name="dem:AbstractReliefComponentType_Template"/>
   </xsl:template>
   <xsl:template name="dem:tin_Template"/>
   <xsl:template name="dem:TINReliefPropertyType_Template">
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfAbstractTransportationSpaceType_Template"/>
   <xsl:template name="tran:ADEOfAbstractTransportationSpacePropertyType_Template">
      <xsl:for-each select="./tran:ADEOfAbstractTransportationSpace">
         <xsl:call-template name="tran:ADEOfAbstractTransportationSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfAuxiliaryTrafficAreaType_Template"/>
   <xsl:template name="tran:ADEOfAuxiliaryTrafficAreaPropertyType_Template">
      <xsl:for-each select="./tran:ADEOfAuxiliaryTrafficArea">
         <xsl:call-template name="tran:ADEOfAuxiliaryTrafficArea_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfAuxiliaryTrafficSpaceType_Template"/>
   <xsl:template name="tran:ADEOfAuxiliaryTrafficSpacePropertyType_Template">
      <xsl:for-each select="./tran:ADEOfAuxiliaryTrafficSpace">
         <xsl:call-template name="tran:ADEOfAuxiliaryTrafficSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfClearanceSpaceType_Template"/>
   <xsl:template name="tran:ADEOfClearanceSpacePropertyType_Template">
      <xsl:for-each select="./tran:ADEOfClearanceSpace">
         <xsl:call-template name="tran:ADEOfClearanceSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfHoleType_Template"/>
   <xsl:template name="tran:ADEOfHolePropertyType_Template">
      <xsl:for-each select="./tran:ADEOfHole">
         <xsl:call-template name="tran:ADEOfHole_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfHoleSurfaceType_Template"/>
   <xsl:template name="tran:ADEOfHoleSurfacePropertyType_Template">
      <xsl:for-each select="./tran:ADEOfHoleSurface">
         <xsl:call-template name="tran:ADEOfHoleSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfIntersectionType_Template"/>
   <xsl:template name="tran:ADEOfIntersectionPropertyType_Template">
      <xsl:for-each select="./tran:ADEOfIntersection">
         <xsl:call-template name="tran:ADEOfIntersection_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfMarkingType_Template"/>
   <xsl:template name="tran:ADEOfMarkingPropertyType_Template">
      <xsl:for-each select="./tran:ADEOfMarking">
         <xsl:call-template name="tran:ADEOfMarking_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfRailwayType_Template"/>
   <xsl:template name="tran:ADEOfRailwayPropertyType_Template">
      <xsl:for-each select="./tran:ADEOfRailway">
         <xsl:call-template name="tran:ADEOfRailway_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfRoadType_Template"/>
   <xsl:template name="tran:ADEOfRoadPropertyType_Template">
      <xsl:for-each select="./tran:ADEOfRoad">
         <xsl:call-template name="tran:ADEOfRoad_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfSectionType_Template"/>
   <xsl:template name="tran:ADEOfSectionPropertyType_Template">
      <xsl:for-each select="./tran:ADEOfSection">
         <xsl:call-template name="tran:ADEOfSection_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfSquareType_Template"/>
   <xsl:template name="tran:ADEOfSquarePropertyType_Template">
      <xsl:for-each select="./tran:ADEOfSquare">
         <xsl:call-template name="tran:ADEOfSquare_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfTrackType_Template"/>
   <xsl:template name="tran:ADEOfTrackPropertyType_Template">
      <xsl:for-each select="./tran:ADEOfTrack">
         <xsl:call-template name="tran:ADEOfTrack_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfTrafficAreaType_Template"/>
   <xsl:template name="tran:ADEOfTrafficAreaPropertyType_Template">
      <xsl:for-each select="./tran:ADEOfTrafficArea">
         <xsl:call-template name="tran:ADEOfTrafficArea_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfTrafficSpaceType_Template"/>
   <xsl:template name="tran:ADEOfTrafficSpacePropertyType_Template">
      <xsl:for-each select="./tran:ADEOfTrafficSpace">
         <xsl:call-template name="tran:ADEOfTrafficSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:ADEOfWaterwayType_Template"/>
   <xsl:template name="tran:ADEOfWaterwayPropertyType_Template">
      <xsl:for-each select="./tran:ADEOfWaterway">
         <xsl:call-template name="tran:ADEOfWaterway_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tran:AbstractTransportationSpaceType_Template">
      <xsl:for-each select="./tran:trafficDirection">
         <xsl:call-template name="tran:trafficDirection_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:occupancy">
         <xsl:call-template name="tran:occupancy_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:trafficSpace">
         <xsl:call-template name="tran:trafficSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:auxiliaryTrafficSpace">
         <xsl:call-template name="tran:auxiliaryTrafficSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:hole">
         <xsl:call-template name="tran:hole_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:marking">
         <xsl:call-template name="tran:marking_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfAbstractTransportationSpace">
         <xsl:call-template name="tran:adeOfAbstractTransportationSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractUnoccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:trafficSpace_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tran:auxiliaryTrafficSpace_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tran:hole_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tran:marking_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tran:AbstractTransportationSpacePropertyType_Template">
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:AuxiliaryTrafficAreaType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:function">
         <xsl:call-template name="tran:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:usage">
         <xsl:call-template name="tran:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:surfaceMaterial">
         <xsl:call-template name="tran:surfaceMaterial_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfAuxiliaryTrafficArea">
         <xsl:call-template name="tran:adeOfAuxiliaryTrafficArea_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:AuxiliaryTrafficAreaPropertyType_Template">
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:AuxiliaryTrafficSpaceType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:function">
         <xsl:call-template name="tran:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:usage">
         <xsl:call-template name="tran:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:granularity">
         <xsl:call-template name="tran:granularity_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfAuxiliaryTrafficSpace">
         <xsl:call-template name="tran:adeOfAuxiliaryTrafficSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractUnoccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:AuxiliaryTrafficSpacePropertyType_Template">
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:ClearanceSpaceType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfClearanceSpace">
         <xsl:call-template name="tran:adeOfClearanceSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractUnoccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:ClearanceSpacePropertyType_Template">
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:HoleType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfHole">
         <xsl:call-template name="tran:adeOfHole_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractUnoccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:HolePropertyType_Template">
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:HoleSurfaceType_Template">
      <xsl:for-each select="./tran:adeOfHoleSurface">
         <xsl:call-template name="tran:adeOfHoleSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:HoleSurfacePropertyType_Template">
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:IntersectionType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfIntersection">
         <xsl:call-template name="tran:adeOfIntersection_Property"/>
      </xsl:for-each>
      <xsl:call-template name="tran:AbstractTransportationSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:IntersectionPropertyType_Template">
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:MarkingType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfMarking">
         <xsl:call-template name="tran:adeOfMarking_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:MarkingPropertyType_Template">
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:RailwayType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:function">
         <xsl:call-template name="tran:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:usage">
         <xsl:call-template name="tran:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:section">
         <xsl:call-template name="tran:section_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:intersection">
         <xsl:call-template name="tran:intersection_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfRailway">
         <xsl:call-template name="tran:adeOfRailway_Property"/>
      </xsl:for-each>
      <xsl:call-template name="tran:AbstractTransportationSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:section_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tran:intersection_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tran:RailwayPropertyType_Template">
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:RoadType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:function">
         <xsl:call-template name="tran:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:usage">
         <xsl:call-template name="tran:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:section">
         <xsl:call-template name="tran:section_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:intersection">
         <xsl:call-template name="tran:intersection_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfRoad">
         <xsl:call-template name="tran:adeOfRoad_Property"/>
      </xsl:for-each>
      <xsl:call-template name="tran:AbstractTransportationSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:RoadPropertyType_Template">
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:SectionType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfSection">
         <xsl:call-template name="tran:adeOfSection_Property"/>
      </xsl:for-each>
      <xsl:call-template name="tran:AbstractTransportationSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:SectionPropertyType_Template">
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:SquareType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:function">
         <xsl:call-template name="tran:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:usage">
         <xsl:call-template name="tran:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfSquare">
         <xsl:call-template name="tran:adeOfSquare_Property"/>
      </xsl:for-each>
      <xsl:call-template name="tran:AbstractTransportationSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:SquarePropertyType_Template">
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:TrackType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:function">
         <xsl:call-template name="tran:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:usage">
         <xsl:call-template name="tran:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:section">
         <xsl:call-template name="tran:section_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:intersection">
         <xsl:call-template name="tran:intersection_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfTrack">
         <xsl:call-template name="tran:adeOfTrack_Property"/>
      </xsl:for-each>
      <xsl:call-template name="tran:AbstractTransportationSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:TrackPropertyType_Template">
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:TrafficAreaType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:function">
         <xsl:call-template name="tran:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:usage">
         <xsl:call-template name="tran:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:surfaceMaterial">
         <xsl:call-template name="tran:surfaceMaterial_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfTrafficArea">
         <xsl:call-template name="tran:adeOfTrafficArea_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:TrafficAreaPropertyType_Template">
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:TrafficSpaceType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:function">
         <xsl:call-template name="tran:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:usage">
         <xsl:call-template name="tran:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:granularity">
         <xsl:call-template name="tran:granularity_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:trafficDirection">
         <xsl:call-template name="tran:trafficDirection_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:occupancy">
         <xsl:call-template name="tran:occupancy_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:predecessor">
         <xsl:call-template name="tran:predecessor_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:successor">
         <xsl:call-template name="tran:successor_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:clearanceSpace">
         <xsl:call-template name="tran:clearanceSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfTrafficSpace">
         <xsl:call-template name="tran:adeOfTrafficSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractUnoccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:clearanceSpace_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tran:TrafficSpacePropertyType_Template">
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tran:WaterwayType_Template">
      <xsl:for-each select="./tran:class">
         <xsl:call-template name="tran:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:function">
         <xsl:call-template name="tran:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:usage">
         <xsl:call-template name="tran:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:section">
         <xsl:call-template name="tran:section_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:intersection">
         <xsl:call-template name="tran:intersection_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:adeOfWaterway">
         <xsl:call-template name="tran:adeOfWaterway_Property"/>
      </xsl:for-each>
      <xsl:call-template name="tran:AbstractTransportationSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tran:WaterwayPropertyType_Template">
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tun:ADEOfAbstractTunnelType_Template"/>
   <xsl:template name="tun:ADEOfAbstractTunnelPropertyType_Template">
      <xsl:for-each select="./tun:ADEOfAbstractTunnel">
         <xsl:call-template name="tun:ADEOfAbstractTunnel_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tun:ADEOfHollowSpaceType_Template"/>
   <xsl:template name="tun:ADEOfHollowSpacePropertyType_Template">
      <xsl:for-each select="./tun:ADEOfHollowSpace">
         <xsl:call-template name="tun:ADEOfHollowSpace_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelType_Template"/>
   <xsl:template name="tun:ADEOfTunnelPropertyType_Template">
      <xsl:for-each select="./tun:ADEOfTunnel">
         <xsl:call-template name="tun:ADEOfTunnel_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelConstructiveElementType_Template"/>
   <xsl:template name="tun:ADEOfTunnelConstructiveElementPropertyType_Template">
      <xsl:for-each select="./tun:ADEOfTunnelConstructiveElement">
         <xsl:call-template name="tun:ADEOfTunnelConstructiveElement_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelFurnitureType_Template"/>
   <xsl:template name="tun:ADEOfTunnelFurniturePropertyType_Template">
      <xsl:for-each select="./tun:ADEOfTunnelFurniture">
         <xsl:call-template name="tun:ADEOfTunnelFurniture_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelInstallationType_Template"/>
   <xsl:template name="tun:ADEOfTunnelInstallationPropertyType_Template">
      <xsl:for-each select="./tun:ADEOfTunnelInstallation">
         <xsl:call-template name="tun:ADEOfTunnelInstallation_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelPartType_Template"/>
   <xsl:template name="tun:ADEOfTunnelPartPropertyType_Template">
      <xsl:for-each select="./tun:ADEOfTunnelPart">
         <xsl:call-template name="tun:ADEOfTunnelPart_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="tun:AbstractTunnelType_Template">
      <xsl:for-each select="./tun:class">
         <xsl:call-template name="tun:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:function">
         <xsl:call-template name="tun:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:usage">
         <xsl:call-template name="tun:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:tunnelConstructiveElement">
         <xsl:call-template name="tun:tunnelConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:tunnelInstallation">
         <xsl:call-template name="tun:tunnelInstallation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:hollowSpace">
         <xsl:call-template name="tun:hollowSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:tunnelFurniture">
         <xsl:call-template name="tun:tunnelFurniture_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:adeOfAbstractTunnel">
         <xsl:call-template name="tun:adeOfAbstractTunnel_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructionType_Template"/>
   </xsl:template>
   <xsl:template name="tun:tunnelConstructiveElement_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tun:tunnelInstallation_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tun:hollowSpace_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tun:tunnelFurniture_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tun:AbstractTunnelPropertyType_Template">
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tun:HollowSpaceType_Template">
      <xsl:for-each select="./tun:class">
         <xsl:call-template name="tun:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:function">
         <xsl:call-template name="tun:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:usage">
         <xsl:call-template name="tun:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:tunnelFurniture">
         <xsl:call-template name="tun:tunnelFurniture_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:tunnelInstallation">
         <xsl:call-template name="tun:tunnelInstallation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:adeOfHollowSpace">
         <xsl:call-template name="tun:adeOfHollowSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractUnoccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="tun:HollowSpacePropertyType_Template">
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tun:TunnelType_Template">
      <xsl:for-each select="./tun:tunnelPart">
         <xsl:call-template name="tun:tunnelPart_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:adeOfTunnel">
         <xsl:call-template name="tun:adeOfTunnel_Property"/>
      </xsl:for-each>
      <xsl:call-template name="tun:AbstractTunnelType_Template"/>
   </xsl:template>
   <xsl:template name="tun:tunnelPart_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="tun:TunnelPropertyType_Template">
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tun:TunnelConstructiveElementType_Template">
      <xsl:for-each select="./tun:class">
         <xsl:call-template name="tun:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:function">
         <xsl:call-template name="tun:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:usage">
         <xsl:call-template name="tun:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:adeOfTunnelConstructiveElement">
         <xsl:call-template name="tun:adeOfTunnelConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractConstructiveElementType_Template"/>
   </xsl:template>
   <xsl:template name="tun:TunnelConstructiveElementPropertyType_Template">
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tun:TunnelFurnitureType_Template">
      <xsl:for-each select="./tun:class">
         <xsl:call-template name="tun:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:function">
         <xsl:call-template name="tun:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:usage">
         <xsl:call-template name="tun:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:adeOfTunnelFurniture">
         <xsl:call-template name="tun:adeOfTunnelFurniture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractFurnitureType_Template"/>
   </xsl:template>
   <xsl:template name="tun:TunnelFurniturePropertyType_Template">
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tun:TunnelInstallationType_Template">
      <xsl:for-each select="./tun:class">
         <xsl:call-template name="tun:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:function">
         <xsl:call-template name="tun:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:usage">
         <xsl:call-template name="tun:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:adeOfTunnelInstallation">
         <xsl:call-template name="tun:adeOfTunnelInstallation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="con:AbstractInstallationType_Template"/>
   </xsl:template>
   <xsl:template name="tun:TunnelInstallationPropertyType_Template">
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="tun:TunnelPartType_Template">
      <xsl:for-each select="./tun:adeOfTunnelPart">
         <xsl:call-template name="tun:adeOfTunnelPart_Property"/>
      </xsl:for-each>
      <xsl:call-template name="tun:AbstractTunnelType_Template"/>
   </xsl:template>
   <xsl:template name="tun:TunnelPartPropertyType_Template">
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="veg:ADEOfAbstractVegetationObjectType_Template"/>
   <xsl:template name="veg:ADEOfAbstractVegetationObjectPropertyType_Template">
      <xsl:for-each select="./veg:ADEOfAbstractVegetationObject">
         <xsl:call-template name="veg:ADEOfAbstractVegetationObject_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="veg:ADEOfPlantCoverType_Template"/>
   <xsl:template name="veg:ADEOfPlantCoverPropertyType_Template">
      <xsl:for-each select="./veg:ADEOfPlantCover">
         <xsl:call-template name="veg:ADEOfPlantCover_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="veg:ADEOfSolitaryVegetationObjectType_Template"/>
   <xsl:template name="veg:ADEOfSolitaryVegetationObjectPropertyType_Template">
      <xsl:for-each select="./veg:ADEOfSolitaryVegetationObject">
         <xsl:call-template name="veg:ADEOfSolitaryVegetationObject_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="veg:AbstractVegetationObjectType_Template">
      <xsl:for-each select="./veg:adeOfAbstractVegetationObject">
         <xsl:call-template name="veg:adeOfAbstractVegetationObject_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractOccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="veg:AbstractVegetationObjectPropertyType_Template">
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="veg:PlantCoverType_Template">
      <xsl:for-each select="./veg:class">
         <xsl:call-template name="veg:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:function">
         <xsl:call-template name="veg:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:usage">
         <xsl:call-template name="veg:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:averageHeight">
         <xsl:call-template name="veg:averageHeight_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:minHeight">
         <xsl:call-template name="veg:minHeight_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:maxHeight">
         <xsl:call-template name="veg:maxHeight_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:adeOfPlantCover">
         <xsl:call-template name="veg:adeOfPlantCover_Property"/>
      </xsl:for-each>
      <xsl:call-template name="veg:AbstractVegetationObjectType_Template"/>
   </xsl:template>
   <xsl:template name="veg:PlantCoverPropertyType_Template">
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="veg:SolitaryVegetationObjectType_Template">
      <xsl:for-each select="./veg:class">
         <xsl:call-template name="veg:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:function">
         <xsl:call-template name="veg:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:usage">
         <xsl:call-template name="veg:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:species">
         <xsl:call-template name="veg:species_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:height">
         <xsl:call-template name="veg:height_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:trunkDiameter">
         <xsl:call-template name="veg:trunkDiameter_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:crownDiameter">
         <xsl:call-template name="veg:crownDiameter_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:rootBallDiameter">
         <xsl:call-template name="veg:rootBallDiameter_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:maxRootBallDepth">
         <xsl:call-template name="veg:maxRootBallDepth_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:adeOfSolitaryVegetationObject">
         <xsl:call-template name="veg:adeOfSolitaryVegetationObject_Property"/>
      </xsl:for-each>
      <xsl:call-template name="veg:AbstractVegetationObjectType_Template"/>
   </xsl:template>
   <xsl:template name="veg:SolitaryVegetationObjectPropertyType_Template">
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="vers:ADEOfVersionType_Template"/>
   <xsl:template name="vers:ADEOfVersionPropertyType_Template">
      <xsl:for-each select="./vers:ADEOfVersion">
         <xsl:call-template name="vers:ADEOfVersion_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="vers:ADEOfVersionTransitionType_Template"/>
   <xsl:template name="vers:ADEOfVersionTransitionPropertyType_Template">
      <xsl:for-each select="./vers:ADEOfVersionTransition">
         <xsl:call-template name="vers:ADEOfVersionTransition_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="vers:TransactionType_Template">
      <xsl:for-each select="./vers:type">
         <xsl:call-template name="vers:type_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:oldFeature">
         <xsl:call-template name="vers:oldFeature_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:newFeature">
         <xsl:call-template name="vers:newFeature_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="vers:TransactionPropertyType_Template">
      <xsl:for-each select="./vers:Transaction">
         <xsl:call-template name="vers:Transaction_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="vers:VersionType_Template">
      <xsl:for-each select="./vers:tag">
         <xsl:call-template name="vers:tag_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:versionMember">
         <xsl:call-template name="vers:versionMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:adeOfVersion">
         <xsl:call-template name="vers:adeOfVersion_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractVersionType_Template"/>
   </xsl:template>
   <xsl:template name="vers:versionMember_Template">
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="vers:VersionPropertyType_Template">
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="vers:VersionTransitionType_Template">
      <xsl:for-each select="./vers:reason">
         <xsl:call-template name="vers:reason_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:clonePredecessor">
         <xsl:call-template name="vers:clonePredecessor_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:type">
         <xsl:call-template name="vers:type_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:from">
         <xsl:call-template name="vers:from_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:to">
         <xsl:call-template name="vers:to_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:transaction">
         <xsl:call-template name="vers:transaction_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:adeOfVersionTransition">
         <xsl:call-template name="vers:adeOfVersionTransition_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractVersionTransitionType_Template"/>
   </xsl:template>
   <xsl:template name="vers:VersionTransitionPropertyType_Template">
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="wtr:ADEOfAbstractWaterBoundarySurfaceType_Template"/>
   <xsl:template name="wtr:ADEOfAbstractWaterBoundarySurfacePropertyType_Template">
      <xsl:for-each select="./wtr:ADEOfAbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:ADEOfAbstractWaterBoundarySurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="wtr:ADEOfWaterBodyType_Template"/>
   <xsl:template name="wtr:ADEOfWaterBodyPropertyType_Template">
      <xsl:for-each select="./wtr:ADEOfWaterBody">
         <xsl:call-template name="wtr:ADEOfWaterBody_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="wtr:ADEOfWaterGroundSurfaceType_Template"/>
   <xsl:template name="wtr:ADEOfWaterGroundSurfacePropertyType_Template">
      <xsl:for-each select="./wtr:ADEOfWaterGroundSurface">
         <xsl:call-template name="wtr:ADEOfWaterGroundSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="wtr:ADEOfWaterSurfaceType_Template"/>
   <xsl:template name="wtr:ADEOfWaterSurfacePropertyType_Template">
      <xsl:for-each select="./wtr:ADEOfWaterSurface">
         <xsl:call-template name="wtr:ADEOfWaterSurface_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="wtr:AbstractWaterBoundarySurfaceType_Template">
      <xsl:for-each select="./wtr:adeOfAbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:adeOfAbstractWaterBoundarySurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="wtr:AbstractWaterBoundarySurfacePropertyType_Template">
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="wtr:WaterBodyType_Template">
      <xsl:for-each select="./wtr:class">
         <xsl:call-template name="wtr:class_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:function">
         <xsl:call-template name="wtr:function_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:usage">
         <xsl:call-template name="wtr:usage_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:adeOfWaterBody">
         <xsl:call-template name="wtr:adeOfWaterBody_Property"/>
      </xsl:for-each>
      <xsl:call-template name="core:AbstractOccupiedSpaceType_Template"/>
   </xsl:template>
   <xsl:template name="wtr:WaterBodyPropertyType_Template">
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="wtr:WaterGroundSurfaceType_Template">
      <xsl:for-each select="./wtr:adeOfWaterGroundSurface">
         <xsl:call-template name="wtr:adeOfWaterGroundSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="wtr:AbstractWaterBoundarySurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="wtr:WaterGroundSurfacePropertyType_Template">
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="wtr:WaterSurfaceType_Template">
      <xsl:for-each select="./wtr:waterLevel">
         <xsl:call-template name="wtr:waterLevel_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:adeOfWaterSurface">
         <xsl:call-template name="wtr:adeOfWaterSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="wtr:AbstractWaterBoundarySurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="wtr:WaterSurfacePropertyType_Template">
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CodeType_Template">
      <xsl:if test="@gml:codeSpace">
         <xsl:call-template name="gml:codeSpace_Property"/>
      </xsl:if>
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:CodeWithAuthorityType_Template">
      <xsl:if test="@gml:codeSpace">
         <xsl:call-template name="gml:codeSpace_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:CodeType_Template"/>
   </xsl:template>
   <xsl:template name="gml:MeasureType_Template">
      <xsl:if test="@gml:uom">
         <xsl:call-template name="gml:uom_Property"/>
      </xsl:if>
      <xs:hasdouble>
         <xsl:value-of select="text()"/>
      </xs:hasdouble>
   </xsl:template>
   <xsl:template name="gml:CoordinatesType_Template">
      <xsl:if test="@gml:decimal">
         <xsl:call-template name="gml:decimal_Property"/>
      </xsl:if>
      <xsl:if test="@gml:cs">
         <xsl:call-template name="gml:cs_Property"/>
      </xsl:if>
      <xsl:if test="@gml:ts">
         <xsl:call-template name="gml:ts_Property"/>
      </xsl:if>
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:CodeListType_Template">
      <xsl:if test="@gml:codeSpace">
         <xsl:call-template name="gml:codeSpace_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:NameList_Template"/>
   </xsl:template>
   <xsl:template name="gml:CodeOrNilReasonListType_Template">
      <xsl:if test="@gml:codeSpace">
         <xsl:call-template name="gml:codeSpace_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:NameOrNilReasonList_Template"/>
   </xsl:template>
   <xsl:template name="gml:MeasureListType_Template">
      <xsl:if test="@gml:uom">
         <xsl:call-template name="gml:uom_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:doubleList_Template"/>
   </xsl:template>
   <xsl:template name="gml:MeasureOrNilReasonListType_Template">
      <xsl:if test="@gml:uom">
         <xsl:call-template name="gml:uom_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:doubleOrNilReasonList_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCoordinateOperationType_Template">
      <xsl:for-each select="./gml:domainOfValidity">
         <xsl:call-template name="gml:domainOfValidity_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:scope">
         <xsl:call-template name="gml:scope_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:operationVersion">
         <xsl:call-template name="gml:operationVersion_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinateOperationAccuracy">
         <xsl:call-template name="gml:coordinateOperationAccuracy_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:sourceCRS">
         <xsl:call-template name="gml:sourceCRS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:targetCRS">
         <xsl:call-template name="gml:targetCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:IdentifiedObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:coordinateOperationAccuracy_Template">
      <xsl:for-each select="./gmd:AbstractDQ_PositionalAccuracy">
         <xsl:call-template name="gmd:AbstractDQ_PositionalAccuracy_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CoordinateOperationPropertyType_Template">
      <xsl:for-each select="./gml:AbstractCoordinateOperation">
         <xsl:call-template name="gml:AbstractCoordinateOperation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSingleOperation">
         <xsl:call-template name="gml:AbstractSingleOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PassThroughOperation">
         <xsl:call-template name="gml:PassThroughOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractOperation">
         <xsl:call-template name="gml:AbstractOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralConversion">
         <xsl:call-template name="gml:AbstractGeneralConversion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Conversion">
         <xsl:call-template name="gml:Conversion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralTransformation">
         <xsl:call-template name="gml:AbstractGeneralTransformation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Transformation">
         <xsl:call-template name="gml:Transformation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ConcatenatedOperation">
         <xsl:call-template name="gml:ConcatenatedOperation_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:SingleOperationPropertyType_Template">
      <xsl:for-each select="./gml:AbstractSingleOperation">
         <xsl:call-template name="gml:AbstractSingleOperation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PassThroughOperation">
         <xsl:call-template name="gml:PassThroughOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractOperation">
         <xsl:call-template name="gml:AbstractOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralConversion">
         <xsl:call-template name="gml:AbstractGeneralConversion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Conversion">
         <xsl:call-template name="gml:Conversion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralTransformation">
         <xsl:call-template name="gml:AbstractGeneralTransformation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Transformation">
         <xsl:call-template name="gml:Transformation_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralConversionType_Template">
      <xsl:for-each select="./gml:metaDataProperty">
         <xsl:call-template name="gml:metaDataProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:description">
         <xsl:call-template name="gml:description_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:descriptionReference">
         <xsl:call-template name="gml:descriptionReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:identifier">
         <xsl:call-template name="gml:identifier_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:name">
         <xsl:call-template name="gml:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:remarks">
         <xsl:call-template name="gml:remarks_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:domainOfValidity">
         <xsl:call-template name="gml:domainOfValidity_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:scope">
         <xsl:call-template name="gml:scope_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinateOperationAccuracy">
         <xsl:call-template name="gml:coordinateOperationAccuracy_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:id">
         <xsl:call-template name="gml:id_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractCoordinateOperationType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeneralConversionPropertyType_Template">
      <xsl:for-each select="./gml:AbstractGeneralConversion">
         <xsl:call-template name="gml:AbstractGeneralConversion_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Conversion">
         <xsl:call-template name="gml:Conversion_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralTransformationType_Template">
      <xsl:for-each select="./gml:metaDataProperty">
         <xsl:call-template name="gml:metaDataProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:description">
         <xsl:call-template name="gml:description_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:descriptionReference">
         <xsl:call-template name="gml:descriptionReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:identifier">
         <xsl:call-template name="gml:identifier_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:name">
         <xsl:call-template name="gml:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:remarks">
         <xsl:call-template name="gml:remarks_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:domainOfValidity">
         <xsl:call-template name="gml:domainOfValidity_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:scope">
         <xsl:call-template name="gml:scope_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:operationVersion">
         <xsl:call-template name="gml:operationVersion_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinateOperationAccuracy">
         <xsl:call-template name="gml:coordinateOperationAccuracy_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:sourceCRS">
         <xsl:call-template name="gml:sourceCRS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:targetCRS">
         <xsl:call-template name="gml:targetCRS_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:id">
         <xsl:call-template name="gml:id_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractCoordinateOperationType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeneralTransformationPropertyType_Template">
      <xsl:for-each select="./gml:AbstractGeneralTransformation">
         <xsl:call-template name="gml:AbstractGeneralTransformation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Transformation">
         <xsl:call-template name="gml:Transformation_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:ConcatenatedOperationType_Template">
      <xsl:for-each select="./gml:coordOperation">
         <xsl:call-template name="gml:coordOperation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesSingleOperation">
         <xsl:call-template name="gml:usesSingleOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesOperation">
         <xsl:call-template name="gml:usesOperation_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractCoordinateOperationType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ConcatenatedOperationPropertyType_Template">
      <xsl:for-each select="./gml:ConcatenatedOperation">
         <xsl:call-template name="gml:ConcatenatedOperation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:PassThroughOperationType_Template">
      <xsl:for-each select="./gml:modifiedCoordinate">
         <xsl:call-template name="gml:modifiedCoordinate_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordOperation">
         <xsl:call-template name="gml:coordOperation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesSingleOperation">
         <xsl:call-template name="gml:usesSingleOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesOperation">
         <xsl:call-template name="gml:usesOperation_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractCoordinateOperationType_Template"/>
   </xsl:template>
   <xsl:template name="gml:PassThroughOperationPropertyType_Template">
      <xsl:for-each select="./gml:PassThroughOperation">
         <xsl:call-template name="gml:PassThroughOperation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:ConversionType_Template">
      <xsl:for-each select="./gml:method">
         <xsl:call-template name="gml:method_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesMethod">
         <xsl:call-template name="gml:usesMethod_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:parameterValue">
         <xsl:call-template name="gml:parameterValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesValue">
         <xsl:call-template name="gml:usesValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:includesValue">
         <xsl:call-template name="gml:includesValue_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeneralConversionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ConversionPropertyType_Template">
      <xsl:for-each select="./gml:Conversion">
         <xsl:call-template name="gml:Conversion_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TransformationType_Template">
      <xsl:for-each select="./gml:method">
         <xsl:call-template name="gml:method_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesMethod">
         <xsl:call-template name="gml:usesMethod_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:parameterValue">
         <xsl:call-template name="gml:parameterValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesValue">
         <xsl:call-template name="gml:usesValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:includesValue">
         <xsl:call-template name="gml:includesValue_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeneralTransformationType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TransformationPropertyType_Template">
      <xsl:for-each select="./gml:Transformation">
         <xsl:call-template name="gml:Transformation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralParameterValueType_Template"/>
   <xsl:template name="gml:AbstractGeneralParameterValuePropertyType_Template">
      <xsl:for-each select="./gml:AbstractGeneralParameterValue">
         <xsl:call-template name="gml:AbstractGeneralParameterValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ParameterValue">
         <xsl:call-template name="gml:ParameterValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ParameterValueGroup">
         <xsl:call-template name="gml:ParameterValueGroup_Substitution"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:ParameterValueType_Template">
      <xsl:for-each select="./gml:value">
         <xsl:call-template name="gml:value_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:dmsAngleValue">
         <xsl:call-template name="gml:dmsAngleValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:stringValue">
         <xsl:call-template name="gml:stringValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:integerValue">
         <xsl:call-template name="gml:integerValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:booleanValue">
         <xsl:call-template name="gml:booleanValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:valueList">
         <xsl:call-template name="gml:valueList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:integerValueList">
         <xsl:call-template name="gml:integerValueList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:valueFile">
         <xsl:call-template name="gml:valueFile_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:operationParameter">
         <xsl:call-template name="gml:operationParameter_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:valueOfParameter">
         <xsl:call-template name="gml:valueOfParameter_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeneralParameterValueType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ParameterValueGroupType_Template">
      <xsl:for-each select="./gml:parameterValue">
         <xsl:call-template name="gml:parameterValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesValue">
         <xsl:call-template name="gml:usesValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:includesValue">
         <xsl:call-template name="gml:includesValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:group">
         <xsl:call-template name="gml:group_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:valuesOfGroup">
         <xsl:call-template name="gml:valuesOfGroup_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeneralParameterValueType_Template"/>
   </xsl:template>
   <xsl:template name="gml:OperationMethodType_Template">
      <xsl:for-each select="./gml:formulaCitation">
         <xsl:call-template name="gml:formulaCitation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:formula">
         <xsl:call-template name="gml:formula_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:methodFormula">
         <xsl:call-template name="gml:methodFormula_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:sourceDimensions">
         <xsl:call-template name="gml:sourceDimensions_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:targetDimensions">
         <xsl:call-template name="gml:targetDimensions_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:parameter">
         <xsl:call-template name="gml:parameter_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:includesParameter">
         <xsl:call-template name="gml:includesParameter_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:generalOperationParameter">
         <xsl:call-template name="gml:generalOperationParameter_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesParameter">
         <xsl:call-template name="gml:usesParameter_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:IdentifiedObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:formulaCitation_Template">
      <xsl:for-each select="./gmd:CI_Citation">
         <xsl:call-template name="gmd:CI_Citation_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:OperationMethodPropertyType_Template">
      <xsl:for-each select="./gml:OperationMethod">
         <xsl:call-template name="gml:OperationMethod_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralOperationParameterType_Template">
      <xsl:for-each select="./gml:minimumOccurs">
         <xsl:call-template name="gml:minimumOccurs_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:IdentifiedObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralOperationParameterPropertyType_Template">
      <xsl:for-each select="./gml:AbstractGeneralOperationParameter">
         <xsl:call-template name="gml:AbstractGeneralOperationParameter_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OperationParameter">
         <xsl:call-template name="gml:OperationParameter_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OperationParameterGroup">
         <xsl:call-template name="gml:OperationParameterGroup_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:OperationParameterType_Template">
      <xsl:call-template name="gml:AbstractGeneralOperationParameterType_Template"/>
   </xsl:template>
   <xsl:template name="gml:OperationParameterPropertyType_Template">
      <xsl:for-each select="./gml:OperationParameter">
         <xsl:call-template name="gml:OperationParameter_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:OperationParameterGroupType_Template">
      <xsl:for-each select="./gml:maximumOccurs">
         <xsl:call-template name="gml:maximumOccurs_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:parameter">
         <xsl:call-template name="gml:parameter_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:includesParameter">
         <xsl:call-template name="gml:includesParameter_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:generalOperationParameter">
         <xsl:call-template name="gml:generalOperationParameter_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesParameter">
         <xsl:call-template name="gml:usesParameter_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeneralOperationParameterType_Template"/>
   </xsl:template>
   <xsl:template name="gml:OperationParameterGroupPropertyType_Template">
      <xsl:for-each select="./gml:OperationParameterGroup">
         <xsl:call-template name="gml:OperationParameterGroup_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:SingleCRSPropertyType_Template">
      <xsl:for-each select="./gml:AbstractSingleCRS">
         <xsl:call-template name="gml:AbstractSingleCRS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralDerivedCRS">
         <xsl:call-template name="gml:AbstractGeneralDerivedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ProjectedCRS">
         <xsl:call-template name="gml:ProjectedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DerivedCRS">
         <xsl:call-template name="gml:DerivedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeodeticCRS">
         <xsl:call-template name="gml:GeodeticCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:VerticalCRS">
         <xsl:call-template name="gml:VerticalCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EngineeringCRS">
         <xsl:call-template name="gml:EngineeringCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ImageCRS">
         <xsl:call-template name="gml:ImageCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TemporalCRS">
         <xsl:call-template name="gml:TemporalCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeographicCRS">
         <xsl:call-template name="gml:GeographicCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeocentricCRS">
         <xsl:call-template name="gml:GeocentricCRS_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralDerivedCRSType_Template">
      <xsl:for-each select="./gml:conversion">
         <xsl:call-template name="gml:conversion_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:definedByConversion">
         <xsl:call-template name="gml:definedByConversion_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CompoundCRSType_Template">
      <xsl:for-each select="./gml:componentReferenceSystem">
         <xsl:call-template name="gml:componentReferenceSystem_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:includesSingleCRS">
         <xsl:call-template name="gml:includesSingleCRS_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CompoundCRSPropertyType_Template">
      <xsl:for-each select="./gml:CompoundCRS">
         <xsl:call-template name="gml:CompoundCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeodeticCRSType_Template">
      <xsl:for-each select="./gml:ellipsoidalCS">
         <xsl:call-template name="gml:ellipsoidalCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesEllipsoidalCS">
         <xsl:call-template name="gml:usesEllipsoidalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:cartesianCS">
         <xsl:call-template name="gml:cartesianCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesCartesianCS">
         <xsl:call-template name="gml:usesCartesianCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:sphericalCS">
         <xsl:call-template name="gml:sphericalCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesSphericalCS">
         <xsl:call-template name="gml:usesSphericalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:geodeticDatum">
         <xsl:call-template name="gml:geodeticDatum_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesGeodeticDatum">
         <xsl:call-template name="gml:usesGeodeticDatum_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeodeticCRSPropertyType_Template">
      <xsl:for-each select="./gml:GeodeticCRS">
         <xsl:call-template name="gml:GeodeticCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:VerticalCRSType_Template">
      <xsl:for-each select="./gml:verticalCS">
         <xsl:call-template name="gml:verticalCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesVerticalCS">
         <xsl:call-template name="gml:usesVerticalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:verticalDatum">
         <xsl:call-template name="gml:verticalDatum_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesVerticalDatum">
         <xsl:call-template name="gml:usesVerticalDatum_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:VerticalCRSPropertyType_Template">
      <xsl:for-each select="./gml:VerticalCRS">
         <xsl:call-template name="gml:VerticalCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:ProjectedCRSType_Template">
      <xsl:for-each select="./gml:baseGeodeticCRS">
         <xsl:call-template name="gml:baseGeodeticCRS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:baseGeographicCRS">
         <xsl:call-template name="gml:baseGeographicCRS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:cartesianCS">
         <xsl:call-template name="gml:cartesianCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesCartesianCS">
         <xsl:call-template name="gml:usesCartesianCS_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeneralDerivedCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ProjectedCRSPropertyType_Template">
      <xsl:for-each select="./gml:ProjectedCRS">
         <xsl:call-template name="gml:ProjectedCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:DerivedCRSType_Template">
      <xsl:for-each select="./gml:baseCRS">
         <xsl:call-template name="gml:baseCRS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:derivedCRSType">
         <xsl:call-template name="gml:derivedCRSType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinateSystem">
         <xsl:call-template name="gml:coordinateSystem_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesCS">
         <xsl:call-template name="gml:usesCS_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeneralDerivedCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DerivedCRSPropertyType_Template">
      <xsl:for-each select="./gml:DerivedCRS">
         <xsl:call-template name="gml:DerivedCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:EngineeringCRSType_Template">
      <xsl:for-each select="./gml:affineCS">
         <xsl:call-template name="gml:affineCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesAffineCS">
         <xsl:call-template name="gml:usesAffineCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:cartesianCS">
         <xsl:call-template name="gml:cartesianCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesCartesianCS">
         <xsl:call-template name="gml:usesCartesianCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:cylindricalCS">
         <xsl:call-template name="gml:cylindricalCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:linearCS">
         <xsl:call-template name="gml:linearCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:polarCS">
         <xsl:call-template name="gml:polarCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:sphericalCS">
         <xsl:call-template name="gml:sphericalCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesSphericalCS">
         <xsl:call-template name="gml:usesSphericalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:userDefinedCS">
         <xsl:call-template name="gml:userDefinedCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinateSystem">
         <xsl:call-template name="gml:coordinateSystem_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesCS">
         <xsl:call-template name="gml:usesCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:engineeringDatum">
         <xsl:call-template name="gml:engineeringDatum_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesEngineeringDatum">
         <xsl:call-template name="gml:usesEngineeringDatum_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:EngineeringCRSPropertyType_Template">
      <xsl:for-each select="./gml:EngineeringCRS">
         <xsl:call-template name="gml:EngineeringCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:ImageCRSType_Template">
      <xsl:for-each select="./gml:cartesianCS">
         <xsl:call-template name="gml:cartesianCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesCartesianCS">
         <xsl:call-template name="gml:usesCartesianCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:affineCS">
         <xsl:call-template name="gml:affineCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesAffineCS">
         <xsl:call-template name="gml:usesAffineCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesObliqueCartesianCS">
         <xsl:call-template name="gml:usesObliqueCartesianCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:imageDatum">
         <xsl:call-template name="gml:imageDatum_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesImageDatum">
         <xsl:call-template name="gml:usesImageDatum_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ImageCRSPropertyType_Template">
      <xsl:for-each select="./gml:ImageCRS">
         <xsl:call-template name="gml:ImageCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TemporalCRSType_Template">
      <xsl:for-each select="./gml:timeCS">
         <xsl:call-template name="gml:timeCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesTimeCS">
         <xsl:call-template name="gml:usesTimeCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesTemporalCS">
         <xsl:call-template name="gml:usesTemporalCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:temporalDatum">
         <xsl:call-template name="gml:temporalDatum_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesTemporalDatum">
         <xsl:call-template name="gml:usesTemporalDatum_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TemporalCRSPropertyType_Template">
      <xsl:for-each select="./gml:TemporalCRS">
         <xsl:call-template name="gml:TemporalCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CoordinateSystemAxisType_Template">
      <xsl:for-each select="./gml:axisAbbrev">
         <xsl:call-template name="gml:axisAbbrev_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:axisDirection">
         <xsl:call-template name="gml:axisDirection_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:minimumValue">
         <xsl:call-template name="gml:minimumValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:maximumValue">
         <xsl:call-template name="gml:maximumValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:rangeMeaning">
         <xsl:call-template name="gml:rangeMeaning_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:uom">
         <xsl:call-template name="gml:uom_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:IdentifiedObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CoordinateSystemAxisPropertyType_Template">
      <xsl:for-each select="./gml:CoordinateSystemAxis">
         <xsl:call-template name="gml:CoordinateSystemAxis_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCoordinateSystemType_Template">
      <xsl:for-each select="./gml:axis">
         <xsl:call-template name="gml:axis_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesAxis">
         <xsl:call-template name="gml:usesAxis_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:IdentifiedObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CoordinateSystemPropertyType_Template">
      <xsl:for-each select="./gml:AbstractCoordinateSystem">
         <xsl:call-template name="gml:AbstractCoordinateSystem_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EllipsoidalCS">
         <xsl:call-template name="gml:EllipsoidalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CartesianCS">
         <xsl:call-template name="gml:CartesianCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:VerticalCS">
         <xsl:call-template name="gml:VerticalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeCS">
         <xsl:call-template name="gml:TimeCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LinearCS">
         <xsl:call-template name="gml:LinearCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:UserDefinedCS">
         <xsl:call-template name="gml:UserDefinedCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:SphericalCS">
         <xsl:call-template name="gml:SphericalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolarCS">
         <xsl:call-template name="gml:PolarCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CylindricalCS">
         <xsl:call-template name="gml:CylindricalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AffineCS">
         <xsl:call-template name="gml:AffineCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TemporalCS">
         <xsl:call-template name="gml:TemporalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ObliqueCartesianCS">
         <xsl:call-template name="gml:ObliqueCartesianCS_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:EllipsoidalCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:EllipsoidalCSPropertyType_Template">
      <xsl:for-each select="./gml:EllipsoidalCS">
         <xsl:call-template name="gml:EllipsoidalCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CartesianCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CartesianCSPropertyType_Template">
      <xsl:for-each select="./gml:CartesianCS">
         <xsl:call-template name="gml:CartesianCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:VerticalCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:VerticalCSPropertyType_Template">
      <xsl:for-each select="./gml:VerticalCS">
         <xsl:call-template name="gml:VerticalCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeCSPropertyType_Template">
      <xsl:for-each select="./gml:TimeCS">
         <xsl:call-template name="gml:TimeCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:LinearCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:LinearCSPropertyType_Template">
      <xsl:for-each select="./gml:LinearCS">
         <xsl:call-template name="gml:LinearCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:UserDefinedCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:UserDefinedCSPropertyType_Template">
      <xsl:for-each select="./gml:UserDefinedCS">
         <xsl:call-template name="gml:UserDefinedCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:SphericalCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:SphericalCSPropertyType_Template">
      <xsl:for-each select="./gml:SphericalCS">
         <xsl:call-template name="gml:SphericalCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:PolarCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:PolarCSPropertyType_Template">
      <xsl:for-each select="./gml:PolarCS">
         <xsl:call-template name="gml:PolarCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CylindricalCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CylindricalCSPropertyType_Template">
      <xsl:for-each select="./gml:CylindricalCS">
         <xsl:call-template name="gml:CylindricalCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AffineCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AffineCSPropertyType_Template">
      <xsl:for-each select="./gml:AffineCS">
         <xsl:call-template name="gml:AffineCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCoverageType_Template">
      <xsl:for-each select="./gml:domainSet">
         <xsl:call-template name="gml:domainSet_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:multiPointDomain">
         <xsl:call-template name="gml:multiPointDomain_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:multiCurveDomain">
         <xsl:call-template name="gml:multiCurveDomain_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:multiSurfaceDomain">
         <xsl:call-template name="gml:multiSurfaceDomain_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:multiSolidDomain">
         <xsl:call-template name="gml:multiSolidDomain_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:gridDomain">
         <xsl:call-template name="gml:gridDomain_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:rectifiedGridDomain">
         <xsl:call-template name="gml:rectifiedGridDomain_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:rangeSet">
         <xsl:call-template name="gml:rangeSet_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DiscreteCoverageType_Template">
      <xsl:for-each select="./gml:coverageFunction">
         <xsl:call-template name="gml:coverageFunction_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCoverageType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractContinuousCoverageType_Template">
      <xsl:for-each select="./gml:coverageFunction">
         <xsl:call-template name="gml:coverageFunction_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCoverageType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DomainSetType_Template">
      <xsl:for-each select="./gml:AbstractGeometry">
         <xsl:call-template name="gml:AbstractGeometry_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricAggregate">
         <xsl:call-template name="gml:AbstractGeometricAggregate_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiGeometry">
         <xsl:call-template name="gml:MultiGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPoint">
         <xsl:call-template name="gml:MultiPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurve">
         <xsl:call-template name="gml:MultiCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurface">
         <xsl:call-template name="gml:MultiSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolid">
         <xsl:call-template name="gml:MultiSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricPrimitive">
         <xsl:call-template name="gml:AbstractGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Point">
         <xsl:call-template name="gml:Point_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCurve">
         <xsl:call-template name="gml:AbstractCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineString">
         <xsl:call-template name="gml:LineString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Curve">
         <xsl:call-template name="gml:Curve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableCurve">
         <xsl:call-template name="gml:OrientableCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSurface">
         <xsl:call-template name="gml:AbstractSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Polygon">
         <xsl:call-template name="gml:Polygon_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Surface">
         <xsl:call-template name="gml:Surface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolyhedralSurface">
         <xsl:call-template name="gml:PolyhedralSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TriangulatedSurface">
         <xsl:call-template name="gml:TriangulatedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Tin">
         <xsl:call-template name="gml:Tin_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableSurface">
         <xsl:call-template name="gml:OrientableSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSolid">
         <xsl:call-template name="gml:AbstractSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Solid">
         <xsl:call-template name="gml:Solid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeometricComplex">
         <xsl:call-template name="gml:GeometricComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractImplicitGeometry">
         <xsl:call-template name="gml:AbstractImplicitGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Grid">
         <xsl:call-template name="gml:Grid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGrid">
         <xsl:call-template name="gml:RectifiedGrid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeObject">
         <xsl:call-template name="gml:AbstractTimeObject_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimePrimitive">
         <xsl:call-template name="gml:AbstractTimePrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeGeometricPrimitive">
         <xsl:call-template name="gml:AbstractTimeGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeInstant">
         <xsl:call-template name="gml:TimeInstant_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimePeriod">
         <xsl:call-template name="gml:TimePeriod_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeTopologyPrimitive">
         <xsl:call-template name="gml:AbstractTimeTopologyPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeNode">
         <xsl:call-template name="gml:TimeNode_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeEdge">
         <xsl:call-template name="gml:TimeEdge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeComplex">
         <xsl:call-template name="gml:AbstractTimeComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeTopologyComplex">
         <xsl:call-template name="gml:TimeTopologyComplex_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:RangeSetType_Template">
      <xsl:for-each select="./gml:ValueArray">
         <xsl:call-template name="gml:ValueArray_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractScalarValueList">
         <xsl:call-template name="gml:AbstractScalarValueList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:BooleanList">
         <xsl:call-template name="gml:BooleanList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CategoryList">
         <xsl:call-template name="gml:CategoryList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CountList">
         <xsl:call-template name="gml:CountList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:QuantityList">
         <xsl:call-template name="gml:QuantityList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DataBlock">
         <xsl:call-template name="gml:DataBlock_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:File">
         <xsl:call-template name="gml:File_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:DataBlockType_Template">
      <xsl:for-each select="./gml:rangeParameters">
         <xsl:call-template name="gml:rangeParameters_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:tupleList">
         <xsl:call-template name="gml:tupleList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:doubleOrNilReasonTupleList">
         <xsl:call-template name="gml:doubleOrNilReasonTupleList_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:FileType_Template">
      <xsl:for-each select="./gml:rangeParameters">
         <xsl:call-template name="gml:rangeParameters_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:fileName">
         <xsl:call-template name="gml:fileName_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:fileReference">
         <xsl:call-template name="gml:fileReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:fileStructure">
         <xsl:call-template name="gml:fileStructure_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:mimeType">
         <xsl:call-template name="gml:mimeType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:compression">
         <xsl:call-template name="gml:compression_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:CoverageFunctionType_Template">
      <xsl:for-each select="./gml:MappingRule">
         <xsl:call-template name="gml:MappingRule_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CoverageMappingRule">
         <xsl:call-template name="gml:CoverageMappingRule_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GridFunction">
         <xsl:call-template name="gml:GridFunction_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:MappingRuleType_Template">
      <xsl:for-each select="./gml:ruleDefinition">
         <xsl:call-template name="gml:ruleDefinition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ruleReference">
         <xsl:call-template name="gml:ruleReference_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:GridFunctionType_Template">
      <xsl:for-each select="./gml:sequenceRule">
         <xsl:call-template name="gml:sequenceRule_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:startPoint">
         <xsl:call-template name="gml:startPoint_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:SequenceRuleType_Template">
      <xsl:if test="@gml:order">
         <xsl:call-template name="gml:order_Property"/>
      </xsl:if>
      <xsl:if test="@gml:axisOrder">
         <xsl:call-template name="gml:axisOrder_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:SequenceRuleEnumeration_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractDatumType_Template">
      <xsl:for-each select="./gml:domainOfValidity">
         <xsl:call-template name="gml:domainOfValidity_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:scope">
         <xsl:call-template name="gml:scope_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:anchorDefinition">
         <xsl:call-template name="gml:anchorDefinition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:anchorPoint">
         <xsl:call-template name="gml:anchorPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:realizationEpoch">
         <xsl:call-template name="gml:realizationEpoch_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:IdentifiedObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DatumPropertyType_Template">
      <xsl:for-each select="./gml:AbstractDatum">
         <xsl:call-template name="gml:AbstractDatum_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeodeticDatum">
         <xsl:call-template name="gml:GeodeticDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EngineeringDatum">
         <xsl:call-template name="gml:EngineeringDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ImageDatum">
         <xsl:call-template name="gml:ImageDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:VerticalDatum">
         <xsl:call-template name="gml:VerticalDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TemporalDatum">
         <xsl:call-template name="gml:TemporalDatum_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeodeticDatumType_Template">
      <xsl:for-each select="./gml:primeMeridian">
         <xsl:call-template name="gml:primeMeridian_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesPrimeMeridian">
         <xsl:call-template name="gml:usesPrimeMeridian_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ellipsoid">
         <xsl:call-template name="gml:ellipsoid_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesEllipsoid">
         <xsl:call-template name="gml:usesEllipsoid_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractDatumType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeodeticDatumPropertyType_Template">
      <xsl:for-each select="./gml:GeodeticDatum">
         <xsl:call-template name="gml:GeodeticDatum_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:EllipsoidType_Template">
      <xsl:for-each select="./gml:semiMajorAxis">
         <xsl:call-template name="gml:semiMajorAxis_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:secondDefiningParameter">
         <xsl:call-template name="gml:secondDefiningParameter_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:IdentifiedObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:secondDefiningParameter_Template">
      <xsl:for-each select="./gml:SecondDefiningParameter">
         <xsl:call-template name="gml:SecondDefiningParameter_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:SecondDefiningParameter_Template">
      <xsl:for-each select="./gml:inverseFlattening">
         <xsl:call-template name="gml:inverseFlattening_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:semiMinorAxis">
         <xsl:call-template name="gml:semiMinorAxis_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:isSphere">
         <xsl:call-template name="gml:isSphere_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:EllipsoidPropertyType_Template">
      <xsl:for-each select="./gml:Ellipsoid">
         <xsl:call-template name="gml:Ellipsoid_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:PrimeMeridianType_Template">
      <xsl:for-each select="./gml:greenwichLongitude">
         <xsl:call-template name="gml:greenwichLongitude_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:IdentifiedObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:PrimeMeridianPropertyType_Template">
      <xsl:for-each select="./gml:PrimeMeridian">
         <xsl:call-template name="gml:PrimeMeridian_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:EngineeringDatumType_Template">
      <xsl:call-template name="gml:AbstractDatumType_Template"/>
   </xsl:template>
   <xsl:template name="gml:EngineeringDatumPropertyType_Template">
      <xsl:for-each select="./gml:EngineeringDatum">
         <xsl:call-template name="gml:EngineeringDatum_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:ImageDatumType_Template">
      <xsl:for-each select="./gml:pixelInCell">
         <xsl:call-template name="gml:pixelInCell_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractDatumType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ImageDatumPropertyType_Template">
      <xsl:for-each select="./gml:ImageDatum">
         <xsl:call-template name="gml:ImageDatum_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:VerticalDatumType_Template">
      <xsl:call-template name="gml:AbstractDatumType_Template"/>
   </xsl:template>
   <xsl:template name="gml:VerticalDatumPropertyType_Template">
      <xsl:for-each select="./gml:VerticalDatum">
         <xsl:call-template name="gml:VerticalDatum_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TemporalDatumType_Template">
      <xsl:for-each select="./gml:origin">
         <xsl:call-template name="gml:origin_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:TemporalDatumBaseType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TemporalDatumBaseType_Template">
      <xsl:for-each select="./gml:metaDataProperty">
         <xsl:call-template name="gml:metaDataProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:description">
         <xsl:call-template name="gml:description_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:descriptionReference">
         <xsl:call-template name="gml:descriptionReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:identifier">
         <xsl:call-template name="gml:identifier_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:name">
         <xsl:call-template name="gml:name_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:remarks">
         <xsl:call-template name="gml:remarks_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:domainOfValidity">
         <xsl:call-template name="gml:domainOfValidity_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:scope">
         <xsl:call-template name="gml:scope_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:id">
         <xsl:call-template name="gml:id_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractDatumType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TemporalDatumPropertyType_Template">
      <xsl:for-each select="./gml:TemporalDatum">
         <xsl:call-template name="gml:TemporalDatum_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:DefaultStylePropertyType_Template">
      <xsl:for-each select="./gml:AbstractStyle">
         <xsl:call-template name="gml:AbstractStyle_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Style">
         <xsl:call-template name="gml:Style_Substitution"/>
      </xsl:for-each>
      <xsl:if test="@gml:about">
         <xsl:call-template name="gml:about_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractStyleType_Template">
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:StyleType_Template">
      <xsl:for-each select="./gml:featureStyle">
         <xsl:call-template name="gml:featureStyle_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:graphStyle">
         <xsl:call-template name="gml:graphStyle_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractStyleType_Template"/>
   </xsl:template>
   <xsl:template name="gml:FeatureStylePropertyType_Template">
      <xsl:for-each select="./gml:FeatureStyle">
         <xsl:call-template name="gml:FeatureStyle_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:about">
         <xsl:call-template name="gml:about_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:FeatureStyleType_Template">
      <xsl:for-each select="./gml:featureConstraint">
         <xsl:call-template name="gml:featureConstraint_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:geometryStyle">
         <xsl:call-template name="gml:geometryStyle_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:topologyStyle">
         <xsl:call-template name="gml:topologyStyle_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:labelStyle">
         <xsl:call-template name="gml:labelStyle_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:featureType">
         <xsl:call-template name="gml:featureType_Property"/>
      </xsl:if>
      <xsl:if test="@gml:baseType">
         <xsl:call-template name="gml:baseType_Property"/>
      </xsl:if>
      <xsl:if test="@gml:queryGrammar">
         <xsl:call-template name="gml:queryGrammar_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:BaseStyleDescriptorType_Template">
      <xsl:for-each select="./gml:spatialResolution">
         <xsl:call-template name="gml:spatialResolution_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:styleVariation">
         <xsl:call-template name="gml:styleVariation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./smil20:animate">
         <xsl:call-template name="smil20:animate_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./smil20:animateMotion">
         <xsl:call-template name="smil20:animateMotion_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./smil20:animateColor">
         <xsl:call-template name="smil20:animateColor_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./smil20:set">
         <xsl:call-template name="smil20:set_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeometryStylePropertyType_Template">
      <xsl:for-each select="./gml:GeometryStyle">
         <xsl:call-template name="gml:GeometryStyle_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:about">
         <xsl:call-template name="gml:about_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeometryStyleType_Template">
      <xsl:for-each select="./gml:symbol">
         <xsl:call-template name="gml:symbol_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:style">
         <xsl:call-template name="gml:style_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:labelStyle">
         <xsl:call-template name="gml:labelStyle_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:geometryProperty">
         <xsl:call-template name="gml:geometryProperty_Property"/>
      </xsl:if>
      <xsl:if test="@gml:geometryType">
         <xsl:call-template name="gml:geometryType_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:BaseStyleDescriptorType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopologyStylePropertyType_Template">
      <xsl:for-each select="./gml:TopologyStyle">
         <xsl:call-template name="gml:TopologyStyle_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:about">
         <xsl:call-template name="gml:about_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopologyStyleType_Template">
      <xsl:for-each select="./gml:symbol">
         <xsl:call-template name="gml:symbol_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:style">
         <xsl:call-template name="gml:style_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:labelStyle">
         <xsl:call-template name="gml:labelStyle_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:topologyProperty">
         <xsl:call-template name="gml:topologyProperty_Property"/>
      </xsl:if>
      <xsl:if test="@gml:topologyType">
         <xsl:call-template name="gml:topologyType_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:BaseStyleDescriptorType_Template"/>
   </xsl:template>
   <xsl:template name="gml:LabelStylePropertyType_Template">
      <xsl:for-each select="./gml:LabelStyle">
         <xsl:call-template name="gml:LabelStyle_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:about">
         <xsl:call-template name="gml:about_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:LabelStyleType_Template">
      <xsl:for-each select="./gml:style">
         <xsl:call-template name="gml:style_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:label">
         <xsl:call-template name="gml:label_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:BaseStyleDescriptorType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GraphStylePropertyType_Template">
      <xsl:for-each select="./gml:GraphStyle">
         <xsl:call-template name="gml:GraphStyle_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:about">
         <xsl:call-template name="gml:about_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:GraphStyleType_Template">
      <xsl:for-each select="./gml:planar">
         <xsl:call-template name="gml:planar_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:directed">
         <xsl:call-template name="gml:directed_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:grid">
         <xsl:call-template name="gml:grid_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:minDistance">
         <xsl:call-template name="gml:minDistance_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:minAngle">
         <xsl:call-template name="gml:minAngle_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:graphType">
         <xsl:call-template name="gml:graphType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:drawingType">
         <xsl:call-template name="gml:drawingType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:lineType">
         <xsl:call-template name="gml:lineType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:aestheticCriteria">
         <xsl:call-template name="gml:aestheticCriteria_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:BaseStyleDescriptorType_Template"/>
   </xsl:template>
   <xsl:template name="gml:SymbolType_Template">
      <xsl:if test="@gml:symbolType">
         <xsl:call-template name="gml:symbolType_Property"/>
      </xsl:if>
      <xsl:if test="@gml:transform">
         <xsl:call-template name="gml:transform_Property"/>
      </xsl:if>
      <xsl:if test="@gml:about">
         <xsl:call-template name="gml:about_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:LabelType_Template">
      <xsl:for-each select="./gml:LabelExpression">
         <xsl:call-template name="gml:LabelExpression_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:transform">
         <xsl:call-template name="gml:transform_Property"/>
      </xsl:if>
   </xsl:template>
   <xsl:template name="gml:StyleVariationType_Template">
      <xsl:if test="@gml:styleProperty">
         <xsl:call-template name="gml:styleProperty_Property"/>
      </xsl:if>
      <xsl:if test="@gml:featurePropertyRange">
         <xsl:call-template name="gml:featurePropertyRange_Property"/>
      </xsl:if>
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:OperationPropertyType_Template">
      <xsl:for-each select="./gml:AbstractOperation">
         <xsl:call-template name="gml:AbstractOperation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralConversion">
         <xsl:call-template name="gml:AbstractGeneralConversion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Conversion">
         <xsl:call-template name="gml:Conversion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralTransformation">
         <xsl:call-template name="gml:AbstractGeneralTransformation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Transformation">
         <xsl:call-template name="gml:Transformation_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TemporalCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TemporalCSPropertyType_Template">
      <xsl:for-each select="./gml:TemporalCS">
         <xsl:call-template name="gml:TemporalCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:ObliqueCartesianCSType_Template">
      <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ObliqueCartesianCSPropertyType_Template">
      <xsl:for-each select="./gml:ObliqueCartesianCS">
         <xsl:call-template name="gml:ObliqueCartesianCS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeographicCRSType_Template">
      <xsl:for-each select="./gml:usesEllipsoidalCS">
         <xsl:call-template name="gml:usesEllipsoidalCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesGeodeticDatum">
         <xsl:call-template name="gml:usesGeodeticDatum_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeographicCRSPropertyType_Template">
      <xsl:for-each select="./gml:GeographicCRS">
         <xsl:call-template name="gml:GeographicCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeocentricCRSType_Template">
      <xsl:for-each select="./gml:usesCartesianCS">
         <xsl:call-template name="gml:usesCartesianCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesSphericalCS">
         <xsl:call-template name="gml:usesSphericalCS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:usesGeodeticDatum">
         <xsl:call-template name="gml:usesGeodeticDatum_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCRSType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeocentricCRSPropertyType_Template">
      <xsl:for-each select="./gml:GeocentricCRS">
         <xsl:call-template name="gml:GeocentricCRS_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:DMSAngleType_Template">
      <xsl:for-each select="./gml:degrees">
         <xsl:call-template name="gml:degrees_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:decimalMinutes">
         <xsl:call-template name="gml:decimalMinutes_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:minutes">
         <xsl:call-template name="gml:minutes_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:seconds">
         <xsl:call-template name="gml:seconds_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:DegreesType_Template">
      <xsl:if test="@gml:direction">
         <xsl:call-template name="gml:direction_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:DegreeValueType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AngleChoiceType_Template">
      <xsl:for-each select="./gml:angle">
         <xsl:call-template name="gml:angle_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:dmsAngle">
         <xsl:call-template name="gml:dmsAngle_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:ArrayAssociationType_Template">
      <xsl:for-each select="./gml:AbstractObject">
         <xsl:call-template name="gml:AbstractObject_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ADEOfAbstractSurfaceData">
         <xsl:call-template name="app:ADEOfAbstractSurfaceData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ADEOfAbstractTexture">
         <xsl:call-template name="app:ADEOfAbstractTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ADEOfAppearance">
         <xsl:call-template name="app:ADEOfAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ADEOfGeoreferencedTexture">
         <xsl:call-template name="app:ADEOfGeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ADEOfParameterizedTexture">
         <xsl:call-template name="app:ADEOfParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ADEOfX3DMaterial">
         <xsl:call-template name="app:ADEOfX3DMaterial_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractTextureParameterization">
         <xsl:call-template name="app:AbstractTextureParameterization_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:TexCoordGen">
         <xsl:call-template name="app:TexCoordGen_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:TexCoordList">
         <xsl:call-template name="app:TexCoordList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:ADEOfAbstractBridge">
         <xsl:call-template name="brid:ADEOfAbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:ADEOfBridge">
         <xsl:call-template name="brid:ADEOfBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:ADEOfBridgeConstructiveElement">
         <xsl:call-template name="brid:ADEOfBridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:ADEOfBridgeFurniture">
         <xsl:call-template name="brid:ADEOfBridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:ADEOfBridgeInstallation">
         <xsl:call-template name="brid:ADEOfBridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:ADEOfBridgePart">
         <xsl:call-template name="brid:ADEOfBridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:ADEOfBridgeRoom">
         <xsl:call-template name="brid:ADEOfBridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:ADEOfAbstractBuilding">
         <xsl:call-template name="bldg:ADEOfAbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:ADEOfAbstractBuildingSubdivision">
         <xsl:call-template name="bldg:ADEOfAbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:ADEOfBuilding">
         <xsl:call-template name="bldg:ADEOfBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:ADEOfBuildingConstructiveElement">
         <xsl:call-template name="bldg:ADEOfBuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:ADEOfBuildingFurniture">
         <xsl:call-template name="bldg:ADEOfBuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:ADEOfBuildingInstallation">
         <xsl:call-template name="bldg:ADEOfBuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:ADEOfBuildingPart">
         <xsl:call-template name="bldg:ADEOfBuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:ADEOfBuildingRoom">
         <xsl:call-template name="bldg:ADEOfBuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:ADEOfBuildingUnit">
         <xsl:call-template name="bldg:ADEOfBuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:ADEOfStorey">
         <xsl:call-template name="bldg:ADEOfStorey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:RoomHeight">
         <xsl:call-template name="bldg:RoomHeight_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:ADEOfCityFurniture">
         <xsl:call-template name="frn:ADEOfCityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractAppearance">
         <xsl:call-template name="core:ADEOfAbstractAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractCityObject">
         <xsl:call-template name="core:ADEOfAbstractCityObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractDynamizer">
         <xsl:call-template name="core:ADEOfAbstractDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractFeature">
         <xsl:call-template name="core:ADEOfAbstractFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractFeatureWithLifespan">
         <xsl:call-template name="core:ADEOfAbstractFeatureWithLifespan_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractLogicalSpace">
         <xsl:call-template name="core:ADEOfAbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractOccupiedSpace">
         <xsl:call-template name="core:ADEOfAbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractPhysicalSpace">
         <xsl:call-template name="core:ADEOfAbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractPointCloud">
         <xsl:call-template name="core:ADEOfAbstractPointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractSpace">
         <xsl:call-template name="core:ADEOfAbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractSpaceBoundary">
         <xsl:call-template name="core:ADEOfAbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractThematicSurface">
         <xsl:call-template name="core:ADEOfAbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractUnoccupiedSpace">
         <xsl:call-template name="core:ADEOfAbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractVersion">
         <xsl:call-template name="core:ADEOfAbstractVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAbstractVersionTransition">
         <xsl:call-template name="core:ADEOfAbstractVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfAddress">
         <xsl:call-template name="core:ADEOfAddress_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfCityModel">
         <xsl:call-template name="core:ADEOfCityModel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ADEOfClosureSurface">
         <xsl:call-template name="core:ADEOfClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractGenericAttribute">
         <xsl:call-template name="core:AbstractGenericAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:CodeAttribute">
         <xsl:call-template name="gen:CodeAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:DateAttribute">
         <xsl:call-template name="gen:DateAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:DoubleAttribute">
         <xsl:call-template name="gen:DoubleAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericAttributeSet">
         <xsl:call-template name="gen:GenericAttributeSet_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:IntAttribute">
         <xsl:call-template name="gen:IntAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:MeasureAttribute">
         <xsl:call-template name="gen:MeasureAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:StringAttribute">
         <xsl:call-template name="gen:StringAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:UriAttribute">
         <xsl:call-template name="gen:UriAttribute_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ExternalReference">
         <xsl:call-template name="core:ExternalReference_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:Occupancy">
         <xsl:call-template name="core:Occupancy_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:QualifiedArea">
         <xsl:call-template name="core:QualifiedArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:QualifiedVolume">
         <xsl:call-template name="core:QualifiedVolume_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:ADEOfCityObjectGroup">
         <xsl:call-template name="grp:ADEOfCityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfAbstractConstruction">
         <xsl:call-template name="con:ADEOfAbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfAbstractConstructionSurface">
         <xsl:call-template name="con:ADEOfAbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfAbstractConstructiveElement">
         <xsl:call-template name="con:ADEOfAbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfAbstractFillingElement">
         <xsl:call-template name="con:ADEOfAbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfAbstractFillingSurface">
         <xsl:call-template name="con:ADEOfAbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfAbstractFurniture">
         <xsl:call-template name="con:ADEOfAbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfAbstractInstallation">
         <xsl:call-template name="con:ADEOfAbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfCeilingSurface">
         <xsl:call-template name="con:ADEOfCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfDoor">
         <xsl:call-template name="con:ADEOfDoor_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfDoorSurface">
         <xsl:call-template name="con:ADEOfDoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfFloorSurface">
         <xsl:call-template name="con:ADEOfFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfGroundSurface">
         <xsl:call-template name="con:ADEOfGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfInteriorWallSurface">
         <xsl:call-template name="con:ADEOfInteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfOtherConstruction">
         <xsl:call-template name="con:ADEOfOtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfOuterCeilingSurface">
         <xsl:call-template name="con:ADEOfOuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfOuterFloorSurface">
         <xsl:call-template name="con:ADEOfOuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfRoofSurface">
         <xsl:call-template name="con:ADEOfRoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfWallSurface">
         <xsl:call-template name="con:ADEOfWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfWindow">
         <xsl:call-template name="con:ADEOfWindow_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ADEOfWindowSurface">
         <xsl:call-template name="con:ADEOfWindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:ConstructionEvent">
         <xsl:call-template name="con:ConstructionEvent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Elevation">
         <xsl:call-template name="con:Elevation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Height">
         <xsl:call-template name="con:Height_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:ADEOfAbstractAtomicTimeseries">
         <xsl:call-template name="dyn:ADEOfAbstractAtomicTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:ADEOfAbstractTimeseries">
         <xsl:call-template name="dyn:ADEOfAbstractTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:ADEOfCompositeTimeseries">
         <xsl:call-template name="dyn:ADEOfCompositeTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:ADEOfDynamizer">
         <xsl:call-template name="dyn:ADEOfDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:ADEOfGenericTimeseries">
         <xsl:call-template name="dyn:ADEOfGenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:ADEOfStandardFileTimeseries">
         <xsl:call-template name="dyn:ADEOfStandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:ADEOfTabulatedFileTimeseries">
         <xsl:call-template name="dyn:ADEOfTabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:SensorConnection">
         <xsl:call-template name="dyn:SensorConnection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TimeValuePair">
         <xsl:call-template name="dyn:TimeValuePair_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TimeseriesComponent">
         <xsl:call-template name="dyn:TimeseriesComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:ADEOfGenericLogicalSpace">
         <xsl:call-template name="gen:ADEOfGenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:ADEOfGenericOccupiedSpace">
         <xsl:call-template name="gen:ADEOfGenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:ADEOfGenericThematicSurface">
         <xsl:call-template name="gen:ADEOfGenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:ADEOfGenericUnoccupiedSpace">
         <xsl:call-template name="gen:ADEOfGenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:ADEOfLandUse">
         <xsl:call-template name="luse:ADEOfLandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:ADEOfPointCloud">
         <xsl:call-template name="pcl:ADEOfPointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ADEOfAbstractReliefComponent">
         <xsl:call-template name="dem:ADEOfAbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ADEOfBreaklineRelief">
         <xsl:call-template name="dem:ADEOfBreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ADEOfMassPointRelief">
         <xsl:call-template name="dem:ADEOfMassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ADEOfRasterRelief">
         <xsl:call-template name="dem:ADEOfRasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ADEOfReliefFeature">
         <xsl:call-template name="dem:ADEOfReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ADEOfTINRelief">
         <xsl:call-template name="dem:ADEOfTINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfAbstractTransportationSpace">
         <xsl:call-template name="tran:ADEOfAbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfAuxiliaryTrafficArea">
         <xsl:call-template name="tran:ADEOfAuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfAuxiliaryTrafficSpace">
         <xsl:call-template name="tran:ADEOfAuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfClearanceSpace">
         <xsl:call-template name="tran:ADEOfClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfHole">
         <xsl:call-template name="tran:ADEOfHole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfHoleSurface">
         <xsl:call-template name="tran:ADEOfHoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfIntersection">
         <xsl:call-template name="tran:ADEOfIntersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfMarking">
         <xsl:call-template name="tran:ADEOfMarking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfRailway">
         <xsl:call-template name="tran:ADEOfRailway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfRoad">
         <xsl:call-template name="tran:ADEOfRoad_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfSection">
         <xsl:call-template name="tran:ADEOfSection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfSquare">
         <xsl:call-template name="tran:ADEOfSquare_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfTrack">
         <xsl:call-template name="tran:ADEOfTrack_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfTrafficArea">
         <xsl:call-template name="tran:ADEOfTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfTrafficSpace">
         <xsl:call-template name="tran:ADEOfTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ADEOfWaterway">
         <xsl:call-template name="tran:ADEOfWaterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:ADEOfAbstractTunnel">
         <xsl:call-template name="tun:ADEOfAbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:ADEOfHollowSpace">
         <xsl:call-template name="tun:ADEOfHollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:ADEOfTunnel">
         <xsl:call-template name="tun:ADEOfTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:ADEOfTunnelConstructiveElement">
         <xsl:call-template name="tun:ADEOfTunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:ADEOfTunnelFurniture">
         <xsl:call-template name="tun:ADEOfTunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:ADEOfTunnelInstallation">
         <xsl:call-template name="tun:ADEOfTunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:ADEOfTunnelPart">
         <xsl:call-template name="tun:ADEOfTunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:ADEOfAbstractVegetationObject">
         <xsl:call-template name="veg:ADEOfAbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:ADEOfPlantCover">
         <xsl:call-template name="veg:ADEOfPlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:ADEOfSolitaryVegetationObject">
         <xsl:call-template name="veg:ADEOfSolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:ADEOfVersion">
         <xsl:call-template name="vers:ADEOfVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:ADEOfVersionTransition">
         <xsl:call-template name="vers:ADEOfVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Transaction">
         <xsl:call-template name="vers:Transaction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:ADEOfAbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:ADEOfAbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:ADEOfWaterBody">
         <xsl:call-template name="wtr:ADEOfWaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:ADEOfWaterGroundSurface">
         <xsl:call-template name="wtr:ADEOfWaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:ADEOfWaterSurface">
         <xsl:call-template name="wtr:ADEOfWaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralParameterValue">
         <xsl:call-template name="gml:AbstractGeneralParameterValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ParameterValue">
         <xsl:call-template name="gml:ParameterValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ParameterValueGroup">
         <xsl:call-template name="gml:ParameterValueGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DataBlock">
         <xsl:call-template name="gml:DataBlock_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:File">
         <xsl:call-template name="gml:File_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coverageFunction">
         <xsl:call-template name="gml:coverageFunction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CoverageMappingRule">
         <xsl:call-template name="gml:CoverageMappingRule_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GridFunction">
         <xsl:call-template name="gml:GridFunction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractMetaData">
         <xsl:call-template name="gml:AbstractMetaData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GenericMetaData">
         <xsl:call-template name="gml:GenericMetaData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Envelope">
         <xsl:call-template name="gml:Envelope_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EnvelopeWithTimePeriod">
         <xsl:call-template name="gml:EnvelopeWithTimePeriod_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractRing">
         <xsl:call-template name="gml:AbstractRing_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LinearRing">
         <xsl:call-template name="gml:LinearRing_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Ring">
         <xsl:call-template name="gml:Ring_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCurveSegment">
         <xsl:call-template name="gml:AbstractCurveSegment_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineStringSegment">
         <xsl:call-template name="gml:LineStringSegment_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ArcString">
         <xsl:call-template name="gml:ArcString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Arc">
         <xsl:call-template name="gml:Arc_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Circle">
         <xsl:call-template name="gml:Circle_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ArcStringByBulge">
         <xsl:call-template name="gml:ArcStringByBulge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ArcByBulge">
         <xsl:call-template name="gml:ArcByBulge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ArcByCenterPoint">
         <xsl:call-template name="gml:ArcByCenterPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CircleByCenterPoint">
         <xsl:call-template name="gml:CircleByCenterPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CubicSpline">
         <xsl:call-template name="gml:CubicSpline_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:BSpline">
         <xsl:call-template name="gml:BSpline_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Bezier">
         <xsl:call-template name="gml:Bezier_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OffsetCurve">
         <xsl:call-template name="gml:OffsetCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Clothoid">
         <xsl:call-template name="gml:Clothoid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeodesicString">
         <xsl:call-template name="gml:GeodesicString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Geodesic">
         <xsl:call-template name="gml:Geodesic_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AffinePlacement">
         <xsl:call-template name="gml:AffinePlacement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Shell">
         <xsl:call-template name="gml:Shell_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGML">
         <xsl:call-template name="gml:AbstractGML_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:TextureAssociation">
         <xsl:call-template name="app:TextureAssociation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:CityObjectRelation">
         <xsl:call-template name="core:CityObjectRelation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ImplicitGeometry">
         <xsl:call-template name="core:ImplicitGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:Role">
         <xsl:call-template name="grp:Role_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractStyle">
         <xsl:call-template name="gml:AbstractStyle_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Style">
         <xsl:call-template name="gml:Style_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:FeatureStyle">
         <xsl:call-template name="gml:FeatureStyle_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeometryStyle">
         <xsl:call-template name="gml:GeometryStyle_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TopologyStyle">
         <xsl:call-template name="gml:TopologyStyle_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LabelStyle">
         <xsl:call-template name="gml:LabelStyle_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GraphStyle">
         <xsl:call-template name="gml:GraphStyle_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Bag">
         <xsl:call-template name="gml:Bag_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Array">
         <xsl:call-template name="gml:Array_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Definition">
         <xsl:call-template name="gml:Definition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCoordinateOperation">
         <xsl:call-template name="gml:AbstractCoordinateOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSingleOperation">
         <xsl:call-template name="gml:AbstractSingleOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PassThroughOperation">
         <xsl:call-template name="gml:PassThroughOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractOperation">
         <xsl:call-template name="gml:AbstractOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralConversion">
         <xsl:call-template name="gml:AbstractGeneralConversion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Conversion">
         <xsl:call-template name="gml:Conversion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralTransformation">
         <xsl:call-template name="gml:AbstractGeneralTransformation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Transformation">
         <xsl:call-template name="gml:Transformation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ConcatenatedOperation">
         <xsl:call-template name="gml:ConcatenatedOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OperationMethod">
         <xsl:call-template name="gml:OperationMethod_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralOperationParameter">
         <xsl:call-template name="gml:AbstractGeneralOperationParameter_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OperationParameter">
         <xsl:call-template name="gml:OperationParameter_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OperationParameterGroup">
         <xsl:call-template name="gml:OperationParameterGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CoordinateSystemAxis">
         <xsl:call-template name="gml:CoordinateSystemAxis_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCoordinateSystem">
         <xsl:call-template name="gml:AbstractCoordinateSystem_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EllipsoidalCS">
         <xsl:call-template name="gml:EllipsoidalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CartesianCS">
         <xsl:call-template name="gml:CartesianCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:VerticalCS">
         <xsl:call-template name="gml:VerticalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeCS">
         <xsl:call-template name="gml:TimeCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LinearCS">
         <xsl:call-template name="gml:LinearCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:UserDefinedCS">
         <xsl:call-template name="gml:UserDefinedCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:SphericalCS">
         <xsl:call-template name="gml:SphericalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolarCS">
         <xsl:call-template name="gml:PolarCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CylindricalCS">
         <xsl:call-template name="gml:CylindricalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AffineCS">
         <xsl:call-template name="gml:AffineCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TemporalCS">
         <xsl:call-template name="gml:TemporalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ObliqueCartesianCS">
         <xsl:call-template name="gml:ObliqueCartesianCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractDatum">
         <xsl:call-template name="gml:AbstractDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeodeticDatum">
         <xsl:call-template name="gml:GeodeticDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EngineeringDatum">
         <xsl:call-template name="gml:EngineeringDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ImageDatum">
         <xsl:call-template name="gml:ImageDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:VerticalDatum">
         <xsl:call-template name="gml:VerticalDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TemporalDatum">
         <xsl:call-template name="gml:TemporalDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Ellipsoid">
         <xsl:call-template name="gml:Ellipsoid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PrimeMeridian">
         <xsl:call-template name="gml:PrimeMeridian_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DefinitionCollection">
         <xsl:call-template name="gml:DefinitionCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DefinitionProxy">
         <xsl:call-template name="gml:DefinitionProxy_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Dictionary">
         <xsl:call-template name="gml:Dictionary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCRS">
         <xsl:call-template name="gml:AbstractCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSingleCRS">
         <xsl:call-template name="gml:AbstractSingleCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralDerivedCRS">
         <xsl:call-template name="gml:AbstractGeneralDerivedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ProjectedCRS">
         <xsl:call-template name="gml:ProjectedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DerivedCRS">
         <xsl:call-template name="gml:DerivedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeodeticCRS">
         <xsl:call-template name="gml:GeodeticCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:VerticalCRS">
         <xsl:call-template name="gml:VerticalCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EngineeringCRS">
         <xsl:call-template name="gml:EngineeringCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ImageCRS">
         <xsl:call-template name="gml:ImageCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TemporalCRS">
         <xsl:call-template name="gml:TemporalCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeographicCRS">
         <xsl:call-template name="gml:GeographicCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeocentricCRS">
         <xsl:call-template name="gml:GeocentricCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompoundCRS">
         <xsl:call-template name="gml:CompoundCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeReferenceSystem">
         <xsl:call-template name="gml:TimeReferenceSystem_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeCoordinateSystem">
         <xsl:call-template name="gml:TimeCoordinateSystem_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeCalendar">
         <xsl:call-template name="gml:TimeCalendar_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeClock">
         <xsl:call-template name="gml:TimeClock_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeOrdinalReferenceSystem">
         <xsl:call-template name="gml:TimeOrdinalReferenceSystem_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:UnitDefinition">
         <xsl:call-template name="gml:UnitDefinition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:BaseUnit">
         <xsl:call-template name="gml:BaseUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DerivedUnit">
         <xsl:call-template name="gml:DerivedUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ConventionalUnit">
         <xsl:call-template name="gml:ConventionalUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeSlice">
         <xsl:call-template name="gml:AbstractTimeSlice_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MovingObjectStatus">
         <xsl:call-template name="gml:MovingObjectStatus_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractFeature">
         <xsl:call-template name="gml:AbstractFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeature">
         <xsl:call-template name="core:AbstractFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractSurfaceData">
         <xsl:call-template name="app:AbstractSurfaceData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractTexture">
         <xsl:call-template name="app:AbstractTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:X3DMaterial">
         <xsl:call-template name="app:X3DMaterial_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeatureWithLifespan">
         <xsl:call-template name="core:AbstractFeatureWithLifespan_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractDynamizer">
         <xsl:call-template name="core:AbstractDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:CityModel">
         <xsl:call-template name="core:CityModel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPointCloud">
         <xsl:call-template name="core:AbstractPointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:PointCloud">
         <xsl:call-template name="pcl:PointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:Address">
         <xsl:call-template name="core:Address_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractTimeseries">
         <xsl:call-template name="dyn:AbstractTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractAtomicTimeseries">
         <xsl:call-template name="dyn:AbstractAtomicTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:CompositeTimeseries">
         <xsl:call-template name="dyn:CompositeTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCoverage">
         <xsl:call-template name="gml:AbstractCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractDiscreteCoverage">
         <xsl:call-template name="gml:AbstractDiscreteCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPointCoverage">
         <xsl:call-template name="gml:MultiPointCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurveCoverage">
         <xsl:call-template name="gml:MultiCurveCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurfaceCoverage">
         <xsl:call-template name="gml:MultiSurfaceCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolidCoverage">
         <xsl:call-template name="gml:MultiSolidCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GridCoverage">
         <xsl:call-template name="gml:GridCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGridCoverage">
         <xsl:call-template name="gml:RectifiedGridCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractContinuousCoverage">
         <xsl:call-template name="gml:AbstractContinuousCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractFeatureCollection">
         <xsl:call-template name="gml:AbstractFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:FeatureCollection">
         <xsl:call-template name="gml:FeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeature">
         <xsl:call-template name="gml:DynamicFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeatureCollection">
         <xsl:call-template name="gml:DynamicFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Observation">
         <xsl:call-template name="gml:Observation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectedObservation">
         <xsl:call-template name="gml:DirectedObservation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectedObservationAtDistance">
         <xsl:call-template name="gml:DirectedObservationAtDistance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometry">
         <xsl:call-template name="gml:AbstractGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricAggregate">
         <xsl:call-template name="gml:AbstractGeometricAggregate_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiGeometry">
         <xsl:call-template name="gml:MultiGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPoint">
         <xsl:call-template name="gml:MultiPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurve">
         <xsl:call-template name="gml:MultiCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurface">
         <xsl:call-template name="gml:MultiSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolid">
         <xsl:call-template name="gml:MultiSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricPrimitive">
         <xsl:call-template name="gml:AbstractGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Point">
         <xsl:call-template name="gml:Point_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCurve">
         <xsl:call-template name="gml:AbstractCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineString">
         <xsl:call-template name="gml:LineString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Curve">
         <xsl:call-template name="gml:Curve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableCurve">
         <xsl:call-template name="gml:OrientableCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSurface">
         <xsl:call-template name="gml:AbstractSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Polygon">
         <xsl:call-template name="gml:Polygon_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Surface">
         <xsl:call-template name="gml:Surface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolyhedralSurface">
         <xsl:call-template name="gml:PolyhedralSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TriangulatedSurface">
         <xsl:call-template name="gml:TriangulatedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Tin">
         <xsl:call-template name="gml:Tin_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableSurface">
         <xsl:call-template name="gml:OrientableSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSolid">
         <xsl:call-template name="gml:AbstractSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Solid">
         <xsl:call-template name="gml:Solid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeometricComplex">
         <xsl:call-template name="gml:GeometricComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractImplicitGeometry">
         <xsl:call-template name="gml:AbstractImplicitGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Grid">
         <xsl:call-template name="gml:Grid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGrid">
         <xsl:call-template name="gml:RectifiedGrid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeObject">
         <xsl:call-template name="gml:AbstractTimeObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimePrimitive">
         <xsl:call-template name="gml:AbstractTimePrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeGeometricPrimitive">
         <xsl:call-template name="gml:AbstractTimeGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeInstant">
         <xsl:call-template name="gml:TimeInstant_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimePeriod">
         <xsl:call-template name="gml:TimePeriod_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeTopologyPrimitive">
         <xsl:call-template name="gml:AbstractTimeTopologyPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeNode">
         <xsl:call-template name="gml:TimeNode_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeEdge">
         <xsl:call-template name="gml:TimeEdge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeComplex">
         <xsl:call-template name="gml:AbstractTimeComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeTopologyComplex">
         <xsl:call-template name="gml:TimeTopologyComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTopology">
         <xsl:call-template name="gml:AbstractTopology_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTopoPrimitive">
         <xsl:call-template name="gml:AbstractTopoPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Node">
         <xsl:call-template name="gml:Node_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Edge">
         <xsl:call-template name="gml:Edge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Face">
         <xsl:call-template name="gml:Face_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TopoSolid">
         <xsl:call-template name="gml:TopoSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TopoComplex">
         <xsl:call-template name="gml:TopoComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractValue">
         <xsl:call-template name="gml:AbstractValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractScalarValue">
         <xsl:call-template name="gml:AbstractScalarValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Boolean">
         <xsl:call-template name="gml:Boolean_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Category">
         <xsl:call-template name="gml:Category_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Count">
         <xsl:call-template name="gml:Count_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Quantity">
         <xsl:call-template name="gml:Quantity_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractScalarValueList">
         <xsl:call-template name="gml:AbstractScalarValueList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:BooleanList">
         <xsl:call-template name="gml:BooleanList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CategoryList">
         <xsl:call-template name="gml:CategoryList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CountList">
         <xsl:call-template name="gml:CountList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:QuantityList">
         <xsl:call-template name="gml:QuantityList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeValue">
         <xsl:call-template name="gml:CompositeValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ValueArray">
         <xsl:call-template name="gml:ValueArray_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CategoryExtent">
         <xsl:call-template name="gml:CategoryExtent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CountExtent">
         <xsl:call-template name="gml:CountExtent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:QuantityExtent">
         <xsl:call-template name="gml:QuantityExtent_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:StringOrRefType_Template">
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:BagType_Template">
      <xsl:for-each select="./gml:member">
         <xsl:call-template name="gml:member_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:members">
         <xsl:call-template name="gml:members_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ArrayType_Template">
      <xsl:for-each select="./gml:members">
         <xsl:call-template name="gml:members_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:MetaDataPropertyType_Template">
      <xsl:for-each select="./gml:AbstractMetaData">
         <xsl:call-template name="gml:AbstractMetaData_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GenericMetaData">
         <xsl:call-template name="gml:GenericMetaData_Substitution"/>
      </xsl:for-each>
      <xsl:if test="@gml:about">
         <xsl:call-template name="gml:about_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractMetaDataType_Template">
      <xsl:if test="@gml:id">
         <xsl:call-template name="gml:id_Property"/>
      </xsl:if>
   </xsl:template>
   <xsl:template name="gml:GenericMetaDataType_Template">
      <xsl:call-template name="gml:AbstractMetaDataType_Template"/>
   </xsl:template>
   <xsl:template name="gml:LocationPropertyType_Template">
      <xsl:for-each select="./gml:AbstractGeometry">
         <xsl:call-template name="gml:AbstractGeometry_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricAggregate">
         <xsl:call-template name="gml:AbstractGeometricAggregate_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiGeometry">
         <xsl:call-template name="gml:MultiGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPoint">
         <xsl:call-template name="gml:MultiPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurve">
         <xsl:call-template name="gml:MultiCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurface">
         <xsl:call-template name="gml:MultiSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolid">
         <xsl:call-template name="gml:MultiSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricPrimitive">
         <xsl:call-template name="gml:AbstractGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Point">
         <xsl:call-template name="gml:Point_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCurve">
         <xsl:call-template name="gml:AbstractCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineString">
         <xsl:call-template name="gml:LineString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Curve">
         <xsl:call-template name="gml:Curve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableCurve">
         <xsl:call-template name="gml:OrientableCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSurface">
         <xsl:call-template name="gml:AbstractSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Polygon">
         <xsl:call-template name="gml:Polygon_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Surface">
         <xsl:call-template name="gml:Surface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolyhedralSurface">
         <xsl:call-template name="gml:PolyhedralSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TriangulatedSurface">
         <xsl:call-template name="gml:TriangulatedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Tin">
         <xsl:call-template name="gml:Tin_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableSurface">
         <xsl:call-template name="gml:OrientableSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSolid">
         <xsl:call-template name="gml:AbstractSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Solid">
         <xsl:call-template name="gml:Solid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeometricComplex">
         <xsl:call-template name="gml:GeometricComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractImplicitGeometry">
         <xsl:call-template name="gml:AbstractImplicitGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Grid">
         <xsl:call-template name="gml:Grid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGrid">
         <xsl:call-template name="gml:RectifiedGrid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LocationKeyWord">
         <xsl:call-template name="gml:LocationKeyWord_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LocationString">
         <xsl:call-template name="gml:LocationString_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Null">
         <xsl:call-template name="gml:Null_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:PriorityLocationPropertyType_Template">
      <xsl:if test="@gml:priority">
         <xsl:call-template name="gml:priority_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:LocationPropertyType_Template"/>
   </xsl:template>
   <xsl:template name="gml:FeatureArrayPropertyType_Template">
      <xsl:for-each select="./gml:AbstractFeature">
         <xsl:call-template name="gml:AbstractFeature_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeature">
         <xsl:call-template name="core:AbstractFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractSurfaceData">
         <xsl:call-template name="app:AbstractSurfaceData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractTexture">
         <xsl:call-template name="app:AbstractTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:X3DMaterial">
         <xsl:call-template name="app:X3DMaterial_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeatureWithLifespan">
         <xsl:call-template name="core:AbstractFeatureWithLifespan_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractDynamizer">
         <xsl:call-template name="core:AbstractDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:CityModel">
         <xsl:call-template name="core:CityModel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPointCloud">
         <xsl:call-template name="core:AbstractPointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:PointCloud">
         <xsl:call-template name="pcl:PointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:Address">
         <xsl:call-template name="core:Address_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractTimeseries">
         <xsl:call-template name="dyn:AbstractTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractAtomicTimeseries">
         <xsl:call-template name="dyn:AbstractAtomicTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:CompositeTimeseries">
         <xsl:call-template name="dyn:CompositeTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCoverage">
         <xsl:call-template name="gml:AbstractCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractDiscreteCoverage">
         <xsl:call-template name="gml:AbstractDiscreteCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPointCoverage">
         <xsl:call-template name="gml:MultiPointCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurveCoverage">
         <xsl:call-template name="gml:MultiCurveCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurfaceCoverage">
         <xsl:call-template name="gml:MultiSurfaceCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolidCoverage">
         <xsl:call-template name="gml:MultiSolidCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GridCoverage">
         <xsl:call-template name="gml:GridCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGridCoverage">
         <xsl:call-template name="gml:RectifiedGridCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractContinuousCoverage">
         <xsl:call-template name="gml:AbstractContinuousCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractFeatureCollection">
         <xsl:call-template name="gml:AbstractFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:FeatureCollection">
         <xsl:call-template name="gml:FeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeature">
         <xsl:call-template name="gml:DynamicFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeatureCollection">
         <xsl:call-template name="gml:DynamicFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Observation">
         <xsl:call-template name="gml:Observation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectedObservation">
         <xsl:call-template name="gml:DirectedObservation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectedObservationAtDistance">
         <xsl:call-template name="gml:DirectedObservationAtDistance_Substitution"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:BoundedFeatureType_Template">
      <xsl:for-each select="./gml:boundedBy">
         <xsl:call-template name="gml:boundedBy_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:location">
         <xsl:call-template name="gml:location_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:priorityLocation">
         <xsl:call-template name="gml:priorityLocation_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:StandardObjectProperties_Template"/>
      <xsl:call-template name="gml:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractFeatureCollectionType_Template">
      <xsl:for-each select="./gml:featureMember">
         <xsl:call-template name="gml:featureMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:featureMembers">
         <xsl:call-template name="gml:featureMembers_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:FeatureCollectionType_Template">
      <xsl:call-template name="gml:AbstractFeatureCollectionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:IndirectEntryType_Template">
      <xsl:for-each select="./gml:DefinitionProxy">
         <xsl:call-template name="gml:DefinitionProxy_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:DefinitionProxyType_Template">
      <xsl:for-each select="./gml:definitionRef">
         <xsl:call-template name="gml:definitionRef_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:DefinitionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:MovingObjectStatusType_Template">
      <xsl:for-each select="./gml:position">
         <xsl:call-template name="gml:position_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:locationName">
         <xsl:call-template name="gml:locationName_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:locationReference">
         <xsl:call-template name="gml:locationReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:location">
         <xsl:call-template name="gml:location_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:priorityLocation">
         <xsl:call-template name="gml:priorityLocation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:speed">
         <xsl:call-template name="gml:speed_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:bearing">
         <xsl:call-template name="gml:bearing_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:acceleration">
         <xsl:call-template name="gml:acceleration_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:elevation">
         <xsl:call-template name="gml:elevation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:status">
         <xsl:call-template name="gml:status_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:statusReference">
         <xsl:call-template name="gml:statusReference_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractTimeSliceType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DefinitionBaseType_Template">
      <xsl:for-each select="./gml:metaDataProperty">
         <xsl:call-template name="gml:metaDataProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:description">
         <xsl:call-template name="gml:description_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:descriptionReference">
         <xsl:call-template name="gml:descriptionReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:identifier">
         <xsl:call-template name="gml:identifier_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:name">
         <xsl:call-template name="gml:name_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:id">
         <xsl:call-template name="gml:id_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DefinitionType_Template">
      <xsl:for-each select="./gml:remarks">
         <xsl:call-template name="gml:remarks_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:DefinitionBaseType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DictionaryType_Template">
      <xsl:for-each select="./gml:dictionaryEntry">
         <xsl:call-template name="gml:dictionaryEntry_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:definitionMember">
         <xsl:call-template name="gml:definitionMember_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:indirectEntry">
         <xsl:call-template name="gml:indirectEntry_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:DefinitionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DictionaryEntryType_Template">
      <xsl:for-each select="./gml:Definition">
         <xsl:call-template name="gml:Definition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCoordinateOperation">
         <xsl:call-template name="gml:AbstractCoordinateOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSingleOperation">
         <xsl:call-template name="gml:AbstractSingleOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PassThroughOperation">
         <xsl:call-template name="gml:PassThroughOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractOperation">
         <xsl:call-template name="gml:AbstractOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralConversion">
         <xsl:call-template name="gml:AbstractGeneralConversion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Conversion">
         <xsl:call-template name="gml:Conversion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralTransformation">
         <xsl:call-template name="gml:AbstractGeneralTransformation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Transformation">
         <xsl:call-template name="gml:Transformation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ConcatenatedOperation">
         <xsl:call-template name="gml:ConcatenatedOperation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OperationMethod">
         <xsl:call-template name="gml:OperationMethod_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralOperationParameter">
         <xsl:call-template name="gml:AbstractGeneralOperationParameter_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OperationParameter">
         <xsl:call-template name="gml:OperationParameter_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OperationParameterGroup">
         <xsl:call-template name="gml:OperationParameterGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CoordinateSystemAxis">
         <xsl:call-template name="gml:CoordinateSystemAxis_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCoordinateSystem">
         <xsl:call-template name="gml:AbstractCoordinateSystem_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EllipsoidalCS">
         <xsl:call-template name="gml:EllipsoidalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CartesianCS">
         <xsl:call-template name="gml:CartesianCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:VerticalCS">
         <xsl:call-template name="gml:VerticalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeCS">
         <xsl:call-template name="gml:TimeCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LinearCS">
         <xsl:call-template name="gml:LinearCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:UserDefinedCS">
         <xsl:call-template name="gml:UserDefinedCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:SphericalCS">
         <xsl:call-template name="gml:SphericalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolarCS">
         <xsl:call-template name="gml:PolarCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CylindricalCS">
         <xsl:call-template name="gml:CylindricalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AffineCS">
         <xsl:call-template name="gml:AffineCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TemporalCS">
         <xsl:call-template name="gml:TemporalCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ObliqueCartesianCS">
         <xsl:call-template name="gml:ObliqueCartesianCS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractDatum">
         <xsl:call-template name="gml:AbstractDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeodeticDatum">
         <xsl:call-template name="gml:GeodeticDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EngineeringDatum">
         <xsl:call-template name="gml:EngineeringDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ImageDatum">
         <xsl:call-template name="gml:ImageDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:VerticalDatum">
         <xsl:call-template name="gml:VerticalDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TemporalDatum">
         <xsl:call-template name="gml:TemporalDatum_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Ellipsoid">
         <xsl:call-template name="gml:Ellipsoid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PrimeMeridian">
         <xsl:call-template name="gml:PrimeMeridian_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DefinitionCollection">
         <xsl:call-template name="gml:DefinitionCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DefinitionProxy">
         <xsl:call-template name="gml:DefinitionProxy_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Dictionary">
         <xsl:call-template name="gml:Dictionary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCRS">
         <xsl:call-template name="gml:AbstractCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSingleCRS">
         <xsl:call-template name="gml:AbstractSingleCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralDerivedCRS">
         <xsl:call-template name="gml:AbstractGeneralDerivedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ProjectedCRS">
         <xsl:call-template name="gml:ProjectedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DerivedCRS">
         <xsl:call-template name="gml:DerivedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeodeticCRS">
         <xsl:call-template name="gml:GeodeticCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:VerticalCRS">
         <xsl:call-template name="gml:VerticalCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EngineeringCRS">
         <xsl:call-template name="gml:EngineeringCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ImageCRS">
         <xsl:call-template name="gml:ImageCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TemporalCRS">
         <xsl:call-template name="gml:TemporalCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeographicCRS">
         <xsl:call-template name="gml:GeographicCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeocentricCRS">
         <xsl:call-template name="gml:GeocentricCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompoundCRS">
         <xsl:call-template name="gml:CompoundCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeReferenceSystem">
         <xsl:call-template name="gml:TimeReferenceSystem_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeCoordinateSystem">
         <xsl:call-template name="gml:TimeCoordinateSystem_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeCalendar">
         <xsl:call-template name="gml:TimeCalendar_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeClock">
         <xsl:call-template name="gml:TimeClock_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeOrdinalReferenceSystem">
         <xsl:call-template name="gml:TimeOrdinalReferenceSystem_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:UnitDefinition">
         <xsl:call-template name="gml:UnitDefinition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:BaseUnit">
         <xsl:call-template name="gml:BaseUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DerivedUnit">
         <xsl:call-template name="gml:DerivedUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ConventionalUnit">
         <xsl:call-template name="gml:ConventionalUnit_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractMemberType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DirectionPropertyType_Template">
      <xsl:for-each select="./gml:DirectionVector">
         <xsl:call-template name="gml:DirectionVector_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectionDescription">
         <xsl:call-template name="gml:DirectionDescription_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompassPoint">
         <xsl:call-template name="gml:CompassPoint_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectionKeyword">
         <xsl:call-template name="gml:DirectionKeyword_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectionString">
         <xsl:call-template name="gml:DirectionString_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:DirectionVectorType_Template">
      <xsl:for-each select="./gml:vector">
         <xsl:call-template name="gml:vector_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:horizontalAngle">
         <xsl:call-template name="gml:horizontalAngle_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:verticalAngle">
         <xsl:call-template name="gml:verticalAngle_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:DirectionDescriptionType_Template">
      <xsl:for-each select="./gml:compassPoint">
         <xsl:call-template name="gml:compassPoint_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:keyword">
         <xsl:call-template name="gml:keyword_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:description">
         <xsl:call-template name="gml:description_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:reference">
         <xsl:call-template name="gml:reference_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:DynamicFeatureType_Template">
      <xsl:call-template name="gml:dynamicProperties_Template"/>
      <xsl:call-template name="gml:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DynamicFeatureCollectionType_Template">
      <xsl:for-each select="./gml:dynamicMembers">
         <xsl:call-template name="gml:dynamicMembers_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:DynamicFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DynamicFeatureMemberType_Template">
      <xsl:for-each select="./gml:DynamicFeature">
         <xsl:call-template name="gml:DynamicFeature_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeatureCollection">
         <xsl:call-template name="gml:DynamicFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractFeatureMemberType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeSliceType_Template">
      <xsl:for-each select="./gml:validTime">
         <xsl:call-template name="gml:validTime_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:dataSource">
         <xsl:call-template name="gml:dataSource_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:HistoryPropertyType_Template">
      <xsl:for-each select="./gml:AbstractTimeSlice">
         <xsl:call-template name="gml:AbstractTimeSlice_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MovingObjectStatus">
         <xsl:call-template name="gml:MovingObjectStatus_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractFeatureType_Template">
      <xsl:for-each select="./gml:boundedBy">
         <xsl:call-template name="gml:boundedBy_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:location">
         <xsl:call-template name="gml:location_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:priorityLocation">
         <xsl:call-template name="gml:priorityLocation_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:FeaturePropertyType_Template">
      <xsl:for-each select="./gml:AbstractFeature">
         <xsl:call-template name="gml:AbstractFeature_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeature">
         <xsl:call-template name="core:AbstractFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractSurfaceData">
         <xsl:call-template name="app:AbstractSurfaceData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractTexture">
         <xsl:call-template name="app:AbstractTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:X3DMaterial">
         <xsl:call-template name="app:X3DMaterial_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeatureWithLifespan">
         <xsl:call-template name="core:AbstractFeatureWithLifespan_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractDynamizer">
         <xsl:call-template name="core:AbstractDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:CityModel">
         <xsl:call-template name="core:CityModel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPointCloud">
         <xsl:call-template name="core:AbstractPointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:PointCloud">
         <xsl:call-template name="pcl:PointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:Address">
         <xsl:call-template name="core:Address_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractTimeseries">
         <xsl:call-template name="dyn:AbstractTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractAtomicTimeseries">
         <xsl:call-template name="dyn:AbstractAtomicTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:CompositeTimeseries">
         <xsl:call-template name="dyn:CompositeTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCoverage">
         <xsl:call-template name="gml:AbstractCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractDiscreteCoverage">
         <xsl:call-template name="gml:AbstractDiscreteCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPointCoverage">
         <xsl:call-template name="gml:MultiPointCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurveCoverage">
         <xsl:call-template name="gml:MultiCurveCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurfaceCoverage">
         <xsl:call-template name="gml:MultiSurfaceCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolidCoverage">
         <xsl:call-template name="gml:MultiSolidCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GridCoverage">
         <xsl:call-template name="gml:GridCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGridCoverage">
         <xsl:call-template name="gml:RectifiedGridCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractContinuousCoverage">
         <xsl:call-template name="gml:AbstractContinuousCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractFeatureCollection">
         <xsl:call-template name="gml:AbstractFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:FeatureCollection">
         <xsl:call-template name="gml:FeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeature">
         <xsl:call-template name="gml:DynamicFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeatureCollection">
         <xsl:call-template name="gml:DynamicFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Observation">
         <xsl:call-template name="gml:Observation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectedObservation">
         <xsl:call-template name="gml:DirectedObservation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectedObservationAtDistance">
         <xsl:call-template name="gml:DirectedObservationAtDistance_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:BoundingShapeType_Template">
      <xsl:for-each select="./gml:Envelope">
         <xsl:call-template name="gml:Envelope_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EnvelopeWithTimePeriod">
         <xsl:call-template name="gml:EnvelopeWithTimePeriod_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Null">
         <xsl:call-template name="gml:Null_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:nilReason">
         <xsl:call-template name="gml:nilReason_Property"/>
      </xsl:if>
   </xsl:template>
   <xsl:template name="gml:EnvelopeWithTimePeriodType_Template">
      <xsl:for-each select="./gml:beginPosition">
         <xsl:call-template name="gml:beginPosition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:endPosition">
         <xsl:call-template name="gml:endPosition_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:frame">
         <xsl:call-template name="gml:frame_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:EnvelopeType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractFeatureMemberType_Template">
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeometricAggregateType_Template">
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractGeometryType_Template"/>
   </xsl:template>
   <xsl:template name="gml:MultiGeometryType_Template">
      <xsl:for-each select="./gml:geometryMember">
         <xsl:call-template name="gml:geometryMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:geometryMembers">
         <xsl:call-template name="gml:geometryMembers_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeometricAggregateType_Template"/>
   </xsl:template>
   <xsl:template name="gml:MultiGeometryPropertyType_Template">
      <xsl:for-each select="./gml:AbstractGeometricAggregate">
         <xsl:call-template name="gml:AbstractGeometricAggregate_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiGeometry">
         <xsl:call-template name="gml:MultiGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPoint">
         <xsl:call-template name="gml:MultiPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurve">
         <xsl:call-template name="gml:MultiCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurface">
         <xsl:call-template name="gml:MultiSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolid">
         <xsl:call-template name="gml:MultiSolid_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:MultiPointType_Template">
      <xsl:for-each select="./gml:pointMember">
         <xsl:call-template name="gml:pointMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointMembers">
         <xsl:call-template name="gml:pointMembers_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeometricAggregateType_Template"/>
   </xsl:template>
   <xsl:template name="gml:MultiPointPropertyType_Template">
      <xsl:for-each select="./gml:MultiPoint">
         <xsl:call-template name="gml:MultiPoint_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:MultiCurveType_Template">
      <xsl:for-each select="./gml:curveMember">
         <xsl:call-template name="gml:curveMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:curveMembers">
         <xsl:call-template name="gml:curveMembers_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeometricAggregateType_Template"/>
   </xsl:template>
   <xsl:template name="gml:MultiCurvePropertyType_Template">
      <xsl:for-each select="./gml:MultiCurve">
         <xsl:call-template name="gml:MultiCurve_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:MultiSurfaceType_Template">
      <xsl:for-each select="./gml:surfaceMember">
         <xsl:call-template name="gml:surfaceMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:surfaceMembers">
         <xsl:call-template name="gml:surfaceMembers_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeometricAggregateType_Template"/>
   </xsl:template>
   <xsl:template name="gml:MultiSurfacePropertyType_Template">
      <xsl:for-each select="./gml:MultiSurface">
         <xsl:call-template name="gml:MultiSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:MultiSolidType_Template">
      <xsl:for-each select="./gml:solidMember">
         <xsl:call-template name="gml:solidMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:solidMembers">
         <xsl:call-template name="gml:solidMembers_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeometricAggregateType_Template"/>
   </xsl:template>
   <xsl:template name="gml:MultiSolidPropertyType_Template">
      <xsl:for-each select="./gml:MultiSolid">
         <xsl:call-template name="gml:MultiSolid_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeometryType_Template">
      <xsl:call-template name="gml:SRSReferenceGroup_Template"/>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeometryPropertyType_Template">
      <xsl:for-each select="./gml:AbstractGeometry">
         <xsl:call-template name="gml:AbstractGeometry_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricAggregate">
         <xsl:call-template name="gml:AbstractGeometricAggregate_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiGeometry">
         <xsl:call-template name="gml:MultiGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPoint">
         <xsl:call-template name="gml:MultiPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurve">
         <xsl:call-template name="gml:MultiCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurface">
         <xsl:call-template name="gml:MultiSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolid">
         <xsl:call-template name="gml:MultiSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricPrimitive">
         <xsl:call-template name="gml:AbstractGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Point">
         <xsl:call-template name="gml:Point_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCurve">
         <xsl:call-template name="gml:AbstractCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineString">
         <xsl:call-template name="gml:LineString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Curve">
         <xsl:call-template name="gml:Curve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableCurve">
         <xsl:call-template name="gml:OrientableCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSurface">
         <xsl:call-template name="gml:AbstractSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Polygon">
         <xsl:call-template name="gml:Polygon_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Surface">
         <xsl:call-template name="gml:Surface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolyhedralSurface">
         <xsl:call-template name="gml:PolyhedralSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TriangulatedSurface">
         <xsl:call-template name="gml:TriangulatedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Tin">
         <xsl:call-template name="gml:Tin_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableSurface">
         <xsl:call-template name="gml:OrientableSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSolid">
         <xsl:call-template name="gml:AbstractSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Solid">
         <xsl:call-template name="gml:Solid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeometricComplex">
         <xsl:call-template name="gml:GeometricComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractImplicitGeometry">
         <xsl:call-template name="gml:AbstractImplicitGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Grid">
         <xsl:call-template name="gml:Grid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGrid">
         <xsl:call-template name="gml:RectifiedGrid_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeometryArrayPropertyType_Template">
      <xsl:for-each select="./gml:AbstractGeometry">
         <xsl:call-template name="gml:AbstractGeometry_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricAggregate">
         <xsl:call-template name="gml:AbstractGeometricAggregate_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiGeometry">
         <xsl:call-template name="gml:MultiGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPoint">
         <xsl:call-template name="gml:MultiPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurve">
         <xsl:call-template name="gml:MultiCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurface">
         <xsl:call-template name="gml:MultiSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolid">
         <xsl:call-template name="gml:MultiSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricPrimitive">
         <xsl:call-template name="gml:AbstractGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Point">
         <xsl:call-template name="gml:Point_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCurve">
         <xsl:call-template name="gml:AbstractCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineString">
         <xsl:call-template name="gml:LineString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Curve">
         <xsl:call-template name="gml:Curve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableCurve">
         <xsl:call-template name="gml:OrientableCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSurface">
         <xsl:call-template name="gml:AbstractSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Polygon">
         <xsl:call-template name="gml:Polygon_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Surface">
         <xsl:call-template name="gml:Surface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolyhedralSurface">
         <xsl:call-template name="gml:PolyhedralSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TriangulatedSurface">
         <xsl:call-template name="gml:TriangulatedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Tin">
         <xsl:call-template name="gml:Tin_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableSurface">
         <xsl:call-template name="gml:OrientableSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSolid">
         <xsl:call-template name="gml:AbstractSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Solid">
         <xsl:call-template name="gml:Solid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeometricComplex">
         <xsl:call-template name="gml:GeometricComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractImplicitGeometry">
         <xsl:call-template name="gml:AbstractImplicitGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Grid">
         <xsl:call-template name="gml:Grid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGrid">
         <xsl:call-template name="gml:RectifiedGrid_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:DirectPositionType_Template">
      <xsl:call-template name="gml:SRSReferenceGroup_Template"/>
      <xsl:call-template name="gml:doubleList_Template"/>
   </xsl:template>
   <xsl:template name="gml:DirectPositionListType_Template">
      <xsl:if test="@gml:count">
         <xsl:call-template name="gml:count_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:SRSReferenceGroup_Template"/>
      <xsl:call-template name="gml:doubleList_Template"/>
   </xsl:template>
   <xsl:template name="gml:VectorType_Template">
      <xsl:call-template name="gml:DirectPositionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:EnvelopeType_Template">
      <xsl:for-each select="./gml:lowerCorner">
         <xsl:call-template name="gml:lowerCorner_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:upperCorner">
         <xsl:call-template name="gml:upperCorner_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:SRSReferenceGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeometricPrimitiveType_Template">
      <xsl:call-template name="gml:AbstractGeometryType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeometricPrimitivePropertyType_Template">
      <xsl:for-each select="./gml:AbstractGeometricPrimitive">
         <xsl:call-template name="gml:AbstractGeometricPrimitive_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Point">
         <xsl:call-template name="gml:Point_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCurve">
         <xsl:call-template name="gml:AbstractCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineString">
         <xsl:call-template name="gml:LineString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Curve">
         <xsl:call-template name="gml:Curve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableCurve">
         <xsl:call-template name="gml:OrientableCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSurface">
         <xsl:call-template name="gml:AbstractSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Polygon">
         <xsl:call-template name="gml:Polygon_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Surface">
         <xsl:call-template name="gml:Surface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolyhedralSurface">
         <xsl:call-template name="gml:PolyhedralSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TriangulatedSurface">
         <xsl:call-template name="gml:TriangulatedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Tin">
         <xsl:call-template name="gml:Tin_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableSurface">
         <xsl:call-template name="gml:OrientableSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSolid">
         <xsl:call-template name="gml:AbstractSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Solid">
         <xsl:call-template name="gml:Solid_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:PointType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractGeometricPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:PointPropertyType_Template">
      <xsl:for-each select="./gml:Point">
         <xsl:call-template name="gml:Point_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:PointArrayPropertyType_Template">
      <xsl:for-each select="./gml:Point">
         <xsl:call-template name="gml:Point_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCurveType_Template">
      <xsl:call-template name="gml:AbstractGeometricPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CurvePropertyType_Template">
      <xsl:for-each select="./gml:AbstractCurve">
         <xsl:call-template name="gml:AbstractCurve_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineString">
         <xsl:call-template name="gml:LineString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Curve">
         <xsl:call-template name="gml:Curve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableCurve">
         <xsl:call-template name="gml:OrientableCurve_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CurveArrayPropertyType_Template">
      <xsl:for-each select="./gml:AbstractCurve">
         <xsl:call-template name="gml:AbstractCurve_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineString">
         <xsl:call-template name="gml:LineString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Curve">
         <xsl:call-template name="gml:Curve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableCurve">
         <xsl:call-template name="gml:OrientableCurve_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:LineStringType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCurveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractSurfaceType_Template">
      <xsl:call-template name="gml:AbstractGeometricPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:SurfacePropertyType_Template">
      <xsl:for-each select="./gml:AbstractSurface">
         <xsl:call-template name="gml:AbstractSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Polygon">
         <xsl:call-template name="gml:Polygon_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Surface">
         <xsl:call-template name="gml:Surface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolyhedralSurface">
         <xsl:call-template name="gml:PolyhedralSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TriangulatedSurface">
         <xsl:call-template name="gml:TriangulatedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Tin">
         <xsl:call-template name="gml:Tin_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableSurface">
         <xsl:call-template name="gml:OrientableSurface_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:SurfaceArrayPropertyType_Template">
      <xsl:for-each select="./gml:AbstractSurface">
         <xsl:call-template name="gml:AbstractSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Polygon">
         <xsl:call-template name="gml:Polygon_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Surface">
         <xsl:call-template name="gml:Surface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolyhedralSurface">
         <xsl:call-template name="gml:PolyhedralSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TriangulatedSurface">
         <xsl:call-template name="gml:TriangulatedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Tin">
         <xsl:call-template name="gml:Tin_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableSurface">
         <xsl:call-template name="gml:OrientableSurface_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:PolygonType_Template">
      <xsl:for-each select="./gml:exterior">
         <xsl:call-template name="gml:exterior_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:interior">
         <xsl:call-template name="gml:interior_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractRingType_Template"/>
   <xsl:template name="gml:AbstractRingPropertyType_Template">
      <xsl:for-each select="./gml:AbstractRing">
         <xsl:call-template name="gml:AbstractRing_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LinearRing">
         <xsl:call-template name="gml:LinearRing_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Ring">
         <xsl:call-template name="gml:Ring_Substitution"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:LinearRingType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractRingType_Template"/>
   </xsl:template>
   <xsl:template name="gml:LinearRingPropertyType_Template">
      <xsl:for-each select="./gml:LinearRing">
         <xsl:call-template name="gml:LinearRing_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:GeometricComplexType_Template">
      <xsl:for-each select="./gml:element">
         <xsl:call-template name="gml:element_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractGeometryType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeometricComplexPropertyType_Template">
      <xsl:for-each select="./gml:GeometricComplex">
         <xsl:call-template name="gml:GeometricComplex_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CompositeCurveType_Template">
      <xsl:for-each select="./gml:curveMember">
         <xsl:call-template name="gml:curveMember_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractCurveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CompositeSurfaceType_Template">
      <xsl:for-each select="./gml:surfaceMember">
         <xsl:call-template name="gml:surfaceMember_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CompositeSolidType_Template">
      <xsl:for-each select="./gml:solidMember">
         <xsl:call-template name="gml:solidMember_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractSolidType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CurveType_Template">
      <xsl:for-each select="./gml:segments">
         <xsl:call-template name="gml:segments_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCurveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:OrientableCurveType_Template">
      <xsl:for-each select="./gml:baseCurve">
         <xsl:call-template name="gml:baseCurve_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:orientation">
         <xsl:call-template name="gml:orientation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractCurveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCurveSegmentType_Template">
      <xsl:if test="@gml:numDerivativesAtStart">
         <xsl:call-template name="gml:numDerivativesAtStart_Property"/>
      </xsl:if>
      <xsl:if test="@gml:numDerivativesAtEnd">
         <xsl:call-template name="gml:numDerivativesAtEnd_Property"/>
      </xsl:if>
      <xsl:if test="@gml:numDerivativeInterior">
         <xsl:call-template name="gml:numDerivativeInterior_Property"/>
      </xsl:if>
   </xsl:template>
   <xsl:template name="gml:CurveSegmentArrayPropertyType_Template">
      <xsl:for-each select="./gml:AbstractCurveSegment">
         <xsl:call-template name="gml:AbstractCurveSegment_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineStringSegment">
         <xsl:call-template name="gml:LineStringSegment_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ArcString">
         <xsl:call-template name="gml:ArcString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Arc">
         <xsl:call-template name="gml:Arc_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Circle">
         <xsl:call-template name="gml:Circle_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ArcStringByBulge">
         <xsl:call-template name="gml:ArcStringByBulge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ArcByBulge">
         <xsl:call-template name="gml:ArcByBulge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ArcByCenterPoint">
         <xsl:call-template name="gml:ArcByCenterPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CircleByCenterPoint">
         <xsl:call-template name="gml:CircleByCenterPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CubicSpline">
         <xsl:call-template name="gml:CubicSpline_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:BSpline">
         <xsl:call-template name="gml:BSpline_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Bezier">
         <xsl:call-template name="gml:Bezier_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OffsetCurve">
         <xsl:call-template name="gml:OffsetCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Clothoid">
         <xsl:call-template name="gml:Clothoid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeodesicString">
         <xsl:call-template name="gml:GeodesicString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Geodesic">
         <xsl:call-template name="gml:Geodesic_Substitution"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:LineStringSegmentType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractCurveSegmentType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ArcStringType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:if test="@gml:numArc">
         <xsl:call-template name="gml:numArc_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractCurveSegmentType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ArcType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:numArc">
         <xsl:call-template name="gml:numArc_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:ArcStringType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CircleType_Template">
      <xsl:call-template name="gml:ArcType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ArcStringByBulgeType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:bulge">
         <xsl:call-template name="gml:bulge_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:normal">
         <xsl:call-template name="gml:normal_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:if test="@gml:numArc">
         <xsl:call-template name="gml:numArc_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractCurveSegmentType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ArcByBulgeType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:bulge">
         <xsl:call-template name="gml:bulge_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:normal">
         <xsl:call-template name="gml:normal_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:numArc">
         <xsl:call-template name="gml:numArc_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:ArcStringByBulgeType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ArcByCenterPointType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:radius">
         <xsl:call-template name="gml:radius_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:startAngle">
         <xsl:call-template name="gml:startAngle_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:endAngle">
         <xsl:call-template name="gml:endAngle_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:if test="@gml:numArc">
         <xsl:call-template name="gml:numArc_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractCurveSegmentType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CircleByCenterPointType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:radius">
         <xsl:call-template name="gml:radius_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:ArcByCenterPointType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CubicSplineType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:vectorAtStart">
         <xsl:call-template name="gml:vectorAtStart_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:vectorAtEnd">
         <xsl:call-template name="gml:vectorAtEnd_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:if test="@gml:degree">
         <xsl:call-template name="gml:degree_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractCurveSegmentType_Template"/>
   </xsl:template>
   <xsl:template name="gml:BSplineType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:degree">
         <xsl:call-template name="gml:degree_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:knot">
         <xsl:call-template name="gml:knot_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:if test="@gml:isPolynomial">
         <xsl:call-template name="gml:isPolynomial_Property"/>
      </xsl:if>
      <xsl:if test="@gml:knotType">
         <xsl:call-template name="gml:knotType_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractCurveSegmentType_Template"/>
   </xsl:template>
   <xsl:template name="gml:KnotType_Template">
      <xsl:for-each select="./gml:value">
         <xsl:call-template name="gml:value_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:multiplicity">
         <xsl:call-template name="gml:multiplicity_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:weight">
         <xsl:call-template name="gml:weight_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:KnotPropertyType_Template">
      <xsl:for-each select="./gml:Knot">
         <xsl:call-template name="gml:Knot_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:BezierType_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointRep">
         <xsl:call-template name="gml:pointRep_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:coordinates">
         <xsl:call-template name="gml:coordinates_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:degree">
         <xsl:call-template name="gml:degree_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:knot">
         <xsl:call-template name="gml:knot_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:if test="@gml:isPolynomial">
         <xsl:call-template name="gml:isPolynomial_Property"/>
      </xsl:if>
      <xsl:if test="@gml:knotType">
         <xsl:call-template name="gml:knotType_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:BSplineType_Template"/>
   </xsl:template>
   <xsl:template name="gml:OffsetCurveType_Template">
      <xsl:for-each select="./gml:offsetBase">
         <xsl:call-template name="gml:offsetBase_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:distance">
         <xsl:call-template name="gml:distance_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:refDirection">
         <xsl:call-template name="gml:refDirection_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractCurveSegmentType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AffinePlacementType_Template">
      <xsl:for-each select="./gml:location">
         <xsl:call-template name="gml:location_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:priorityLocation">
         <xsl:call-template name="gml:priorityLocation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:refDirection">
         <xsl:call-template name="gml:refDirection_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:inDimension">
         <xsl:call-template name="gml:inDimension_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:outDimension">
         <xsl:call-template name="gml:outDimension_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:ClothoidType_Template">
      <xsl:for-each select="./gml:refLocation">
         <xsl:call-template name="gml:refLocation_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:scaleFactor">
         <xsl:call-template name="gml:scaleFactor_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:startParameter">
         <xsl:call-template name="gml:startParameter_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:endParameter">
         <xsl:call-template name="gml:endParameter_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractCurveSegmentType_Template"/>
   </xsl:template>
   <xsl:template name="gml:refLocation_Template"/>
   <xsl:template name="gml:GeodesicStringType_Template">
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:geometricPositionGroup_Template"/>
      <xsl:call-template name="gml:AbstractCurveSegmentType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GeodesicType_Template">
      <xsl:call-template name="gml:GeodesicStringType_Template"/>
   </xsl:template>
   <xsl:template name="gml:SurfaceType_Template">
      <xsl:for-each select="./gml:patches">
         <xsl:call-template name="gml:patches_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:polygonPatches">
         <xsl:call-template name="gml:polygonPatches_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:trianglePatches">
         <xsl:call-template name="gml:trianglePatches_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="gml:OrientableSurfaceType_Template">
      <xsl:for-each select="./gml:baseSurface">
         <xsl:call-template name="gml:baseSurface_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:orientation">
         <xsl:call-template name="gml:orientation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractSurfacePatchType_Template"/>
   <xsl:template name="gml:SurfacePatchArrayPropertyType_Template">
      <xsl:for-each select="./gml:AbstractSurfacePatch">
         <xsl:call-template name="gml:AbstractSurfacePatch_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolygonPatch">
         <xsl:call-template name="gml:PolygonPatch_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Triangle">
         <xsl:call-template name="gml:Triangle_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Rectangle">
         <xsl:call-template name="gml:Rectangle_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractParametricCurveSurface">
         <xsl:call-template name="gml:AbstractParametricCurveSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGriddedSurface">
         <xsl:call-template name="gml:AbstractGriddedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Cone">
         <xsl:call-template name="gml:Cone_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Cylinder">
         <xsl:call-template name="gml:Cylinder_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Sphere">
         <xsl:call-template name="gml:Sphere_Substitution"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:PolygonPatchType_Template">
      <xsl:for-each select="./gml:exterior">
         <xsl:call-template name="gml:exterior_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:interior">
         <xsl:call-template name="gml:interior_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractSurfacePatchType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TriangleType_Template">
      <xsl:for-each select="./gml:exterior">
         <xsl:call-template name="gml:exterior_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractSurfacePatchType_Template"/>
   </xsl:template>
   <xsl:template name="gml:RectangleType_Template">
      <xsl:for-each select="./gml:exterior">
         <xsl:call-template name="gml:exterior_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:interpolation">
         <xsl:call-template name="gml:interpolation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractSurfacePatchType_Template"/>
   </xsl:template>
   <xsl:template name="gml:RingType_Template">
      <xsl:for-each select="./gml:curveMember">
         <xsl:call-template name="gml:curveMember_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractRingType_Template"/>
   </xsl:template>
   <xsl:template name="gml:RingPropertyType_Template">
      <xsl:for-each select="./gml:Ring">
         <xsl:call-template name="gml:Ring_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:rows_Template">
      <xsl:for-each select="./gml:Row">
         <xsl:call-template name="gml:Row_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:Row_Template"/>
   <xsl:template name="gml:AbstractParametricCurveSurfaceType_Template">
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractSurfacePatchType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGriddedSurfaceType_Template">
      <xsl:if test="@gml:rows">
         <xsl:call-template name="gml:rows_Property"/>
      </xsl:if>
      <xsl:if test="@gml:columns">
         <xsl:call-template name="gml:columns_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:PointGrid_Template"/>
      <xsl:call-template name="gml:AbstractParametricCurveSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ConeType_Template">
      <xsl:if test="@gml:horizontalCurveType">
         <xsl:call-template name="gml:horizontalCurveType_Property"/>
      </xsl:if>
      <xsl:if test="@gml:verticalCurveType">
         <xsl:call-template name="gml:verticalCurveType_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractGriddedSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CylinderType_Template">
      <xsl:if test="@gml:horizontalCurveType">
         <xsl:call-template name="gml:horizontalCurveType_Property"/>
      </xsl:if>
      <xsl:if test="@gml:verticalCurveType">
         <xsl:call-template name="gml:verticalCurveType_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractGriddedSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="gml:SphereType_Template">
      <xsl:if test="@gml:horizontalCurveType">
         <xsl:call-template name="gml:horizontalCurveType_Property"/>
      </xsl:if>
      <xsl:if test="@gml:verticalCurveType">
         <xsl:call-template name="gml:verticalCurveType_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractGriddedSurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TinType_Template">
      <xsl:for-each select="./gml:stopLines">
         <xsl:call-template name="gml:stopLines_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:breakLines">
         <xsl:call-template name="gml:breakLines_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:maxLength">
         <xsl:call-template name="gml:maxLength_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:controlPoint">
         <xsl:call-template name="gml:controlPoint_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:SurfaceType_Template"/>
   </xsl:template>
   <xsl:template name="gml:controlPoint_Template"/>
   <xsl:template name="gml:LineStringSegmentArrayPropertyType_Template">
      <xsl:for-each select="./gml:LineStringSegment">
         <xsl:call-template name="gml:LineStringSegment_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:AbstractSolidType_Template">
      <xsl:call-template name="gml:AbstractGeometricPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:SolidPropertyType_Template">
      <xsl:for-each select="./gml:AbstractSolid">
         <xsl:call-template name="gml:AbstractSolid_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Solid">
         <xsl:call-template name="gml:Solid_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:SolidArrayPropertyType_Template">
      <xsl:for-each select="./gml:AbstractSolid">
         <xsl:call-template name="gml:AbstractSolid_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Solid">
         <xsl:call-template name="gml:Solid_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:SolidType_Template">
      <xsl:for-each select="./gml:exterior">
         <xsl:call-template name="gml:exterior_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:interior">
         <xsl:call-template name="gml:interior_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractSolidType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ShellType_Template">
      <xsl:for-each select="./gml:surfaceMember">
         <xsl:call-template name="gml:surfaceMember_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:ShellPropertyType_Template">
      <xsl:for-each select="./gml:Shell">
         <xsl:call-template name="gml:Shell_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:AbstractGMLType_Template">
      <xsl:if test="@gml:id">
         <xsl:call-template name="gml:id_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:StandardObjectProperties_Template"/>
   </xsl:template>
   <xsl:template name="gml:AssociationRoleType_Template">
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:ReferenceType_Template">
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:InlinePropertyType_Template">
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractMemberType_Template">
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractMetadataPropertyType_Template">
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:GridType_Template">
      <xsl:for-each select="./gml:limits">
         <xsl:call-template name="gml:limits_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:axisLabels">
         <xsl:call-template name="gml:axisLabels_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:axisName">
         <xsl:call-template name="gml:axisName_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:dimension">
         <xsl:call-template name="gml:dimension_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractGeometryType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GridLimitsType_Template">
      <xsl:for-each select="./gml:GridEnvelope">
         <xsl:call-template name="gml:GridEnvelope_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:GridEnvelopeType_Template">
      <xsl:for-each select="./gml:low">
         <xsl:call-template name="gml:low_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:high">
         <xsl:call-template name="gml:high_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:RectifiedGridType_Template">
      <xsl:for-each select="./gml:origin">
         <xsl:call-template name="gml:origin_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:offsetVector">
         <xsl:call-template name="gml:offsetVector_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:GridType_Template"/>
   </xsl:template>
   <xsl:template name="gml:LengthType_Template">
      <xsl:call-template name="gml:MeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ScaleType_Template">
      <xsl:call-template name="gml:MeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeType_Template">
      <xsl:call-template name="gml:MeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:GridLengthType_Template">
      <xsl:call-template name="gml:MeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AreaType_Template">
      <xsl:call-template name="gml:MeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:VolumeType_Template">
      <xsl:call-template name="gml:MeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:SpeedType_Template">
      <xsl:call-template name="gml:MeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AngleType_Template">
      <xsl:call-template name="gml:MeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ObservationType_Template">
      <xsl:for-each select="./gml:validTime">
         <xsl:call-template name="gml:validTime_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:using">
         <xsl:call-template name="gml:using_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:target">
         <xsl:call-template name="gml:target_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:subject">
         <xsl:call-template name="gml:subject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:resultOf">
         <xsl:call-template name="gml:resultOf_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractFeatureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ProcedurePropertyType_Template">
      <xsl:for-each select="./gml:AbstractFeature">
         <xsl:call-template name="gml:AbstractFeature_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeature">
         <xsl:call-template name="core:AbstractFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractSurfaceData">
         <xsl:call-template name="app:AbstractSurfaceData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractTexture">
         <xsl:call-template name="app:AbstractTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:X3DMaterial">
         <xsl:call-template name="app:X3DMaterial_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeatureWithLifespan">
         <xsl:call-template name="core:AbstractFeatureWithLifespan_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractDynamizer">
         <xsl:call-template name="core:AbstractDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:CityModel">
         <xsl:call-template name="core:CityModel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPointCloud">
         <xsl:call-template name="core:AbstractPointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:PointCloud">
         <xsl:call-template name="pcl:PointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:Address">
         <xsl:call-template name="core:Address_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractTimeseries">
         <xsl:call-template name="dyn:AbstractTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractAtomicTimeseries">
         <xsl:call-template name="dyn:AbstractAtomicTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:CompositeTimeseries">
         <xsl:call-template name="dyn:CompositeTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCoverage">
         <xsl:call-template name="gml:AbstractCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractDiscreteCoverage">
         <xsl:call-template name="gml:AbstractDiscreteCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPointCoverage">
         <xsl:call-template name="gml:MultiPointCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurveCoverage">
         <xsl:call-template name="gml:MultiCurveCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurfaceCoverage">
         <xsl:call-template name="gml:MultiSurfaceCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolidCoverage">
         <xsl:call-template name="gml:MultiSolidCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GridCoverage">
         <xsl:call-template name="gml:GridCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGridCoverage">
         <xsl:call-template name="gml:RectifiedGridCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractContinuousCoverage">
         <xsl:call-template name="gml:AbstractContinuousCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractFeatureCollection">
         <xsl:call-template name="gml:AbstractFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:FeatureCollection">
         <xsl:call-template name="gml:FeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeature">
         <xsl:call-template name="gml:DynamicFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeatureCollection">
         <xsl:call-template name="gml:DynamicFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Observation">
         <xsl:call-template name="gml:Observation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectedObservation">
         <xsl:call-template name="gml:DirectedObservation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectedObservationAtDistance">
         <xsl:call-template name="gml:DirectedObservationAtDistance_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TargetPropertyType_Template">
      <xsl:for-each select="./gml:AbstractFeature">
         <xsl:call-template name="gml:AbstractFeature_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeature">
         <xsl:call-template name="core:AbstractFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractSurfaceData">
         <xsl:call-template name="app:AbstractSurfaceData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractTexture">
         <xsl:call-template name="app:AbstractTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:X3DMaterial">
         <xsl:call-template name="app:X3DMaterial_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeatureWithLifespan">
         <xsl:call-template name="core:AbstractFeatureWithLifespan_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractDynamizer">
         <xsl:call-template name="core:AbstractDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:CityModel">
         <xsl:call-template name="core:CityModel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPointCloud">
         <xsl:call-template name="core:AbstractPointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:PointCloud">
         <xsl:call-template name="pcl:PointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:Address">
         <xsl:call-template name="core:Address_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractTimeseries">
         <xsl:call-template name="dyn:AbstractTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractAtomicTimeseries">
         <xsl:call-template name="dyn:AbstractAtomicTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:CompositeTimeseries">
         <xsl:call-template name="dyn:CompositeTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCoverage">
         <xsl:call-template name="gml:AbstractCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractDiscreteCoverage">
         <xsl:call-template name="gml:AbstractDiscreteCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPointCoverage">
         <xsl:call-template name="gml:MultiPointCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurveCoverage">
         <xsl:call-template name="gml:MultiCurveCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurfaceCoverage">
         <xsl:call-template name="gml:MultiSurfaceCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolidCoverage">
         <xsl:call-template name="gml:MultiSolidCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GridCoverage">
         <xsl:call-template name="gml:GridCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGridCoverage">
         <xsl:call-template name="gml:RectifiedGridCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractContinuousCoverage">
         <xsl:call-template name="gml:AbstractContinuousCoverage_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractFeatureCollection">
         <xsl:call-template name="gml:AbstractFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:FeatureCollection">
         <xsl:call-template name="gml:FeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeature">
         <xsl:call-template name="gml:DynamicFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DynamicFeatureCollection">
         <xsl:call-template name="gml:DynamicFeatureCollection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Observation">
         <xsl:call-template name="gml:Observation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectedObservation">
         <xsl:call-template name="gml:DirectedObservation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DirectedObservationAtDistance">
         <xsl:call-template name="gml:DirectedObservationAtDistance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometry">
         <xsl:call-template name="gml:AbstractGeometry_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricAggregate">
         <xsl:call-template name="gml:AbstractGeometricAggregate_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiGeometry">
         <xsl:call-template name="gml:MultiGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPoint">
         <xsl:call-template name="gml:MultiPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurve">
         <xsl:call-template name="gml:MultiCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurface">
         <xsl:call-template name="gml:MultiSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolid">
         <xsl:call-template name="gml:MultiSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricPrimitive">
         <xsl:call-template name="gml:AbstractGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Point">
         <xsl:call-template name="gml:Point_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCurve">
         <xsl:call-template name="gml:AbstractCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineString">
         <xsl:call-template name="gml:LineString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Curve">
         <xsl:call-template name="gml:Curve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableCurve">
         <xsl:call-template name="gml:OrientableCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSurface">
         <xsl:call-template name="gml:AbstractSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Polygon">
         <xsl:call-template name="gml:Polygon_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Surface">
         <xsl:call-template name="gml:Surface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolyhedralSurface">
         <xsl:call-template name="gml:PolyhedralSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TriangulatedSurface">
         <xsl:call-template name="gml:TriangulatedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Tin">
         <xsl:call-template name="gml:Tin_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableSurface">
         <xsl:call-template name="gml:OrientableSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSolid">
         <xsl:call-template name="gml:AbstractSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Solid">
         <xsl:call-template name="gml:Solid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeometricComplex">
         <xsl:call-template name="gml:GeometricComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractImplicitGeometry">
         <xsl:call-template name="gml:AbstractImplicitGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Grid">
         <xsl:call-template name="gml:Grid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGrid">
         <xsl:call-template name="gml:RectifiedGrid_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:ResultType_Template">
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:DirectedObservationType_Template">
      <xsl:for-each select="./gml:direction">
         <xsl:call-template name="gml:direction_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:ObservationType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DirectedObservationAtDistanceType_Template">
      <xsl:for-each select="./gml:distance">
         <xsl:call-template name="gml:distance_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:DirectedObservationType_Template"/>
   </xsl:template>
   <xsl:template name="gml:IdentifiedObjectType_Template">
      <xsl:call-template name="gml:DefinitionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCRSType_Template">
      <xsl:for-each select="./gml:domainOfValidity">
         <xsl:call-template name="gml:domainOfValidity_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:scope">
         <xsl:call-template name="gml:scope_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:IdentifiedObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:domainOfValidity_Template">
      <xsl:for-each select="./gmd:EX_Extent">
         <xsl:call-template name="gmd:EX_Extent_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CRSPropertyType_Template">
      <xsl:for-each select="./gml:AbstractCRS">
         <xsl:call-template name="gml:AbstractCRS_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSingleCRS">
         <xsl:call-template name="gml:AbstractSingleCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeneralDerivedCRS">
         <xsl:call-template name="gml:AbstractGeneralDerivedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ProjectedCRS">
         <xsl:call-template name="gml:ProjectedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:DerivedCRS">
         <xsl:call-template name="gml:DerivedCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeodeticCRS">
         <xsl:call-template name="gml:GeodeticCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:VerticalCRS">
         <xsl:call-template name="gml:VerticalCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:EngineeringCRS">
         <xsl:call-template name="gml:EngineeringCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ImageCRS">
         <xsl:call-template name="gml:ImageCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TemporalCRS">
         <xsl:call-template name="gml:TemporalCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeographicCRS">
         <xsl:call-template name="gml:GeographicCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeocentricCRS">
         <xsl:call-template name="gml:GeocentricCRS_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompoundCRS">
         <xsl:call-template name="gml:CompoundCRS_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeObjectType_Template">
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTimePrimitiveType_Template">
      <xsl:for-each select="./gml:relatedTime">
         <xsl:call-template name="gml:relatedTime_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractTimeObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimePrimitivePropertyType_Template">
      <xsl:for-each select="./gml:AbstractTimePrimitive">
         <xsl:call-template name="gml:AbstractTimePrimitive_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeGeometricPrimitive">
         <xsl:call-template name="gml:AbstractTimeGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeInstant">
         <xsl:call-template name="gml:TimeInstant_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimePeriod">
         <xsl:call-template name="gml:TimePeriod_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeTopologyPrimitive">
         <xsl:call-template name="gml:AbstractTimeTopologyPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeNode">
         <xsl:call-template name="gml:TimeNode_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeEdge">
         <xsl:call-template name="gml:TimeEdge_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:RelatedTimeType_Template">
      <xsl:if test="@gml:relativePosition">
         <xsl:call-template name="gml:relativePosition_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:TimePrimitivePropertyType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeComplexType_Template">
      <xsl:call-template name="gml:AbstractTimeObjectType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeGeometricPrimitiveType_Template">
      <xsl:if test="@gml:frame">
         <xsl:call-template name="gml:frame_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AbstractTimePrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeInstantType_Template">
      <xsl:for-each select="./gml:timePosition">
         <xsl:call-template name="gml:timePosition_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractTimeGeometricPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeInstantPropertyType_Template">
      <xsl:for-each select="./gml:TimeInstant">
         <xsl:call-template name="gml:TimeInstant_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimePeriodType_Template">
      <xsl:for-each select="./gml:beginPosition">
         <xsl:call-template name="gml:beginPosition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:begin">
         <xsl:call-template name="gml:begin_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:endPosition">
         <xsl:call-template name="gml:endPosition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:end">
         <xsl:call-template name="gml:end_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:timeLength_Template"/>
      <xsl:call-template name="gml:AbstractTimeGeometricPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimePeriodPropertyType_Template">
      <xsl:for-each select="./gml:TimePeriod">
         <xsl:call-template name="gml:TimePeriod_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimePositionType_Template">
      <xsl:if test="@gml:frame">
         <xsl:call-template name="gml:frame_Property"/>
      </xsl:if>
      <xsl:if test="@gml:calendarEraName">
         <xsl:call-template name="gml:calendarEraName_Property"/>
      </xsl:if>
      <xsl:if test="@gml:indeterminatePosition">
         <xsl:call-template name="gml:indeterminatePosition_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:TimePositionUnion_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeIntervalLengthType_Template">
      <xsl:if test="@gml:unit">
         <xsl:call-template name="gml:unit_Property"/>
      </xsl:if>
      <xsl:if test="@gml:radix">
         <xsl:call-template name="gml:radix_Property"/>
      </xsl:if>
      <xsl:if test="@gml:factor">
         <xsl:call-template name="gml:factor_Property"/>
      </xsl:if>
      <xs:hasdecimal>
         <xsl:value-of select="text()"/>
      </xs:hasdecimal>
   </xsl:template>
   <xsl:template name="gml:TimeReferenceSystemType_Template">
      <xsl:for-each select="./gml:domainOfValidity">
         <xsl:call-template name="gml:domainOfValidity_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:DefinitionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeCoordinateSystemType_Template">
      <xsl:for-each select="./gml:originPosition">
         <xsl:call-template name="gml:originPosition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:origin">
         <xsl:call-template name="gml:origin_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:interval">
         <xsl:call-template name="gml:interval_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:TimeReferenceSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeCalendarType_Template">
      <xsl:for-each select="./gml:referenceFrame">
         <xsl:call-template name="gml:referenceFrame_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:TimeReferenceSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeCalendarEraType_Template">
      <xsl:for-each select="./gml:referenceEvent">
         <xsl:call-template name="gml:referenceEvent_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:referenceDate">
         <xsl:call-template name="gml:referenceDate_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:julianReference">
         <xsl:call-template name="gml:julianReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:epochOfUse">
         <xsl:call-template name="gml:epochOfUse_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:DefinitionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeCalendarPropertyType_Template">
      <xsl:for-each select="./gml:TimeCalendar">
         <xsl:call-template name="gml:TimeCalendar_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeCalendarEraPropertyType_Template">
      <xsl:for-each select="./gml:TimeCalendarEra">
         <xsl:call-template name="gml:TimeCalendarEra_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeClockType_Template">
      <xsl:for-each select="./gml:referenceEvent">
         <xsl:call-template name="gml:referenceEvent_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:referenceTime">
         <xsl:call-template name="gml:referenceTime_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:utcReference">
         <xsl:call-template name="gml:utcReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:dateBasis">
         <xsl:call-template name="gml:dateBasis_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:TimeReferenceSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeClockPropertyType_Template">
      <xsl:for-each select="./gml:TimeClock">
         <xsl:call-template name="gml:TimeClock_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeOrdinalReferenceSystemType_Template">
      <xsl:for-each select="./gml:component">
         <xsl:call-template name="gml:component_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:TimeReferenceSystemType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeOrdinalEraType_Template">
      <xsl:for-each select="./gml:relatedTime">
         <xsl:call-template name="gml:relatedTime_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:start">
         <xsl:call-template name="gml:start_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:end">
         <xsl:call-template name="gml:end_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:extent">
         <xsl:call-template name="gml:extent_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:member">
         <xsl:call-template name="gml:member_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:group">
         <xsl:call-template name="gml:group_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:valuesOfGroup">
         <xsl:call-template name="gml:valuesOfGroup_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:DefinitionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeOrdinalEraPropertyType_Template">
      <xsl:for-each select="./gml:TimeOrdinalEra">
         <xsl:call-template name="gml:TimeOrdinalEra_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeTopologyPrimitiveType_Template">
      <xsl:for-each select="./gml:complex">
         <xsl:call-template name="gml:complex_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractTimePrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeTopologyPrimitivePropertyType_Template">
      <xsl:for-each select="./gml:AbstractTimeTopologyPrimitive">
         <xsl:call-template name="gml:AbstractTimeTopologyPrimitive_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeNode">
         <xsl:call-template name="gml:TimeNode_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeEdge">
         <xsl:call-template name="gml:TimeEdge_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeTopologyComplexType_Template">
      <xsl:for-each select="./gml:primitive">
         <xsl:call-template name="gml:primitive_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractTimeComplexType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeTopologyComplexPropertyType_Template">
      <xsl:for-each select="./gml:TimeTopologyComplex">
         <xsl:call-template name="gml:TimeTopologyComplex_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeNodeType_Template">
      <xsl:for-each select="./gml:previousEdge">
         <xsl:call-template name="gml:previousEdge_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:nextEdge">
         <xsl:call-template name="gml:nextEdge_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:position">
         <xsl:call-template name="gml:position_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractTimeTopologyPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeNodePropertyType_Template">
      <xsl:for-each select="./gml:TimeNode">
         <xsl:call-template name="gml:TimeNode_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeEdgeType_Template">
      <xsl:for-each select="./gml:start">
         <xsl:call-template name="gml:start_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:end">
         <xsl:call-template name="gml:end_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:extent">
         <xsl:call-template name="gml:extent_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractTimeTopologyPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TimeEdgePropertyType_Template">
      <xsl:for-each select="./gml:TimeEdge">
         <xsl:call-template name="gml:TimeEdge_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTopologyType_Template">
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTopoPrimitiveType_Template">
      <xsl:call-template name="gml:AbstractTopologyType_Template"/>
   </xsl:template>
   <xsl:template name="gml:NodeOrEdgePropertyType_Template">
      <xsl:for-each select="./gml:Node">
         <xsl:call-template name="gml:Node_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Edge">
         <xsl:call-template name="gml:Edge_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:NodePropertyType_Template">
      <xsl:for-each select="./gml:Node">
         <xsl:call-template name="gml:Node_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:FaceOrTopoSolidPropertyType_Template">
      <xsl:for-each select="./gml:Face">
         <xsl:call-template name="gml:Face_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TopoSolid">
         <xsl:call-template name="gml:TopoSolid_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoSolidPropertyType_Template">
      <xsl:for-each select="./gml:TopoSolid">
         <xsl:call-template name="gml:TopoSolid_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:NodeType_Template">
      <xsl:for-each select="./gml:container">
         <xsl:call-template name="gml:container_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:directedEdge">
         <xsl:call-template name="gml:directedEdge_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractTopoPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DirectedNodePropertyType_Template">
      <xsl:for-each select="./gml:Node">
         <xsl:call-template name="gml:Node_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:orientation">
         <xsl:call-template name="gml:orientation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:EdgeType_Template">
      <xsl:for-each select="./gml:container">
         <xsl:call-template name="gml:container_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:directedNode">
         <xsl:call-template name="gml:directedNode_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:directedFace">
         <xsl:call-template name="gml:directedFace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:curveProperty">
         <xsl:call-template name="gml:curveProperty_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractTopoPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DirectedEdgePropertyType_Template">
      <xsl:for-each select="./gml:Edge">
         <xsl:call-template name="gml:Edge_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:orientation">
         <xsl:call-template name="gml:orientation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:FaceType_Template">
      <xsl:for-each select="./gml:isolated">
         <xsl:call-template name="gml:isolated_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:directedEdge">
         <xsl:call-template name="gml:directedEdge_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:directedTopoSolid">
         <xsl:call-template name="gml:directedTopoSolid_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:surfaceProperty">
         <xsl:call-template name="gml:surfaceProperty_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:universal">
         <xsl:call-template name="gml:universal_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractTopoPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DirectedFacePropertyType_Template">
      <xsl:for-each select="./gml:Face">
         <xsl:call-template name="gml:Face_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:orientation">
         <xsl:call-template name="gml:orientation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoSolidType_Template">
      <xsl:for-each select="./gml:isolated">
         <xsl:call-template name="gml:isolated_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:directedFace">
         <xsl:call-template name="gml:directedFace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:solidProperty">
         <xsl:call-template name="gml:solidProperty_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:universal">
         <xsl:call-template name="gml:universal_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractTopoPrimitiveType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DirectedTopoSolidPropertyType_Template">
      <xsl:for-each select="./gml:TopoSolid">
         <xsl:call-template name="gml:TopoSolid_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:orientation">
         <xsl:call-template name="gml:orientation_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoPointType_Template">
      <xsl:for-each select="./gml:directedNode">
         <xsl:call-template name="gml:directedNode_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AbstractTopologyType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoPointPropertyType_Template">
      <xsl:for-each select="./gml:TopoPoint">
         <xsl:call-template name="gml:TopoPoint_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoCurveType_Template">
      <xsl:for-each select="./gml:directedEdge">
         <xsl:call-template name="gml:directedEdge_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractTopologyType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoCurvePropertyType_Template">
      <xsl:for-each select="./gml:TopoCurve">
         <xsl:call-template name="gml:TopoCurve_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoSurfaceType_Template">
      <xsl:for-each select="./gml:directedFace">
         <xsl:call-template name="gml:directedFace_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractTopologyType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoSurfacePropertyType_Template">
      <xsl:for-each select="./gml:TopoSurface">
         <xsl:call-template name="gml:TopoSurface_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoVolumeType_Template">
      <xsl:for-each select="./gml:directedTopoSolid">
         <xsl:call-template name="gml:directedTopoSolid_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractTopologyType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoVolumePropertyType_Template">
      <xsl:for-each select="./gml:TopoVolume">
         <xsl:call-template name="gml:TopoVolume_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoComplexType_Template">
      <xsl:for-each select="./gml:maximalComplex">
         <xsl:call-template name="gml:maximalComplex_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:superComplex">
         <xsl:call-template name="gml:superComplex_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:subComplex">
         <xsl:call-template name="gml:subComplex_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:topoPrimitiveMember">
         <xsl:call-template name="gml:topoPrimitiveMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:topoPrimitiveMembers">
         <xsl:call-template name="gml:topoPrimitiveMembers_Property"/>
      </xsl:for-each>
      <xsl:if test="@gml:isMaximal">
         <xsl:call-template name="gml:isMaximal_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractTopologyType_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoPrimitiveMemberType_Template">
      <xsl:for-each select="./gml:AbstractTopoPrimitive">
         <xsl:call-template name="gml:AbstractTopoPrimitive_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Node">
         <xsl:call-template name="gml:Node_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Edge">
         <xsl:call-template name="gml:Edge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Face">
         <xsl:call-template name="gml:Face_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TopoSolid">
         <xsl:call-template name="gml:TopoSolid_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoPrimitiveArrayAssociationType_Template">
      <xsl:for-each select="./gml:AbstractTopoPrimitive">
         <xsl:call-template name="gml:AbstractTopoPrimitive_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Node">
         <xsl:call-template name="gml:Node_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Edge">
         <xsl:call-template name="gml:Edge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Face">
         <xsl:call-template name="gml:Face_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TopoSolid">
         <xsl:call-template name="gml:TopoSolid_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:TopoComplexPropertyType_Template">
      <xsl:for-each select="./gml:TopoComplex">
         <xsl:call-template name="gml:TopoComplex_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:UnitOfMeasureType_Template">
      <xsl:if test="@gml:uom">
         <xsl:call-template name="gml:uom_Property"/>
      </xsl:if>
   </xsl:template>
   <xsl:template name="gml:UnitDefinitionType_Template">
      <xsl:for-each select="./gml:quantityType">
         <xsl:call-template name="gml:quantityType_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:quantityTypeReference">
         <xsl:call-template name="gml:quantityTypeReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:catalogSymbol">
         <xsl:call-template name="gml:catalogSymbol_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:DefinitionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:BaseUnitType_Template">
      <xsl:for-each select="./gml:unitsSystem">
         <xsl:call-template name="gml:unitsSystem_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:UnitDefinitionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DerivedUnitType_Template">
      <xsl:for-each select="./gml:derivationUnitTerm">
         <xsl:call-template name="gml:derivationUnitTerm_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:UnitDefinitionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:DerivationUnitTermType_Template">
      <xsl:if test="@gml:exponent">
         <xsl:call-template name="gml:exponent_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:UnitOfMeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ConventionalUnitType_Template">
      <xsl:for-each select="./gml:conversionToPreferredUnit">
         <xsl:call-template name="gml:conversionToPreferredUnit_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:roughConversionToPreferredUnit">
         <xsl:call-template name="gml:roughConversionToPreferredUnit_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:derivationUnitTerm">
         <xsl:call-template name="gml:derivationUnitTerm_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:UnitDefinitionType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ConversionToPreferredUnitType_Template">
      <xsl:for-each select="./gml:factor">
         <xsl:call-template name="gml:factor_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:formula">
         <xsl:call-template name="gml:formula_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:methodFormula">
         <xsl:call-template name="gml:methodFormula_Substitution"/>
      </xsl:for-each>
      <xsl:call-template name="gml:UnitOfMeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:FormulaType_Template">
      <xsl:for-each select="./gml:a">
         <xsl:call-template name="gml:a_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:b">
         <xsl:call-template name="gml:b_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:c">
         <xsl:call-template name="gml:c_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:d">
         <xsl:call-template name="gml:d_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:Boolean_Template">
      <xsl:if test="@gml:nilReason">
         <xsl:call-template name="gml:nilReason_Property"/>
      </xsl:if>
      <xs:hasboolean>
         <xsl:value-of select="text()"/>
      </xs:hasboolean>
   </xsl:template>
   <xsl:template name="gml:Category_Template">
      <xsl:if test="@gml:nilReason">
         <xsl:call-template name="gml:nilReason_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:CodeType_Template"/>
   </xsl:template>
   <xsl:template name="gml:Count_Template">
      <xsl:if test="@gml:nilReason">
         <xsl:call-template name="gml:nilReason_Property"/>
      </xsl:if>
      <xs:hasinteger>
         <xsl:value-of select="text()"/>
      </xs:hasinteger>
   </xsl:template>
   <xsl:template name="gml:Quantity_Template">
      <xsl:if test="@gml:nilReason">
         <xsl:call-template name="gml:nilReason_Property"/>
      </xsl:if>
      <xsl:call-template name="gml:MeasureType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ValuePropertyType_Template">
      <xsl:call-template name="gml:Value_Template"/>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:ValueArrayPropertyType_Template">
      <xsl:call-template name="gml:Value_Template"/>
      <xsl:call-template name="gml:OwnershipAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CompositeValueType_Template">
      <xsl:for-each select="./gml:valueComponent">
         <xsl:call-template name="gml:valueComponent_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:valueComponents">
         <xsl:call-template name="gml:valueComponents_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AggregationAttributeGroup_Template"/>
      <xsl:call-template name="gml:AbstractGMLType_Template"/>
   </xsl:template>
   <xsl:template name="gml:ValueArrayType_Template">
      <xsl:call-template name="gml:referenceSystem_Template"/>
      <xsl:call-template name="gml:CompositeValueType_Template"/>
   </xsl:template>
   <xsl:template name="gml:CategoryExtentType_Template">
      <xsl:call-template name="gml:CodeOrNilReasonListType_Template"/>
   </xsl:template>
   <xsl:template name="gml:QuantityExtentType_Template">
      <xsl:call-template name="gml:MeasureOrNilReasonListType_Template"/>
   </xsl:template>
   <xsl:template name="gml:BooleanPropertyType_Template">
      <xsl:for-each select="./gml:Boolean">
         <xsl:call-template name="gml:Boolean_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CategoryPropertyType_Template">
      <xsl:for-each select="./gml:Category">
         <xsl:call-template name="gml:Category_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:QuantityPropertyType_Template">
      <xsl:for-each select="./gml:Quantity">
         <xsl:call-template name="gml:Quantity_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:CountPropertyType_Template">
      <xsl:for-each select="./gml:Count">
         <xsl:call-template name="gml:Count_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:AssociationAttributeGroup_Template"/>
   </xsl:template>
   <xsl:template name="app:ColorType_Template">
      <xsl:call-template name="core:DoubleBetween0and1ListType_Template"/>
   </xsl:template>
   <xsl:template name="app:ColorPlusOpacityType_Template">
      <xsl:call-template name="core:DoubleBetween0and1ListType_Template"/>
   </xsl:template>
   <xsl:template name="app:TextureTypeType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="app:WrapModeType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="core:DoubleBetween0and1Type_Template">
      <xs:hasdouble>
         <xsl:value-of select="text()"/>
      </xs:hasdouble>
   </xsl:template>
   <xsl:template name="core:DoubleBetween0and1ListType_Template">
      <core:hasDoubleBetween0and1ListType>
         <xsl:value-of select="text()"/>
      </core:hasDoubleBetween0and1ListType>
   </xsl:template>
   <xsl:template name="core:IntegerBetween0and3Type_Template">
      <xs:hasinteger>
         <xsl:value-of select="text()"/>
      </xs:hasinteger>
   </xsl:template>
   <xsl:template name="core:RelativeToTerrainType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="core:RelativeToWaterType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="core:SpaceTypeType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="core:TransformationMatrix2x2Type_Template">
      <xsl:call-template name="gml:doubleList_Template"/>
   </xsl:template>
   <xsl:template name="core:TransformationMatrix3x4Type_Template">
      <xsl:call-template name="gml:doubleList_Template"/>
   </xsl:template>
   <xsl:template name="core:TransformationMatrix4x4Type_Template">
      <xsl:call-template name="gml:doubleList_Template"/>
   </xsl:template>
   <xsl:template name="con:ConditionOfConstructionValueType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="con:HeightStatusValueType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="con:RelationToConstructionType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="dyn:TimeseriesTypeValueType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="tran:GranularityValueType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="tran:TrafficDirectionValueType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="vers:TransactionTypeValueType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="vers:TransitionTypeValueType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:NilReasonType_Template"/>
   <xsl:template name="gml:NilReasonEnumeration_Template"/>
   <xsl:template name="_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:SignType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:booleanOrNilReason_Template"/>
   <xsl:template name="gml:doubleOrNilReason_Template"/>
   <xsl:template name="gml:integerOrNilReason_Template"/>
   <xsl:template name="gml:NameOrNilReason_Template"/>
   <xsl:template name="gml:stringOrNilReason_Template"/>
   <xsl:template name="gml:UomIdentifier_Template"/>
   <xsl:template name="gml:UomSymbol_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:UomURI_Template">
      <xs:hasanyURI>
         <xsl:value-of select="text()"/>
      </xs:hasanyURI>
   </xsl:template>
   <xsl:template name="gml:booleanList_Template">
      <gml:hasbooleanList>
         <xsl:value-of select="text()"/>
      </gml:hasbooleanList>
   </xsl:template>
   <xsl:template name="gml:doubleList_Template">
      <gml:hasdoubleList>
         <xsl:value-of select="text()"/>
      </gml:hasdoubleList>
   </xsl:template>
   <xsl:template name="gml:integerList_Template">
      <gml:hasintegerList>
         <xsl:value-of select="text()"/>
      </gml:hasintegerList>
   </xsl:template>
   <xsl:template name="gml:NameList_Template">
      <gml:hasNameList>
         <xsl:value-of select="text()"/>
      </gml:hasNameList>
   </xsl:template>
   <xsl:template name="gml:NCNameList_Template">
      <gml:hasNCNameList>
         <xsl:value-of select="text()"/>
      </gml:hasNCNameList>
   </xsl:template>
   <xsl:template name="gml:QNameList_Template">
      <gml:hasQNameList>
         <xsl:value-of select="text()"/>
      </gml:hasQNameList>
   </xsl:template>
   <xsl:template name="gml:booleanOrNilReasonList_Template">
      <gml:hasbooleanOrNilReasonList>
         <xsl:value-of select="text()"/>
      </gml:hasbooleanOrNilReasonList>
   </xsl:template>
   <xsl:template name="gml:NameOrNilReasonList_Template">
      <gml:hasNameOrNilReasonList>
         <xsl:value-of select="text()"/>
      </gml:hasNameOrNilReasonList>
   </xsl:template>
   <xsl:template name="gml:doubleOrNilReasonList_Template">
      <gml:hasdoubleOrNilReasonList>
         <xsl:value-of select="text()"/>
      </gml:hasdoubleOrNilReasonList>
   </xsl:template>
   <xsl:template name="gml:integerOrNilReasonList_Template">
      <gml:hasintegerOrNilReasonList>
         <xsl:value-of select="text()"/>
      </gml:hasintegerOrNilReasonList>
   </xsl:template>
   <xsl:template name="gml:SequenceRuleEnumeration_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:AxisDirectionList_Template">
      <gml:hasAxisDirectionList>
         <xsl:value-of select="text()"/>
      </gml:hasAxisDirectionList>
   </xsl:template>
   <xsl:template name="gml:AxisDirection_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:QueryGrammarEnumeration_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:SymbolTypeEnumeration_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:GraphTypeType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:DrawingTypeType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:LineTypeType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:AesheticCriteriaType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:SuccessionType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:direction_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:DegreeValueType_Template">
      <xs:hasnonNegativeInteger>
         <xsl:value-of select="text()"/>
      </xs:hasnonNegativeInteger>
   </xsl:template>
   <xsl:template name="gml:DecimalMinutesType_Template">
      <xs:hasdecimal>
         <xsl:value-of select="text()"/>
      </xs:hasdecimal>
   </xsl:template>
   <xsl:template name="gml:ArcMinutesType_Template">
      <xs:hasnonNegativeInteger>
         <xsl:value-of select="text()"/>
      </xs:hasnonNegativeInteger>
   </xsl:template>
   <xsl:template name="gml:ArcSecondsType_Template">
      <xs:hasdecimal>
         <xsl:value-of select="text()"/>
      </xs:hasdecimal>
   </xsl:template>
   <xsl:template name="gml:IncrementOrder_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:CompassPointEnumeration_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:CurveInterpolationType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:KnotTypesType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:SurfaceInterpolationType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:AggregationType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:relativePosition_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:TimeIndeterminateValueType_Template">
      <xs:hasstring>
         <xsl:value-of select="text()"/>
      </xs:hasstring>
   </xsl:template>
   <xsl:template name="gml:TimePositionUnion_Template"/>
   <xsl:template name="gml:CalDate_Template"/>
   <xsl:template name="gml:TimeUnitType_Template"/>
   <xsl:template name="gml:CountExtentType_Template">
      <xsl:call-template name="gml:integerOrNilReasonList_Template"/>
   </xsl:template>
   <xsl:template match="//app:ADEOfAbstractSurfaceData">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:ADEOfAbstractSurfaceData"/>
         <xsl:call-template name="app:ADEOfAbstractSurfaceDataType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:ADEOfAbstractSurfaceData_Substitution">
      <app:ADEOfAbstractSurfaceData xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:ADEOfAbstractTexture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:ADEOfAbstractTexture"/>
         <xsl:call-template name="app:ADEOfAbstractTextureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:ADEOfAbstractTexture_Substitution">
      <app:ADEOfAbstractTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:ADEOfAppearance">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:ADEOfAppearance"/>
         <xsl:call-template name="app:ADEOfAppearanceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:ADEOfAppearance_Substitution">
      <app:ADEOfAppearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:ADEOfGeoreferencedTexture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:ADEOfGeoreferencedTexture"/>
         <xsl:call-template name="app:ADEOfGeoreferencedTextureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:ADEOfGeoreferencedTexture_Substitution">
      <app:ADEOfGeoreferencedTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:ADEOfParameterizedTexture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:ADEOfParameterizedTexture"/>
         <xsl:call-template name="app:ADEOfParameterizedTextureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:ADEOfParameterizedTexture_Substitution">
      <app:ADEOfParameterizedTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:ADEOfX3DMaterial">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:ADEOfX3DMaterial"/>
         <xsl:call-template name="app:ADEOfX3DMaterialType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:ADEOfX3DMaterial_Substitution">
      <app:ADEOfX3DMaterial xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:AbstractSurfaceData">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:AbstractSurfaceData"/>
         <xsl:call-template name="app:AbstractSurfaceDataType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:AbstractSurfaceData_Substitution">
      <app:AbstractSurfaceData xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:AbstractTexture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:AbstractTexture"/>
         <xsl:call-template name="app:AbstractTextureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:AbstractTexture_Substitution">
      <app:AbstractTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:AbstractTextureParameterization">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:AbstractTextureParameterization"/>
         <xsl:call-template name="app:AbstractTextureParameterizationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:AbstractTextureParameterization_Substitution">
      <app:AbstractTextureParameterization xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:Appearance">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:Appearance"/>
         <xsl:call-template name="app:AppearanceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:Appearance_Substitution">
      <app:Appearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:GeoreferencedTexture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:GeoreferencedTexture"/>
         <xsl:call-template name="app:GeoreferencedTextureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:GeoreferencedTexture_Substitution">
      <app:GeoreferencedTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:ParameterizedTexture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:ParameterizedTexture"/>
         <xsl:call-template name="app:ParameterizedTextureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:ParameterizedTexture_Substitution">
      <app:ParameterizedTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:TexCoordGen">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:TexCoordGen"/>
         <xsl:call-template name="app:TexCoordGenType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:TexCoordGen_Substitution">
      <app:TexCoordGen xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:TexCoordList">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:TexCoordList"/>
         <xsl:call-template name="app:TexCoordListType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:TexCoordList_Substitution">
      <app:TexCoordList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:TextureAssociation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:TextureAssociation"/>
         <xsl:call-template name="app:TextureAssociationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:TextureAssociation_Substitution">
      <app:TextureAssociation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:X3DMaterial">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="app:X3DMaterial"/>
         <xsl:call-template name="app:X3DMaterialType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:X3DMaterial_Substitution">
      <app:X3DMaterial xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:ADEOfAbstractBridge">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:ADEOfAbstractBridge"/>
         <xsl:call-template name="brid:ADEOfAbstractBridgeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:ADEOfAbstractBridge_Substitution">
      <brid:ADEOfAbstractBridge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:ADEOfBridge">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:ADEOfBridge"/>
         <xsl:call-template name="brid:ADEOfBridgeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridge_Substitution">
      <brid:ADEOfBridge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:ADEOfBridgeConstructiveElement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:ADEOfBridgeConstructiveElement"/>
         <xsl:call-template name="brid:ADEOfBridgeConstructiveElementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeConstructiveElement_Substitution">
      <brid:ADEOfBridgeConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:ADEOfBridgeFurniture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:ADEOfBridgeFurniture"/>
         <xsl:call-template name="brid:ADEOfBridgeFurnitureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeFurniture_Substitution">
      <brid:ADEOfBridgeFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:ADEOfBridgeInstallation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:ADEOfBridgeInstallation"/>
         <xsl:call-template name="brid:ADEOfBridgeInstallationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeInstallation_Substitution">
      <brid:ADEOfBridgeInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:ADEOfBridgePart">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:ADEOfBridgePart"/>
         <xsl:call-template name="brid:ADEOfBridgePartType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgePart_Substitution">
      <brid:ADEOfBridgePart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:ADEOfBridgeRoom">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:ADEOfBridgeRoom"/>
         <xsl:call-template name="brid:ADEOfBridgeRoomType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeRoom_Substitution">
      <brid:ADEOfBridgeRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:AbstractBridge">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:AbstractBridge"/>
         <xsl:call-template name="brid:AbstractBridgeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:AbstractBridge_Substitution">
      <brid:AbstractBridge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:Bridge">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:Bridge"/>
         <xsl:call-template name="brid:BridgeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:Bridge_Substitution">
      <brid:Bridge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:BridgeConstructiveElement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:BridgeConstructiveElement"/>
         <xsl:call-template name="brid:BridgeConstructiveElementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:BridgeConstructiveElement_Substitution">
      <brid:BridgeConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:BridgeFurniture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:BridgeFurniture"/>
         <xsl:call-template name="brid:BridgeFurnitureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:BridgeFurniture_Substitution">
      <brid:BridgeFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:BridgeInstallation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:BridgeInstallation"/>
         <xsl:call-template name="brid:BridgeInstallationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:BridgeInstallation_Substitution">
      <brid:BridgeInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:BridgePart">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:BridgePart"/>
         <xsl:call-template name="brid:BridgePartType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:BridgePart_Substitution">
      <brid:BridgePart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:BridgeRoom">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="brid:BridgeRoom"/>
         <xsl:call-template name="brid:BridgeRoomType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:BridgeRoom_Substitution">
      <brid:BridgeRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:ADEOfAbstractBuilding">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:ADEOfAbstractBuilding"/>
         <xsl:call-template name="bldg:ADEOfAbstractBuildingType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:ADEOfAbstractBuilding_Substitution">
      <bldg:ADEOfAbstractBuilding xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:ADEOfAbstractBuildingSubdivision">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:ADEOfAbstractBuildingSubdivision"/>
         <xsl:call-template name="bldg:ADEOfAbstractBuildingSubdivisionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:ADEOfAbstractBuildingSubdivision_Substitution">
      <bldg:ADEOfAbstractBuildingSubdivision xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:ADEOfBuilding">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:ADEOfBuilding"/>
         <xsl:call-template name="bldg:ADEOfBuildingType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuilding_Substitution">
      <bldg:ADEOfBuilding xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:ADEOfBuildingConstructiveElement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:ADEOfBuildingConstructiveElement"/>
         <xsl:call-template name="bldg:ADEOfBuildingConstructiveElementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingConstructiveElement_Substitution">
      <bldg:ADEOfBuildingConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:ADEOfBuildingFurniture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:ADEOfBuildingFurniture"/>
         <xsl:call-template name="bldg:ADEOfBuildingFurnitureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingFurniture_Substitution">
      <bldg:ADEOfBuildingFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:ADEOfBuildingInstallation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:ADEOfBuildingInstallation"/>
         <xsl:call-template name="bldg:ADEOfBuildingInstallationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingInstallation_Substitution">
      <bldg:ADEOfBuildingInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:ADEOfBuildingPart">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:ADEOfBuildingPart"/>
         <xsl:call-template name="bldg:ADEOfBuildingPartType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingPart_Substitution">
      <bldg:ADEOfBuildingPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:ADEOfBuildingRoom">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:ADEOfBuildingRoom"/>
         <xsl:call-template name="bldg:ADEOfBuildingRoomType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingRoom_Substitution">
      <bldg:ADEOfBuildingRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:ADEOfBuildingUnit">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:ADEOfBuildingUnit"/>
         <xsl:call-template name="bldg:ADEOfBuildingUnitType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingUnit_Substitution">
      <bldg:ADEOfBuildingUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:ADEOfStorey">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:ADEOfStorey"/>
         <xsl:call-template name="bldg:ADEOfStoreyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:ADEOfStorey_Substitution">
      <bldg:ADEOfStorey xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:AbstractBuilding">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:AbstractBuilding"/>
         <xsl:call-template name="bldg:AbstractBuildingType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:AbstractBuilding_Substitution">
      <bldg:AbstractBuilding xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:AbstractBuildingSubdivision">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:AbstractBuildingSubdivision"/>
         <xsl:call-template name="bldg:AbstractBuildingSubdivisionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:AbstractBuildingSubdivision_Substitution">
      <bldg:AbstractBuildingSubdivision xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:Building">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:Building"/>
         <xsl:call-template name="bldg:BuildingType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:Building_Substitution">
      <bldg:Building xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:BuildingConstructiveElement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:BuildingConstructiveElement"/>
         <xsl:call-template name="bldg:BuildingConstructiveElementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:BuildingConstructiveElement_Substitution">
      <bldg:BuildingConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:BuildingFurniture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:BuildingFurniture"/>
         <xsl:call-template name="bldg:BuildingFurnitureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:BuildingFurniture_Substitution">
      <bldg:BuildingFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:BuildingInstallation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:BuildingInstallation"/>
         <xsl:call-template name="bldg:BuildingInstallationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:BuildingInstallation_Substitution">
      <bldg:BuildingInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:BuildingPart">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:BuildingPart"/>
         <xsl:call-template name="bldg:BuildingPartType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:BuildingPart_Substitution">
      <bldg:BuildingPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:BuildingRoom">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:BuildingRoom"/>
         <xsl:call-template name="bldg:BuildingRoomType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:BuildingRoom_Substitution">
      <bldg:BuildingRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:BuildingUnit">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:BuildingUnit"/>
         <xsl:call-template name="bldg:BuildingUnitType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:BuildingUnit_Substitution">
      <bldg:BuildingUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:RoomHeight">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:RoomHeight"/>
         <xsl:call-template name="bldg:RoomHeightType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:RoomHeight_Substitution">
      <bldg:RoomHeight xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:Storey">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:Storey"/>
         <xsl:call-template name="bldg:StoreyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:Storey_Substitution">
      <bldg:Storey xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//frn:ADEOfCityFurniture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="frn:ADEOfCityFurniture"/>
         <xsl:call-template name="frn:ADEOfCityFurnitureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="frn:ADEOfCityFurniture_Substitution">
      <frn:ADEOfCityFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//frn:CityFurniture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="frn:CityFurniture"/>
         <xsl:call-template name="frn:CityFurnitureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="frn:CityFurniture_Substitution">
      <frn:CityFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractAppearance">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractAppearance"/>
         <xsl:call-template name="core:ADEOfAbstractAppearanceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractAppearance_Substitution">
      <core:ADEOfAbstractAppearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractCityObject">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractCityObject"/>
         <xsl:call-template name="core:ADEOfAbstractCityObjectType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractCityObject_Substitution">
      <core:ADEOfAbstractCityObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractDynamizer">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractDynamizer"/>
         <xsl:call-template name="core:ADEOfAbstractDynamizerType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractDynamizer_Substitution">
      <core:ADEOfAbstractDynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractFeature">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractFeature"/>
         <xsl:call-template name="core:ADEOfAbstractFeatureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractFeature_Substitution">
      <core:ADEOfAbstractFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractFeatureWithLifespan">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractFeatureWithLifespan"/>
         <xsl:call-template name="core:ADEOfAbstractFeatureWithLifespanType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractFeatureWithLifespan_Substitution">
      <core:ADEOfAbstractFeatureWithLifespan xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractLogicalSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractLogicalSpace"/>
         <xsl:call-template name="core:ADEOfAbstractLogicalSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractLogicalSpace_Substitution">
      <core:ADEOfAbstractLogicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractOccupiedSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractOccupiedSpace"/>
         <xsl:call-template name="core:ADEOfAbstractOccupiedSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractOccupiedSpace_Substitution">
      <core:ADEOfAbstractOccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractPhysicalSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractPhysicalSpace"/>
         <xsl:call-template name="core:ADEOfAbstractPhysicalSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractPhysicalSpace_Substitution">
      <core:ADEOfAbstractPhysicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractPointCloud">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractPointCloud"/>
         <xsl:call-template name="core:ADEOfAbstractPointCloudType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractPointCloud_Substitution">
      <core:ADEOfAbstractPointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractSpace"/>
         <xsl:call-template name="core:ADEOfAbstractSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractSpace_Substitution">
      <core:ADEOfAbstractSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractSpaceBoundary">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractSpaceBoundary"/>
         <xsl:call-template name="core:ADEOfAbstractSpaceBoundaryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractSpaceBoundary_Substitution">
      <core:ADEOfAbstractSpaceBoundary xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractThematicSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractThematicSurface"/>
         <xsl:call-template name="core:ADEOfAbstractThematicSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractThematicSurface_Substitution">
      <core:ADEOfAbstractThematicSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractUnoccupiedSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractUnoccupiedSpace"/>
         <xsl:call-template name="core:ADEOfAbstractUnoccupiedSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractUnoccupiedSpace_Substitution">
      <core:ADEOfAbstractUnoccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractVersion">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractVersion"/>
         <xsl:call-template name="core:ADEOfAbstractVersionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractVersion_Substitution">
      <core:ADEOfAbstractVersion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAbstractVersionTransition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAbstractVersionTransition"/>
         <xsl:call-template name="core:ADEOfAbstractVersionTransitionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractVersionTransition_Substitution">
      <core:ADEOfAbstractVersionTransition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfAddress">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfAddress"/>
         <xsl:call-template name="core:ADEOfAddressType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfAddress_Substitution">
      <core:ADEOfAddress xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfCityModel">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfCityModel"/>
         <xsl:call-template name="core:ADEOfCityModelType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfCityModel_Substitution">
      <core:ADEOfCityModel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ADEOfClosureSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ADEOfClosureSurface"/>
         <xsl:call-template name="core:ADEOfClosureSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ADEOfClosureSurface_Substitution">
      <core:ADEOfClosureSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractAppearance">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractAppearance"/>
         <xsl:call-template name="core:AbstractAppearanceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractAppearance_Substitution">
      <core:AbstractAppearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractCityObject">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractCityObject"/>
         <xsl:call-template name="core:AbstractCityObjectType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractCityObject_Substitution">
      <core:AbstractCityObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractDynamizer">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractDynamizer"/>
         <xsl:call-template name="core:AbstractDynamizerType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractDynamizer_Substitution">
      <core:AbstractDynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractFeature">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractFeature"/>
         <xsl:call-template name="core:AbstractFeatureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractFeature_Substitution">
      <core:AbstractFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractFeatureWithLifespan">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractFeatureWithLifespan"/>
         <xsl:call-template name="core:AbstractFeatureWithLifespanType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractFeatureWithLifespan_Substitution">
      <core:AbstractFeatureWithLifespan xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractGenericAttribute">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractGenericAttribute"/>
         <xsl:call-template name="core:AbstractGenericAttributeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractGenericAttribute_Substitution">
      <core:AbstractGenericAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractLogicalSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractLogicalSpace"/>
         <xsl:call-template name="core:AbstractLogicalSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractLogicalSpace_Substitution">
      <core:AbstractLogicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractOccupiedSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractOccupiedSpace"/>
         <xsl:call-template name="core:AbstractOccupiedSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractOccupiedSpace_Substitution">
      <core:AbstractOccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractPhysicalSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractPhysicalSpace"/>
         <xsl:call-template name="core:AbstractPhysicalSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractPhysicalSpace_Substitution">
      <core:AbstractPhysicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractPointCloud">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractPointCloud"/>
         <xsl:call-template name="core:AbstractPointCloudType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractPointCloud_Substitution">
      <core:AbstractPointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractSpace"/>
         <xsl:call-template name="core:AbstractSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractSpace_Substitution">
      <core:AbstractSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractSpaceBoundary">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractSpaceBoundary"/>
         <xsl:call-template name="core:AbstractSpaceBoundaryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractSpaceBoundary_Substitution">
      <core:AbstractSpaceBoundary xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractThematicSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractThematicSurface"/>
         <xsl:call-template name="core:AbstractThematicSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractThematicSurface_Substitution">
      <core:AbstractThematicSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractUnoccupiedSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractUnoccupiedSpace"/>
         <xsl:call-template name="core:AbstractUnoccupiedSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractUnoccupiedSpace_Substitution">
      <core:AbstractUnoccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractVersion">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractVersion"/>
         <xsl:call-template name="core:AbstractVersionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractVersion_Substitution">
      <core:AbstractVersion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:AbstractVersionTransition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:AbstractVersionTransition"/>
         <xsl:call-template name="core:AbstractVersionTransitionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:AbstractVersionTransition_Substitution">
      <core:AbstractVersionTransition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:Address">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:Address"/>
         <xsl:call-template name="core:AddressType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:Address_Substitution">
      <core:Address xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:CityModel">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:CityModel"/>
         <xsl:call-template name="core:CityModelType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:CityModel_Substitution">
      <core:CityModel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:CityObjectRelation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:CityObjectRelation"/>
         <xsl:call-template name="core:CityObjectRelationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:CityObjectRelation_Substitution">
      <core:CityObjectRelation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ClosureSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ClosureSurface"/>
         <xsl:call-template name="core:ClosureSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ClosureSurface_Substitution">
      <core:ClosureSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ExternalReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ExternalReference"/>
         <xsl:call-template name="core:ExternalReferenceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ExternalReference_Substitution">
      <core:ExternalReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:ImplicitGeometry">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:ImplicitGeometry"/>
         <xsl:call-template name="core:ImplicitGeometryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:ImplicitGeometry_Substitution">
      <core:ImplicitGeometry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:Occupancy">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:Occupancy"/>
         <xsl:call-template name="core:OccupancyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:Occupancy_Substitution">
      <core:Occupancy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:QualifiedArea">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:QualifiedArea"/>
         <xsl:call-template name="core:QualifiedAreaType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:QualifiedArea_Substitution">
      <core:QualifiedArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:QualifiedVolume">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="core:QualifiedVolume"/>
         <xsl:call-template name="core:QualifiedVolumeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:QualifiedVolume_Substitution">
      <core:QualifiedVolume xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//grp:ADEOfCityObjectGroup">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="grp:ADEOfCityObjectGroup"/>
         <xsl:call-template name="grp:ADEOfCityObjectGroupType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="grp:ADEOfCityObjectGroup_Substitution">
      <grp:ADEOfCityObjectGroup xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//grp:CityObjectGroup">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="grp:CityObjectGroup"/>
         <xsl:call-template name="grp:CityObjectGroupType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="grp:CityObjectGroup_Substitution">
      <grp:CityObjectGroup xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//grp:Role">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="grp:Role"/>
         <xsl:call-template name="grp:RoleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="grp:Role_Substitution">
      <grp:Role xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfAbstractConstruction">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfAbstractConstruction"/>
         <xsl:call-template name="con:ADEOfAbstractConstructionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractConstruction_Substitution">
      <con:ADEOfAbstractConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfAbstractConstructionSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfAbstractConstructionSurface"/>
         <xsl:call-template name="con:ADEOfAbstractConstructionSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractConstructionSurface_Substitution">
      <con:ADEOfAbstractConstructionSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfAbstractConstructiveElement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfAbstractConstructiveElement"/>
         <xsl:call-template name="con:ADEOfAbstractConstructiveElementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractConstructiveElement_Substitution">
      <con:ADEOfAbstractConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfAbstractFillingElement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfAbstractFillingElement"/>
         <xsl:call-template name="con:ADEOfAbstractFillingElementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractFillingElement_Substitution">
      <con:ADEOfAbstractFillingElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfAbstractFillingSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfAbstractFillingSurface"/>
         <xsl:call-template name="con:ADEOfAbstractFillingSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractFillingSurface_Substitution">
      <con:ADEOfAbstractFillingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfAbstractFurniture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfAbstractFurniture"/>
         <xsl:call-template name="con:ADEOfAbstractFurnitureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractFurniture_Substitution">
      <con:ADEOfAbstractFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfAbstractInstallation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfAbstractInstallation"/>
         <xsl:call-template name="con:ADEOfAbstractInstallationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractInstallation_Substitution">
      <con:ADEOfAbstractInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfCeilingSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfCeilingSurface"/>
         <xsl:call-template name="con:ADEOfCeilingSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfCeilingSurface_Substitution">
      <con:ADEOfCeilingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfDoor">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfDoor"/>
         <xsl:call-template name="con:ADEOfDoorType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfDoor_Substitution">
      <con:ADEOfDoor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfDoorSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfDoorSurface"/>
         <xsl:call-template name="con:ADEOfDoorSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfDoorSurface_Substitution">
      <con:ADEOfDoorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfFloorSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfFloorSurface"/>
         <xsl:call-template name="con:ADEOfFloorSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfFloorSurface_Substitution">
      <con:ADEOfFloorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfGroundSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfGroundSurface"/>
         <xsl:call-template name="con:ADEOfGroundSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfGroundSurface_Substitution">
      <con:ADEOfGroundSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfInteriorWallSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfInteriorWallSurface"/>
         <xsl:call-template name="con:ADEOfInteriorWallSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfInteriorWallSurface_Substitution">
      <con:ADEOfInteriorWallSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfOtherConstruction">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfOtherConstruction"/>
         <xsl:call-template name="con:ADEOfOtherConstructionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfOtherConstruction_Substitution">
      <con:ADEOfOtherConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfOuterCeilingSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfOuterCeilingSurface"/>
         <xsl:call-template name="con:ADEOfOuterCeilingSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfOuterCeilingSurface_Substitution">
      <con:ADEOfOuterCeilingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfOuterFloorSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfOuterFloorSurface"/>
         <xsl:call-template name="con:ADEOfOuterFloorSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfOuterFloorSurface_Substitution">
      <con:ADEOfOuterFloorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfRoofSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfRoofSurface"/>
         <xsl:call-template name="con:ADEOfRoofSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfRoofSurface_Substitution">
      <con:ADEOfRoofSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfWallSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfWallSurface"/>
         <xsl:call-template name="con:ADEOfWallSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfWallSurface_Substitution">
      <con:ADEOfWallSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfWindow">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfWindow"/>
         <xsl:call-template name="con:ADEOfWindowType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfWindow_Substitution">
      <con:ADEOfWindow xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ADEOfWindowSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ADEOfWindowSurface"/>
         <xsl:call-template name="con:ADEOfWindowSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ADEOfWindowSurface_Substitution">
      <con:ADEOfWindowSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:AbstractConstruction">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:AbstractConstruction"/>
         <xsl:call-template name="con:AbstractConstructionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:AbstractConstruction_Substitution">
      <con:AbstractConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:AbstractConstructionSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:AbstractConstructionSurface"/>
         <xsl:call-template name="con:AbstractConstructionSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:AbstractConstructionSurface_Substitution">
      <con:AbstractConstructionSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:AbstractConstructiveElement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:AbstractConstructiveElement"/>
         <xsl:call-template name="con:AbstractConstructiveElementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:AbstractConstructiveElement_Substitution">
      <con:AbstractConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:AbstractFillingElement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:AbstractFillingElement"/>
         <xsl:call-template name="con:AbstractFillingElementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:AbstractFillingElement_Substitution">
      <con:AbstractFillingElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:AbstractFillingSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:AbstractFillingSurface"/>
         <xsl:call-template name="con:AbstractFillingSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:AbstractFillingSurface_Substitution">
      <con:AbstractFillingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:AbstractFurniture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:AbstractFurniture"/>
         <xsl:call-template name="con:AbstractFurnitureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:AbstractFurniture_Substitution">
      <con:AbstractFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:AbstractInstallation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:AbstractInstallation"/>
         <xsl:call-template name="con:AbstractInstallationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:AbstractInstallation_Substitution">
      <con:AbstractInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:CeilingSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:CeilingSurface"/>
         <xsl:call-template name="con:CeilingSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:CeilingSurface_Substitution">
      <con:CeilingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:ConstructionEvent">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:ConstructionEvent"/>
         <xsl:call-template name="con:ConstructionEventType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:ConstructionEvent_Substitution">
      <con:ConstructionEvent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:Door">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:Door"/>
         <xsl:call-template name="con:DoorType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:Door_Substitution">
      <con:Door xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:DoorSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:DoorSurface"/>
         <xsl:call-template name="con:DoorSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:DoorSurface_Substitution">
      <con:DoorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:Elevation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:Elevation"/>
         <xsl:call-template name="con:ElevationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:Elevation_Substitution">
      <con:Elevation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:FloorSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:FloorSurface"/>
         <xsl:call-template name="con:FloorSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:FloorSurface_Substitution">
      <con:FloorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:GroundSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:GroundSurface"/>
         <xsl:call-template name="con:GroundSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:GroundSurface_Substitution">
      <con:GroundSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:Height">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:Height"/>
         <xsl:call-template name="con:HeightType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:Height_Substitution">
      <con:Height xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:InteriorWallSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:InteriorWallSurface"/>
         <xsl:call-template name="con:InteriorWallSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:InteriorWallSurface_Substitution">
      <con:InteriorWallSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:OtherConstruction">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:OtherConstruction"/>
         <xsl:call-template name="con:OtherConstructionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:OtherConstruction_Substitution">
      <con:OtherConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:OuterCeilingSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:OuterCeilingSurface"/>
         <xsl:call-template name="con:OuterCeilingSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:OuterCeilingSurface_Substitution">
      <con:OuterCeilingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:OuterFloorSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:OuterFloorSurface"/>
         <xsl:call-template name="con:OuterFloorSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:OuterFloorSurface_Substitution">
      <con:OuterFloorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:RoofSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:RoofSurface"/>
         <xsl:call-template name="con:RoofSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:RoofSurface_Substitution">
      <con:RoofSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:WallSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:WallSurface"/>
         <xsl:call-template name="con:WallSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:WallSurface_Substitution">
      <con:WallSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:Window">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:Window"/>
         <xsl:call-template name="con:WindowType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:Window_Substitution">
      <con:Window xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:WindowSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="con:WindowSurface"/>
         <xsl:call-template name="con:WindowSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:WindowSurface_Substitution">
      <con:WindowSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:ADEOfAbstractAtomicTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:ADEOfAbstractAtomicTimeseries"/>
         <xsl:call-template name="dyn:ADEOfAbstractAtomicTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:ADEOfAbstractAtomicTimeseries_Substitution">
      <dyn:ADEOfAbstractAtomicTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:ADEOfAbstractTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:ADEOfAbstractTimeseries"/>
         <xsl:call-template name="dyn:ADEOfAbstractTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:ADEOfAbstractTimeseries_Substitution">
      <dyn:ADEOfAbstractTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:ADEOfCompositeTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:ADEOfCompositeTimeseries"/>
         <xsl:call-template name="dyn:ADEOfCompositeTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:ADEOfCompositeTimeseries_Substitution">
      <dyn:ADEOfCompositeTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:ADEOfDynamizer">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:ADEOfDynamizer"/>
         <xsl:call-template name="dyn:ADEOfDynamizerType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:ADEOfDynamizer_Substitution">
      <dyn:ADEOfDynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:ADEOfGenericTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:ADEOfGenericTimeseries"/>
         <xsl:call-template name="dyn:ADEOfGenericTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:ADEOfGenericTimeseries_Substitution">
      <dyn:ADEOfGenericTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:ADEOfStandardFileTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:ADEOfStandardFileTimeseries"/>
         <xsl:call-template name="dyn:ADEOfStandardFileTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:ADEOfStandardFileTimeseries_Substitution">
      <dyn:ADEOfStandardFileTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:ADEOfTabulatedFileTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:ADEOfTabulatedFileTimeseries"/>
         <xsl:call-template name="dyn:ADEOfTabulatedFileTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:ADEOfTabulatedFileTimeseries_Substitution">
      <dyn:ADEOfTabulatedFileTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:AbstractAtomicTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:AbstractAtomicTimeseries"/>
         <xsl:call-template name="dyn:AbstractAtomicTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:AbstractAtomicTimeseries_Substitution">
      <dyn:AbstractAtomicTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:AbstractTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:AbstractTimeseries"/>
         <xsl:call-template name="dyn:AbstractTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:AbstractTimeseries_Substitution">
      <dyn:AbstractTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:CompositeTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:CompositeTimeseries"/>
         <xsl:call-template name="dyn:CompositeTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:CompositeTimeseries_Substitution">
      <dyn:CompositeTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:Dynamizer">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:Dynamizer"/>
         <xsl:call-template name="dyn:DynamizerType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:Dynamizer_Substitution">
      <dyn:Dynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:GenericTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:GenericTimeseries"/>
         <xsl:call-template name="dyn:GenericTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:GenericTimeseries_Substitution">
      <dyn:GenericTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:SensorConnection">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:SensorConnection"/>
         <xsl:call-template name="dyn:SensorConnectionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:SensorConnection_Substitution">
      <dyn:SensorConnection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:StandardFileTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:StandardFileTimeseries"/>
         <xsl:call-template name="dyn:StandardFileTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:StandardFileTimeseries_Substitution">
      <dyn:StandardFileTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:TabulatedFileTimeseries">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:TabulatedFileTimeseries"/>
         <xsl:call-template name="dyn:TabulatedFileTimeseriesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:TabulatedFileTimeseries_Substitution">
      <dyn:TabulatedFileTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:TimeValuePair">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:TimeValuePair"/>
         <xsl:call-template name="dyn:TimeValuePairType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:TimeValuePair_Substitution">
      <dyn:TimeValuePair xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:TimeseriesComponent">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:TimeseriesComponent"/>
         <xsl:call-template name="dyn:TimeseriesComponentType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:TimeseriesComponent_Substitution">
      <dyn:TimeseriesComponent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:ADEOfGenericLogicalSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:ADEOfGenericLogicalSpace"/>
         <xsl:call-template name="gen:ADEOfGenericLogicalSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericLogicalSpace_Substitution">
      <gen:ADEOfGenericLogicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:ADEOfGenericOccupiedSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:ADEOfGenericOccupiedSpace"/>
         <xsl:call-template name="gen:ADEOfGenericOccupiedSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericOccupiedSpace_Substitution">
      <gen:ADEOfGenericOccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:ADEOfGenericThematicSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:ADEOfGenericThematicSurface"/>
         <xsl:call-template name="gen:ADEOfGenericThematicSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericThematicSurface_Substitution">
      <gen:ADEOfGenericThematicSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:ADEOfGenericUnoccupiedSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:ADEOfGenericUnoccupiedSpace"/>
         <xsl:call-template name="gen:ADEOfGenericUnoccupiedSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericUnoccupiedSpace_Substitution">
      <gen:ADEOfGenericUnoccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:CodeAttribute">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:CodeAttribute"/>
         <xsl:call-template name="gen:CodeAttributeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:CodeAttribute_Substitution">
      <gen:CodeAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:DateAttribute">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:DateAttribute"/>
         <xsl:call-template name="gen:DateAttributeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:DateAttribute_Substitution">
      <gen:DateAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:DoubleAttribute">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:DoubleAttribute"/>
         <xsl:call-template name="gen:DoubleAttributeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:DoubleAttribute_Substitution">
      <gen:DoubleAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:GenericAttributeSet">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:GenericAttributeSet"/>
         <xsl:call-template name="gen:GenericAttributeSetType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:GenericAttributeSet_Substitution">
      <gen:GenericAttributeSet xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:GenericLogicalSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:GenericLogicalSpace"/>
         <xsl:call-template name="gen:GenericLogicalSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:GenericLogicalSpace_Substitution">
      <gen:GenericLogicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:GenericOccupiedSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:GenericOccupiedSpace"/>
         <xsl:call-template name="gen:GenericOccupiedSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:GenericOccupiedSpace_Substitution">
      <gen:GenericOccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:GenericThematicSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:GenericThematicSurface"/>
         <xsl:call-template name="gen:GenericThematicSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:GenericThematicSurface_Substitution">
      <gen:GenericThematicSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:GenericUnoccupiedSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:GenericUnoccupiedSpace"/>
         <xsl:call-template name="gen:GenericUnoccupiedSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:GenericUnoccupiedSpace_Substitution">
      <gen:GenericUnoccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:IntAttribute">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:IntAttribute"/>
         <xsl:call-template name="gen:IntAttributeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:IntAttribute_Substitution">
      <gen:IntAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:MeasureAttribute">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:MeasureAttribute"/>
         <xsl:call-template name="gen:MeasureAttributeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:MeasureAttribute_Substitution">
      <gen:MeasureAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:StringAttribute">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:StringAttribute"/>
         <xsl:call-template name="gen:StringAttributeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:StringAttribute_Substitution">
      <gen:StringAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:UriAttribute">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gen:UriAttribute"/>
         <xsl:call-template name="gen:UriAttributeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:UriAttribute_Substitution">
      <gen:UriAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//luse:ADEOfLandUse">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="luse:ADEOfLandUse"/>
         <xsl:call-template name="luse:ADEOfLandUseType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="luse:ADEOfLandUse_Substitution">
      <luse:ADEOfLandUse xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//luse:LandUse">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="luse:LandUse"/>
         <xsl:call-template name="luse:LandUseType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="luse:LandUse_Substitution">
      <luse:LandUse xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//pcl:ADEOfPointCloud">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="pcl:ADEOfPointCloud"/>
         <xsl:call-template name="pcl:ADEOfPointCloudType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="pcl:ADEOfPointCloud_Substitution">
      <pcl:ADEOfPointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//pcl:PointCloud">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="pcl:PointCloud"/>
         <xsl:call-template name="pcl:PointCloudType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="pcl:PointCloud_Substitution">
      <pcl:PointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:ADEOfAbstractReliefComponent">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:ADEOfAbstractReliefComponent"/>
         <xsl:call-template name="dem:ADEOfAbstractReliefComponentType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:ADEOfAbstractReliefComponent_Substitution">
      <dem:ADEOfAbstractReliefComponent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:ADEOfBreaklineRelief">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:ADEOfBreaklineRelief"/>
         <xsl:call-template name="dem:ADEOfBreaklineReliefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:ADEOfBreaklineRelief_Substitution">
      <dem:ADEOfBreaklineRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:ADEOfMassPointRelief">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:ADEOfMassPointRelief"/>
         <xsl:call-template name="dem:ADEOfMassPointReliefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:ADEOfMassPointRelief_Substitution">
      <dem:ADEOfMassPointRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:ADEOfRasterRelief">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:ADEOfRasterRelief"/>
         <xsl:call-template name="dem:ADEOfRasterReliefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:ADEOfRasterRelief_Substitution">
      <dem:ADEOfRasterRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:ADEOfReliefFeature">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:ADEOfReliefFeature"/>
         <xsl:call-template name="dem:ADEOfReliefFeatureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:ADEOfReliefFeature_Substitution">
      <dem:ADEOfReliefFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:ADEOfTINRelief">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:ADEOfTINRelief"/>
         <xsl:call-template name="dem:ADEOfTINReliefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:ADEOfTINRelief_Substitution">
      <dem:ADEOfTINRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:AbstractReliefComponent">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:AbstractReliefComponent"/>
         <xsl:call-template name="dem:AbstractReliefComponentType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:AbstractReliefComponent_Substitution">
      <dem:AbstractReliefComponent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:BreaklineRelief">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:BreaklineRelief"/>
         <xsl:call-template name="dem:BreaklineReliefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:BreaklineRelief_Substitution">
      <dem:BreaklineRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:MassPointRelief">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:MassPointRelief"/>
         <xsl:call-template name="dem:MassPointReliefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:MassPointRelief_Substitution">
      <dem:MassPointRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:RasterRelief">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:RasterRelief"/>
         <xsl:call-template name="dem:RasterReliefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:RasterRelief_Substitution">
      <dem:RasterRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:ReliefFeature">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:ReliefFeature"/>
         <xsl:call-template name="dem:ReliefFeatureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:ReliefFeature_Substitution">
      <dem:ReliefFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dem:TINRelief">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="dem:TINRelief"/>
         <xsl:call-template name="dem:TINReliefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dem:TINRelief_Substitution">
      <dem:TINRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfAbstractTransportationSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfAbstractTransportationSpace"/>
         <xsl:call-template name="tran:ADEOfAbstractTransportationSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfAbstractTransportationSpace_Substitution">
      <tran:ADEOfAbstractTransportationSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfAuxiliaryTrafficArea">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfAuxiliaryTrafficArea"/>
         <xsl:call-template name="tran:ADEOfAuxiliaryTrafficAreaType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfAuxiliaryTrafficArea_Substitution">
      <tran:ADEOfAuxiliaryTrafficArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfAuxiliaryTrafficSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfAuxiliaryTrafficSpace"/>
         <xsl:call-template name="tran:ADEOfAuxiliaryTrafficSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfAuxiliaryTrafficSpace_Substitution">
      <tran:ADEOfAuxiliaryTrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfClearanceSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfClearanceSpace"/>
         <xsl:call-template name="tran:ADEOfClearanceSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfClearanceSpace_Substitution">
      <tran:ADEOfClearanceSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfHole">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfHole"/>
         <xsl:call-template name="tran:ADEOfHoleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfHole_Substitution">
      <tran:ADEOfHole xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfHoleSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfHoleSurface"/>
         <xsl:call-template name="tran:ADEOfHoleSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfHoleSurface_Substitution">
      <tran:ADEOfHoleSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfIntersection">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfIntersection"/>
         <xsl:call-template name="tran:ADEOfIntersectionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfIntersection_Substitution">
      <tran:ADEOfIntersection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfMarking">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfMarking"/>
         <xsl:call-template name="tran:ADEOfMarkingType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfMarking_Substitution">
      <tran:ADEOfMarking xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfRailway">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfRailway"/>
         <xsl:call-template name="tran:ADEOfRailwayType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfRailway_Substitution">
      <tran:ADEOfRailway xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfRoad">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfRoad"/>
         <xsl:call-template name="tran:ADEOfRoadType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfRoad_Substitution">
      <tran:ADEOfRoad xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfSection">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfSection"/>
         <xsl:call-template name="tran:ADEOfSectionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfSection_Substitution">
      <tran:ADEOfSection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfSquare">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfSquare"/>
         <xsl:call-template name="tran:ADEOfSquareType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfSquare_Substitution">
      <tran:ADEOfSquare xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfTrack">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfTrack"/>
         <xsl:call-template name="tran:ADEOfTrackType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfTrack_Substitution">
      <tran:ADEOfTrack xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfTrafficArea">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfTrafficArea"/>
         <xsl:call-template name="tran:ADEOfTrafficAreaType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfTrafficArea_Substitution">
      <tran:ADEOfTrafficArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfTrafficSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfTrafficSpace"/>
         <xsl:call-template name="tran:ADEOfTrafficSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfTrafficSpace_Substitution">
      <tran:ADEOfTrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ADEOfWaterway">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ADEOfWaterway"/>
         <xsl:call-template name="tran:ADEOfWaterwayType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ADEOfWaterway_Substitution">
      <tran:ADEOfWaterway xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:AbstractTransportationSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:AbstractTransportationSpace"/>
         <xsl:call-template name="tran:AbstractTransportationSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:AbstractTransportationSpace_Substitution">
      <tran:AbstractTransportationSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:AuxiliaryTrafficArea">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:AuxiliaryTrafficArea"/>
         <xsl:call-template name="tran:AuxiliaryTrafficAreaType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:AuxiliaryTrafficArea_Substitution">
      <tran:AuxiliaryTrafficArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:AuxiliaryTrafficSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:AuxiliaryTrafficSpace"/>
         <xsl:call-template name="tran:AuxiliaryTrafficSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:AuxiliaryTrafficSpace_Substitution">
      <tran:AuxiliaryTrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:ClearanceSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:ClearanceSpace"/>
         <xsl:call-template name="tran:ClearanceSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:ClearanceSpace_Substitution">
      <tran:ClearanceSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:Hole">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:Hole"/>
         <xsl:call-template name="tran:HoleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:Hole_Substitution">
      <tran:Hole xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:HoleSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:HoleSurface"/>
         <xsl:call-template name="tran:HoleSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:HoleSurface_Substitution">
      <tran:HoleSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:Intersection">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:Intersection"/>
         <xsl:call-template name="tran:IntersectionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:Intersection_Substitution">
      <tran:Intersection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:Marking">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:Marking"/>
         <xsl:call-template name="tran:MarkingType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:Marking_Substitution">
      <tran:Marking xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:Railway">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:Railway"/>
         <xsl:call-template name="tran:RailwayType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:Railway_Substitution">
      <tran:Railway xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:Road">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:Road"/>
         <xsl:call-template name="tran:RoadType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:Road_Substitution">
      <tran:Road xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:Section">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:Section"/>
         <xsl:call-template name="tran:SectionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:Section_Substitution">
      <tran:Section xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:Square">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:Square"/>
         <xsl:call-template name="tran:SquareType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:Square_Substitution">
      <tran:Square xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:Track">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:Track"/>
         <xsl:call-template name="tran:TrackType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:Track_Substitution">
      <tran:Track xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:TrafficArea">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:TrafficArea"/>
         <xsl:call-template name="tran:TrafficAreaType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:TrafficArea_Substitution">
      <tran:TrafficArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:TrafficSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:TrafficSpace"/>
         <xsl:call-template name="tran:TrafficSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:TrafficSpace_Substitution">
      <tran:TrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:Waterway">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tran:Waterway"/>
         <xsl:call-template name="tran:WaterwayType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:Waterway_Substitution">
      <tran:Waterway xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:ADEOfAbstractTunnel">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:ADEOfAbstractTunnel"/>
         <xsl:call-template name="tun:ADEOfAbstractTunnelType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:ADEOfAbstractTunnel_Substitution">
      <tun:ADEOfAbstractTunnel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:ADEOfHollowSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:ADEOfHollowSpace"/>
         <xsl:call-template name="tun:ADEOfHollowSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:ADEOfHollowSpace_Substitution">
      <tun:ADEOfHollowSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:ADEOfTunnel">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:ADEOfTunnel"/>
         <xsl:call-template name="tun:ADEOfTunnelType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnel_Substitution">
      <tun:ADEOfTunnel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:ADEOfTunnelConstructiveElement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:ADEOfTunnelConstructiveElement"/>
         <xsl:call-template name="tun:ADEOfTunnelConstructiveElementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelConstructiveElement_Substitution">
      <tun:ADEOfTunnelConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:ADEOfTunnelFurniture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:ADEOfTunnelFurniture"/>
         <xsl:call-template name="tun:ADEOfTunnelFurnitureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelFurniture_Substitution">
      <tun:ADEOfTunnelFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:ADEOfTunnelInstallation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:ADEOfTunnelInstallation"/>
         <xsl:call-template name="tun:ADEOfTunnelInstallationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelInstallation_Substitution">
      <tun:ADEOfTunnelInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:ADEOfTunnelPart">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:ADEOfTunnelPart"/>
         <xsl:call-template name="tun:ADEOfTunnelPartType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelPart_Substitution">
      <tun:ADEOfTunnelPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:AbstractTunnel">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:AbstractTunnel"/>
         <xsl:call-template name="tun:AbstractTunnelType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:AbstractTunnel_Substitution">
      <tun:AbstractTunnel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:HollowSpace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:HollowSpace"/>
         <xsl:call-template name="tun:HollowSpaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:HollowSpace_Substitution">
      <tun:HollowSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:Tunnel">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:Tunnel"/>
         <xsl:call-template name="tun:TunnelType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:Tunnel_Substitution">
      <tun:Tunnel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:TunnelConstructiveElement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:TunnelConstructiveElement"/>
         <xsl:call-template name="tun:TunnelConstructiveElementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:TunnelConstructiveElement_Substitution">
      <tun:TunnelConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:TunnelFurniture">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:TunnelFurniture"/>
         <xsl:call-template name="tun:TunnelFurnitureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:TunnelFurniture_Substitution">
      <tun:TunnelFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:TunnelInstallation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:TunnelInstallation"/>
         <xsl:call-template name="tun:TunnelInstallationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:TunnelInstallation_Substitution">
      <tun:TunnelInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:TunnelPart">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="tun:TunnelPart"/>
         <xsl:call-template name="tun:TunnelPartType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:TunnelPart_Substitution">
      <tun:TunnelPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:ADEOfAbstractVegetationObject">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="veg:ADEOfAbstractVegetationObject"/>
         <xsl:call-template name="veg:ADEOfAbstractVegetationObjectType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:ADEOfAbstractVegetationObject_Substitution">
      <veg:ADEOfAbstractVegetationObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:ADEOfPlantCover">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="veg:ADEOfPlantCover"/>
         <xsl:call-template name="veg:ADEOfPlantCoverType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:ADEOfPlantCover_Substitution">
      <veg:ADEOfPlantCover xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:ADEOfSolitaryVegetationObject">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="veg:ADEOfSolitaryVegetationObject"/>
         <xsl:call-template name="veg:ADEOfSolitaryVegetationObjectType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:ADEOfSolitaryVegetationObject_Substitution">
      <veg:ADEOfSolitaryVegetationObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:AbstractVegetationObject">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="veg:AbstractVegetationObject"/>
         <xsl:call-template name="veg:AbstractVegetationObjectType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:AbstractVegetationObject_Substitution">
      <veg:AbstractVegetationObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:PlantCover">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="veg:PlantCover"/>
         <xsl:call-template name="veg:PlantCoverType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:PlantCover_Substitution">
      <veg:PlantCover xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:SolitaryVegetationObject">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="veg:SolitaryVegetationObject"/>
         <xsl:call-template name="veg:SolitaryVegetationObjectType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:SolitaryVegetationObject_Substitution">
      <veg:SolitaryVegetationObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//vers:ADEOfVersion">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="vers:ADEOfVersion"/>
         <xsl:call-template name="vers:ADEOfVersionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="vers:ADEOfVersion_Substitution">
      <vers:ADEOfVersion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//vers:ADEOfVersionTransition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="vers:ADEOfVersionTransition"/>
         <xsl:call-template name="vers:ADEOfVersionTransitionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="vers:ADEOfVersionTransition_Substitution">
      <vers:ADEOfVersionTransition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//vers:Transaction">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="vers:Transaction"/>
         <xsl:call-template name="vers:TransactionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="vers:Transaction_Substitution">
      <vers:Transaction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//vers:Version">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="vers:Version"/>
         <xsl:call-template name="vers:VersionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="vers:Version_Substitution">
      <vers:Version xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//vers:VersionTransition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="vers:VersionTransition"/>
         <xsl:call-template name="vers:VersionTransitionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="vers:VersionTransition_Substitution">
      <vers:VersionTransition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:ADEOfAbstractWaterBoundarySurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:ADEOfAbstractWaterBoundarySurface"/>
         <xsl:call-template name="wtr:ADEOfAbstractWaterBoundarySurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:ADEOfAbstractWaterBoundarySurface_Substitution">
      <wtr:ADEOfAbstractWaterBoundarySurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:ADEOfWaterBody">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:ADEOfWaterBody"/>
         <xsl:call-template name="wtr:ADEOfWaterBodyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:ADEOfWaterBody_Substitution">
      <wtr:ADEOfWaterBody xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:ADEOfWaterGroundSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:ADEOfWaterGroundSurface"/>
         <xsl:call-template name="wtr:ADEOfWaterGroundSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:ADEOfWaterGroundSurface_Substitution">
      <wtr:ADEOfWaterGroundSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:ADEOfWaterSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:ADEOfWaterSurface"/>
         <xsl:call-template name="wtr:ADEOfWaterSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:ADEOfWaterSurface_Substitution">
      <wtr:ADEOfWaterSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:AbstractWaterBoundarySurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:AbstractWaterBoundarySurface"/>
         <xsl:call-template name="wtr:AbstractWaterBoundarySurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:AbstractWaterBoundarySurface_Substitution">
      <wtr:AbstractWaterBoundarySurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:WaterBody">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:WaterBody"/>
         <xsl:call-template name="wtr:WaterBodyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:WaterBody_Substitution">
      <wtr:WaterBody xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:WaterGroundSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:WaterGroundSurface"/>
         <xsl:call-template name="wtr:WaterGroundSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:WaterGroundSurface_Substitution">
      <wtr:WaterGroundSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:WaterSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:WaterSurface"/>
         <xsl:call-template name="wtr:WaterSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:WaterSurface_Substitution">
      <wtr:WaterSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractCoordinateOperation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractCoordinateOperation"/>
         <xsl:call-template name="gml:AbstractCoordinateOperationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractCoordinateOperation_Substitution">
      <gml:AbstractCoordinateOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:coordinateOperationAccuracy">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:coordinateOperationAccuracy"/>
         <xsl:call-template name="_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:coordinateOperationAccuracy_Substitution">
      <gml:coordinateOperationAccuracy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:sourceCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:sourceCRS"/>
         <xsl:call-template name="gml:CRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:sourceCRS_Substitution">
      <gml:sourceCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:targetCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:targetCRS"/>
         <xsl:call-template name="gml:CRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:targetCRS_Substitution">
      <gml:targetCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractSingleOperation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractSingleOperation"/>
         <xsl:call-template name="gml:AbstractCoordinateOperationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractSingleOperation_Substitution">
      <gml:AbstractSingleOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractGeneralConversion">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractGeneralConversion"/>
         <xsl:call-template name="gml:AbstractGeneralConversionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralConversion_Substitution">
      <gml:AbstractGeneralConversion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractGeneralTransformation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractGeneralTransformation"/>
         <xsl:call-template name="gml:AbstractGeneralTransformationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralTransformation_Substitution">
      <gml:AbstractGeneralTransformation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ConcatenatedOperation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ConcatenatedOperation"/>
         <xsl:call-template name="gml:ConcatenatedOperationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ConcatenatedOperation_Substitution">
      <gml:ConcatenatedOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:coordOperation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:coordOperation"/>
         <xsl:call-template name="gml:CoordinateOperationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:coordOperation_Substitution">
      <gml:coordOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:PassThroughOperation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:PassThroughOperation"/>
         <xsl:call-template name="gml:PassThroughOperationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:PassThroughOperation_Substitution">
      <gml:PassThroughOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Conversion">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Conversion"/>
         <xsl:call-template name="gml:ConversionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Conversion_Substitution">
      <gml:Conversion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:method">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:method"/>
         <xsl:call-template name="gml:OperationMethodPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:method_Substitution">
      <gml:method xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:parameterValue">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:parameterValue"/>
         <xsl:call-template name="gml:AbstractGeneralParameterValuePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:parameterValue_Substitution">
      <gml:parameterValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Transformation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Transformation"/>
         <xsl:call-template name="gml:TransformationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Transformation_Substitution">
      <gml:Transformation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractGeneralParameterValue">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractGeneralParameterValue"/>
         <xsl:call-template name="gml:AbstractGeneralParameterValueType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralParameterValue_Substitution">
      <gml:AbstractGeneralParameterValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ParameterValue">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ParameterValue"/>
         <xsl:call-template name="gml:ParameterValueType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ParameterValue_Substitution">
      <gml:ParameterValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:value">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:value"/>
         <xsl:call-template name="gml:MeasureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:value_Substitution">
      <gml:value xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:valueList">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:valueList"/>
         <xsl:call-template name="gml:MeasureListType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:valueList_Substitution">
      <gml:valueList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:integerValueList_Substitution">
      <xsl:call-template name="gml:integerList_Template"/>
   </xsl:template>
   <xsl:template match="//gml:operationParameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:operationParameter"/>
         <xsl:call-template name="gml:OperationParameterPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:operationParameter_Substitution">
      <gml:operationParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ParameterValueGroup">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ParameterValueGroup"/>
         <xsl:call-template name="gml:ParameterValueGroupType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ParameterValueGroup_Substitution">
      <gml:ParameterValueGroup xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:group">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:group"/>
         <xsl:call-template name="gml:OperationParameterGroupPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:group_Substitution">
      <gml:group xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:OperationMethod">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:OperationMethod"/>
         <xsl:call-template name="gml:OperationMethodType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:OperationMethod_Substitution">
      <gml:OperationMethod xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:formulaCitation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:formulaCitation"/>
         <xsl:call-template name="_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:formulaCitation_Substitution">
      <gml:formulaCitation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:formula">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:formula"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:formula_Substitution">
      <gml:formula xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:parameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:parameter"/>
         <xsl:call-template name="gml:AbstractGeneralOperationParameterPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:parameter_Substitution">
      <gml:parameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractGeneralOperationParameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractGeneralOperationParameter"/>
         <xsl:call-template name="gml:AbstractGeneralOperationParameterType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralOperationParameter_Substitution">
      <gml:AbstractGeneralOperationParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:OperationParameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:OperationParameter"/>
         <xsl:call-template name="gml:OperationParameterType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:OperationParameter_Substitution">
      <gml:OperationParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:OperationParameterGroup">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:OperationParameterGroup"/>
         <xsl:call-template name="gml:OperationParameterGroupType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:OperationParameterGroup_Substitution">
      <gml:OperationParameterGroup xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractSingleCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractSingleCRS"/>
         <xsl:call-template name="gml:AbstractCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractSingleCRS_Substitution">
      <gml:AbstractSingleCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractGeneralDerivedCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractGeneralDerivedCRS"/>
         <xsl:call-template name="gml:AbstractGeneralDerivedCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralDerivedCRS_Substitution">
      <gml:AbstractGeneralDerivedCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:conversion">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:conversion"/>
         <xsl:call-template name="gml:GeneralConversionPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:conversion_Substitution">
      <gml:conversion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CompoundCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CompoundCRS"/>
         <xsl:call-template name="gml:CompoundCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CompoundCRS_Substitution">
      <gml:CompoundCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:componentReferenceSystem">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:componentReferenceSystem"/>
         <xsl:call-template name="gml:SingleCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:componentReferenceSystem_Substitution">
      <gml:componentReferenceSystem xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GeodeticCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GeodeticCRS"/>
         <xsl:call-template name="gml:GeodeticCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GeodeticCRS_Substitution">
      <gml:GeodeticCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ellipsoidalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ellipsoidalCS"/>
         <xsl:call-template name="gml:EllipsoidalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ellipsoidalCS_Substitution">
      <gml:ellipsoidalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:cartesianCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:cartesianCS"/>
         <xsl:call-template name="gml:CartesianCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:cartesianCS_Substitution">
      <gml:cartesianCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:sphericalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:sphericalCS"/>
         <xsl:call-template name="gml:SphericalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:sphericalCS_Substitution">
      <gml:sphericalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:geodeticDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:geodeticDatum"/>
         <xsl:call-template name="gml:GeodeticDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:geodeticDatum_Substitution">
      <gml:geodeticDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:VerticalCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:VerticalCRS"/>
         <xsl:call-template name="gml:VerticalCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:VerticalCRS_Substitution">
      <gml:VerticalCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:verticalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:verticalCS"/>
         <xsl:call-template name="gml:VerticalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:verticalCS_Substitution">
      <gml:verticalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:verticalDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:verticalDatum"/>
         <xsl:call-template name="gml:VerticalDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:verticalDatum_Substitution">
      <gml:verticalDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ProjectedCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ProjectedCRS"/>
         <xsl:call-template name="gml:ProjectedCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ProjectedCRS_Substitution">
      <gml:ProjectedCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:baseGeodeticCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:baseGeodeticCRS"/>
         <xsl:call-template name="gml:GeodeticCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:baseGeodeticCRS_Substitution">
      <gml:baseGeodeticCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DerivedCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DerivedCRS"/>
         <xsl:call-template name="gml:DerivedCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:DerivedCRS_Substitution">
      <gml:DerivedCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:baseCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:baseCRS"/>
         <xsl:call-template name="gml:SingleCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:baseCRS_Substitution">
      <gml:baseCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:derivedCRSType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:derivedCRSType"/>
         <xsl:call-template name="gml:CodeWithAuthorityType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:derivedCRSType_Substitution">
      <gml:derivedCRSType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:coordinateSystem">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:coordinateSystem"/>
         <xsl:call-template name="gml:CoordinateSystemPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:coordinateSystem_Substitution">
      <gml:coordinateSystem xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:EngineeringCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:EngineeringCRS"/>
         <xsl:call-template name="gml:EngineeringCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:EngineeringCRS_Substitution">
      <gml:EngineeringCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:cylindricalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:cylindricalCS"/>
         <xsl:call-template name="gml:CylindricalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:cylindricalCS_Substitution">
      <gml:cylindricalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:linearCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:linearCS"/>
         <xsl:call-template name="gml:LinearCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:linearCS_Substitution">
      <gml:linearCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:polarCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:polarCS"/>
         <xsl:call-template name="gml:PolarCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:polarCS_Substitution">
      <gml:polarCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:userDefinedCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:userDefinedCS"/>
         <xsl:call-template name="gml:UserDefinedCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:userDefinedCS_Substitution">
      <gml:userDefinedCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:engineeringDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:engineeringDatum"/>
         <xsl:call-template name="gml:EngineeringDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:engineeringDatum_Substitution">
      <gml:engineeringDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ImageCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ImageCRS"/>
         <xsl:call-template name="gml:ImageCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ImageCRS_Substitution">
      <gml:ImageCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:affineCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:affineCS"/>
         <xsl:call-template name="gml:AffineCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:affineCS_Substitution">
      <gml:affineCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:imageDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:imageDatum"/>
         <xsl:call-template name="gml:ImageDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:imageDatum_Substitution">
      <gml:imageDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TemporalCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TemporalCRS"/>
         <xsl:call-template name="gml:TemporalCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TemporalCRS_Substitution">
      <gml:TemporalCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:timeCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:timeCS"/>
         <xsl:call-template name="gml:TimeCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:timeCS_Substitution">
      <gml:timeCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:temporalDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:temporalDatum"/>
         <xsl:call-template name="gml:TemporalDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:temporalDatum_Substitution">
      <gml:temporalDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CoordinateSystemAxis">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CoordinateSystemAxis"/>
         <xsl:call-template name="gml:CoordinateSystemAxisType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CoordinateSystemAxis_Substitution">
      <gml:CoordinateSystemAxis xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:axisAbbrev">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:axisAbbrev"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:axisAbbrev_Substitution">
      <gml:axisAbbrev xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:axisDirection">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:axisDirection"/>
         <xsl:call-template name="gml:CodeWithAuthorityType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:axisDirection_Substitution">
      <gml:axisDirection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:rangeMeaning">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:rangeMeaning"/>
         <xsl:call-template name="gml:CodeWithAuthorityType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:rangeMeaning_Substitution">
      <gml:rangeMeaning xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractCoordinateSystem">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractCoordinateSystem"/>
         <xsl:call-template name="gml:AbstractCoordinateSystemType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractCoordinateSystem_Substitution">
      <gml:AbstractCoordinateSystem xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:axis">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:axis"/>
         <xsl:call-template name="gml:CoordinateSystemAxisPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:axis_Substitution">
      <gml:axis xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:EllipsoidalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:EllipsoidalCS"/>
         <xsl:call-template name="gml:EllipsoidalCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:EllipsoidalCS_Substitution">
      <gml:EllipsoidalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CartesianCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CartesianCS"/>
         <xsl:call-template name="gml:CartesianCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CartesianCS_Substitution">
      <gml:CartesianCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:VerticalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:VerticalCS"/>
         <xsl:call-template name="gml:VerticalCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:VerticalCS_Substitution">
      <gml:VerticalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeCS"/>
         <xsl:call-template name="gml:TimeCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeCS_Substitution">
      <gml:TimeCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:LinearCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:LinearCS"/>
         <xsl:call-template name="gml:LinearCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:LinearCS_Substitution">
      <gml:LinearCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:UserDefinedCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:UserDefinedCS"/>
         <xsl:call-template name="gml:UserDefinedCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:UserDefinedCS_Substitution">
      <gml:UserDefinedCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:SphericalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:SphericalCS"/>
         <xsl:call-template name="gml:SphericalCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:SphericalCS_Substitution">
      <gml:SphericalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:PolarCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:PolarCS"/>
         <xsl:call-template name="gml:PolarCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:PolarCS_Substitution">
      <gml:PolarCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CylindricalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CylindricalCS"/>
         <xsl:call-template name="gml:CylindricalCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CylindricalCS_Substitution">
      <gml:CylindricalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AffineCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AffineCS"/>
         <xsl:call-template name="gml:AffineCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AffineCS_Substitution">
      <gml:AffineCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractCoverage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractCoverage"/>
         <xsl:call-template name="gml:AbstractCoverageType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractCoverage_Substitution">
      <gml:AbstractCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractDiscreteCoverage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractDiscreteCoverage"/>
         <xsl:call-template name="gml:DiscreteCoverageType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractDiscreteCoverage_Substitution">
      <gml:AbstractDiscreteCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractContinuousCoverage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractContinuousCoverage"/>
         <xsl:call-template name="gml:AbstractContinuousCoverageType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractContinuousCoverage_Substitution">
      <gml:AbstractContinuousCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:domainSet">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:domainSet"/>
         <xsl:call-template name="gml:DomainSetType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:domainSet_Substitution">
      <gml:domainSet xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:rangeSet">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:rangeSet"/>
         <xsl:call-template name="gml:RangeSetType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:rangeSet_Substitution">
      <gml:rangeSet xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DataBlock">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DataBlock"/>
         <xsl:call-template name="gml:DataBlockType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:DataBlock_Substitution">
      <gml:DataBlock xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:rangeParameters">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:rangeParameters"/>
         <xsl:call-template name="gml:AssociationRoleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:rangeParameters_Substitution">
      <gml:rangeParameters xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:tupleList">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:tupleList"/>
         <xsl:call-template name="gml:CoordinatesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:tupleList_Substitution">
      <gml:tupleList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:doubleOrNilReasonTupleList_Substitution">
      <xsl:call-template name="gml:doubleOrNilReasonList_Template"/>
   </xsl:template>
   <xsl:template match="//gml:File">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:File"/>
         <xsl:call-template name="gml:FileType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:File_Substitution">
      <gml:File xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:coverageFunction">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:coverageFunction"/>
         <xsl:call-template name="gml:CoverageFunctionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:coverageFunction_Substitution">
      <gml:coverageFunction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CoverageMappingRule">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CoverageMappingRule"/>
         <xsl:call-template name="gml:MappingRuleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CoverageMappingRule_Substitution">
      <gml:CoverageMappingRule xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GridFunction">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GridFunction"/>
         <xsl:call-template name="gml:GridFunctionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GridFunction_Substitution">
      <gml:GridFunction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MultiPointCoverage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MultiPointCoverage"/>
         <xsl:call-template name="gml:DiscreteCoverageType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MultiPointCoverage_Substitution">
      <gml:MultiPointCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MultiCurveCoverage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MultiCurveCoverage"/>
         <xsl:call-template name="gml:DiscreteCoverageType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MultiCurveCoverage_Substitution">
      <gml:MultiCurveCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MultiSurfaceCoverage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MultiSurfaceCoverage"/>
         <xsl:call-template name="gml:DiscreteCoverageType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MultiSurfaceCoverage_Substitution">
      <gml:MultiSurfaceCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MultiSolidCoverage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MultiSolidCoverage"/>
         <xsl:call-template name="gml:DiscreteCoverageType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MultiSolidCoverage_Substitution">
      <gml:MultiSolidCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GridCoverage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GridCoverage"/>
         <xsl:call-template name="gml:DiscreteCoverageType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GridCoverage_Substitution">
      <gml:GridCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:RectifiedGridCoverage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:RectifiedGridCoverage"/>
         <xsl:call-template name="gml:DiscreteCoverageType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:RectifiedGridCoverage_Substitution">
      <gml:RectifiedGridCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractDatum"/>
         <xsl:call-template name="gml:AbstractDatumType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractDatum_Substitution">
      <gml:AbstractDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:anchorDefinition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:anchorDefinition"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:anchorDefinition_Substitution">
      <gml:anchorDefinition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GeodeticDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GeodeticDatum"/>
         <xsl:call-template name="gml:GeodeticDatumType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GeodeticDatum_Substitution">
      <gml:GeodeticDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:primeMeridian">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:primeMeridian"/>
         <xsl:call-template name="gml:PrimeMeridianPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:primeMeridian_Substitution">
      <gml:primeMeridian xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ellipsoid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ellipsoid"/>
         <xsl:call-template name="gml:EllipsoidPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ellipsoid_Substitution">
      <gml:ellipsoid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Ellipsoid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Ellipsoid"/>
         <xsl:call-template name="gml:EllipsoidType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Ellipsoid_Substitution">
      <gml:Ellipsoid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:semiMajorAxis">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:semiMajorAxis"/>
         <xsl:call-template name="gml:MeasureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:semiMajorAxis_Substitution">
      <gml:semiMajorAxis xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:secondDefiningParameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:secondDefiningParameter"/>
         <xsl:call-template name="_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:secondDefiningParameter_Substitution">
      <gml:secondDefiningParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:SecondDefiningParameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:SecondDefiningParameter"/>
         <xsl:call-template name="_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:SecondDefiningParameter_Substitution">
      <gml:SecondDefiningParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:PrimeMeridian">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:PrimeMeridian"/>
         <xsl:call-template name="gml:PrimeMeridianType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:PrimeMeridian_Substitution">
      <gml:PrimeMeridian xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:greenwichLongitude">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:greenwichLongitude"/>
         <xsl:call-template name="gml:AngleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:greenwichLongitude_Substitution">
      <gml:greenwichLongitude xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:EngineeringDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:EngineeringDatum"/>
         <xsl:call-template name="gml:EngineeringDatumType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:EngineeringDatum_Substitution">
      <gml:EngineeringDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ImageDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ImageDatum"/>
         <xsl:call-template name="gml:ImageDatumType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ImageDatum_Substitution">
      <gml:ImageDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:pixelInCell">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:pixelInCell"/>
         <xsl:call-template name="gml:CodeWithAuthorityType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:pixelInCell_Substitution">
      <gml:pixelInCell xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:VerticalDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:VerticalDatum"/>
         <xsl:call-template name="gml:VerticalDatumType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:VerticalDatum_Substitution">
      <gml:VerticalDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TemporalDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TemporalDatum"/>
         <xsl:call-template name="gml:TemporalDatumType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TemporalDatum_Substitution">
      <gml:TemporalDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:defaultStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:defaultStyle"/>
         <xsl:call-template name="gml:DefaultStylePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:defaultStyle_Substitution">
      <gml:defaultStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractStyle"/>
         <xsl:call-template name="gml:AbstractStyleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractStyle_Substitution">
      <gml:AbstractStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Style">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Style"/>
         <xsl:call-template name="gml:StyleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Style_Substitution">
      <gml:Style xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:featureStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:featureStyle"/>
         <xsl:call-template name="gml:FeatureStylePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:featureStyle_Substitution">
      <gml:featureStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:FeatureStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:FeatureStyle"/>
         <xsl:call-template name="gml:FeatureStyleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:FeatureStyle_Substitution">
      <gml:FeatureStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:geometryStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:geometryStyle"/>
         <xsl:call-template name="gml:GeometryStylePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:geometryStyle_Substitution">
      <gml:geometryStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GeometryStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GeometryStyle"/>
         <xsl:call-template name="gml:GeometryStyleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GeometryStyle_Substitution">
      <gml:GeometryStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:topologyStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:topologyStyle"/>
         <xsl:call-template name="gml:TopologyStylePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:topologyStyle_Substitution">
      <gml:topologyStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TopologyStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TopologyStyle"/>
         <xsl:call-template name="gml:TopologyStyleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TopologyStyle_Substitution">
      <gml:TopologyStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:labelStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:labelStyle"/>
         <xsl:call-template name="gml:LabelStylePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:labelStyle_Substitution">
      <gml:labelStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:LabelStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:LabelStyle"/>
         <xsl:call-template name="gml:LabelStyleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:LabelStyle_Substitution">
      <gml:LabelStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:graphStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:graphStyle"/>
         <xsl:call-template name="gml:GraphStylePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:graphStyle_Substitution">
      <gml:graphStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GraphStyle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GraphStyle"/>
         <xsl:call-template name="gml:GraphStyleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GraphStyle_Substitution">
      <gml:GraphStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:symbol">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:symbol"/>
         <xsl:call-template name="gml:SymbolType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:symbol_Substitution">
      <gml:symbol xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Null_Substitution">
      <xsl:call-template name="gml:NilReasonType_Template"/>
   </xsl:template>
   <xsl:template match="//gml:anchorPoint">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:anchorPoint"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:anchorPoint_Substitution">
      <gml:anchorPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:datumRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:datumRef"/>
         <xsl:call-template name="gml:DatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:datumRef_Substitution">
      <gml:datumRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesPrimeMeridian">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesPrimeMeridian"/>
         <xsl:call-template name="gml:PrimeMeridianPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesPrimeMeridian_Substitution">
      <gml:usesPrimeMeridian xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesEllipsoid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesEllipsoid"/>
         <xsl:call-template name="gml:EllipsoidPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesEllipsoid_Substitution">
      <gml:usesEllipsoid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:geodeticDatumRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:geodeticDatumRef"/>
         <xsl:call-template name="gml:GeodeticDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:geodeticDatumRef_Substitution">
      <gml:geodeticDatumRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ellipsoidRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ellipsoidRef"/>
         <xsl:call-template name="gml:EllipsoidPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ellipsoidRef_Substitution">
      <gml:ellipsoidRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:primeMeridianRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:primeMeridianRef"/>
         <xsl:call-template name="gml:PrimeMeridianPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:primeMeridianRef_Substitution">
      <gml:primeMeridianRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:engineeringDatumRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:engineeringDatumRef"/>
         <xsl:call-template name="gml:EngineeringDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:engineeringDatumRef_Substitution">
      <gml:engineeringDatumRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:imageDatumRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:imageDatumRef"/>
         <xsl:call-template name="gml:ImageDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:imageDatumRef_Substitution">
      <gml:imageDatumRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:verticalDatumRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:verticalDatumRef"/>
         <xsl:call-template name="gml:VerticalDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:verticalDatumRef_Substitution">
      <gml:verticalDatumRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:temporalDatumRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:temporalDatumRef"/>
         <xsl:call-template name="gml:TemporalDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:temporalDatumRef_Substitution">
      <gml:temporalDatumRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:coordinateOperationRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:coordinateOperationRef"/>
         <xsl:call-template name="gml:CoordinateOperationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:coordinateOperationRef_Substitution">
      <gml:coordinateOperationRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:singleOperationRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:singleOperationRef"/>
         <xsl:call-template name="gml:SingleOperationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:singleOperationRef_Substitution">
      <gml:singleOperationRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractOperation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractOperation"/>
         <xsl:call-template name="gml:AbstractCoordinateOperationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractOperation_Substitution">
      <gml:AbstractOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:operationRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:operationRef"/>
         <xsl:call-template name="gml:OperationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:operationRef_Substitution">
      <gml:operationRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:generalConversionRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:generalConversionRef"/>
         <xsl:call-template name="gml:GeneralConversionPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:generalConversionRef_Substitution">
      <gml:generalConversionRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:generalTransformationRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:generalTransformationRef"/>
         <xsl:call-template name="gml:GeneralTransformationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:generalTransformationRef_Substitution">
      <gml:generalTransformationRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesSingleOperation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesSingleOperation"/>
         <xsl:call-template name="gml:CoordinateOperationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesSingleOperation_Substitution">
      <gml:usesSingleOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:concatenatedOperationRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:concatenatedOperationRef"/>
         <xsl:call-template name="gml:ConcatenatedOperationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:concatenatedOperationRef_Substitution">
      <gml:concatenatedOperationRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesOperation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesOperation"/>
         <xsl:call-template name="gml:CoordinateOperationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesOperation_Substitution">
      <gml:usesOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:passThroughOperationRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:passThroughOperationRef"/>
         <xsl:call-template name="gml:PassThroughOperationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:passThroughOperationRef_Substitution">
      <gml:passThroughOperationRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesMethod">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesMethod"/>
         <xsl:call-template name="gml:OperationMethodPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesMethod_Substitution">
      <gml:usesMethod xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesValue">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesValue"/>
         <xsl:call-template name="gml:AbstractGeneralParameterValuePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesValue_Substitution">
      <gml:usesValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:conversionRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:conversionRef"/>
         <xsl:call-template name="gml:ConversionPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:conversionRef_Substitution">
      <gml:conversionRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:transformationRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:transformationRef"/>
         <xsl:call-template name="gml:TransformationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:transformationRef_Substitution">
      <gml:transformationRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:dmsAngleValue">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:dmsAngleValue"/>
         <xsl:call-template name="gml:DMSAngleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:dmsAngleValue_Substitution">
      <gml:dmsAngleValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:valueOfParameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:valueOfParameter"/>
         <xsl:call-template name="gml:OperationParameterPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:valueOfParameter_Substitution">
      <gml:valueOfParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:includesValue">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:includesValue"/>
         <xsl:call-template name="gml:AbstractGeneralParameterValuePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:includesValue_Substitution">
      <gml:includesValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:valuesOfGroup">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:valuesOfGroup"/>
         <xsl:call-template name="gml:OperationParameterGroupPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:valuesOfGroup_Substitution">
      <gml:valuesOfGroup xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:methodFormula">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:methodFormula"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:methodFormula_Substitution">
      <gml:methodFormula xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesParameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesParameter"/>
         <xsl:call-template name="gml:AbstractGeneralOperationParameterPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesParameter_Substitution">
      <gml:usesParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:operationMethodRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:operationMethodRef"/>
         <xsl:call-template name="gml:OperationMethodPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:operationMethodRef_Substitution">
      <gml:operationMethodRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:abstractGeneralOperationParameterRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:abstractGeneralOperationParameterRef"/>
         <xsl:call-template name="gml:AbstractGeneralOperationParameterPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:abstractGeneralOperationParameterRef_Substitution">
      <gml:abstractGeneralOperationParameterRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:operationParameterRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:operationParameterRef"/>
         <xsl:call-template name="gml:OperationParameterPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:operationParameterRef_Substitution">
      <gml:operationParameterRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:includesParameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:includesParameter"/>
         <xsl:call-template name="gml:AbstractGeneralOperationParameterPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:includesParameter_Substitution">
      <gml:includesParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:operationParameterGroupRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:operationParameterGroupRef"/>
         <xsl:call-template name="gml:OperationParameterPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:operationParameterGroupRef_Substitution">
      <gml:operationParameterGroupRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:referenceSystemRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:referenceSystemRef"/>
         <xsl:call-template name="gml:CRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:referenceSystemRef_Substitution">
      <gml:referenceSystemRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:crsRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:crsRef"/>
         <xsl:call-template name="gml:CRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:crsRef_Substitution">
      <gml:crsRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:coordinateSystemAxisRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:coordinateSystemAxisRef"/>
         <xsl:call-template name="gml:CoordinateSystemAxisPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:coordinateSystemAxisRef_Substitution">
      <gml:coordinateSystemAxisRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesAxis">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesAxis"/>
         <xsl:call-template name="gml:CoordinateSystemAxisPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesAxis_Substitution">
      <gml:usesAxis xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:coordinateSystemRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:coordinateSystemRef"/>
         <xsl:call-template name="gml:CoordinateSystemPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:coordinateSystemRef_Substitution">
      <gml:coordinateSystemRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ellipsoidalCSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ellipsoidalCSRef"/>
         <xsl:call-template name="gml:EllipsoidalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ellipsoidalCSRef_Substitution">
      <gml:ellipsoidalCSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:cartesianCSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:cartesianCSRef"/>
         <xsl:call-template name="gml:CartesianCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:cartesianCSRef_Substitution">
      <gml:cartesianCSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:verticalCSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:verticalCSRef"/>
         <xsl:call-template name="gml:VerticalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:verticalCSRef_Substitution">
      <gml:verticalCSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TemporalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TemporalCS"/>
         <xsl:call-template name="gml:TemporalCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TemporalCS_Substitution">
      <gml:TemporalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:temporalCSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:temporalCSRef"/>
         <xsl:call-template name="gml:TemporalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:temporalCSRef_Substitution">
      <gml:temporalCSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:linearCSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:linearCSRef"/>
         <xsl:call-template name="gml:LinearCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:linearCSRef_Substitution">
      <gml:linearCSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:userDefinedCSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:userDefinedCSRef"/>
         <xsl:call-template name="gml:UserDefinedCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:userDefinedCSRef_Substitution">
      <gml:userDefinedCSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:sphericalCSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:sphericalCSRef"/>
         <xsl:call-template name="gml:SphericalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:sphericalCSRef_Substitution">
      <gml:sphericalCSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:polarCSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:polarCSRef"/>
         <xsl:call-template name="gml:PolarCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:polarCSRef_Substitution">
      <gml:polarCSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:cylindricalCSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:cylindricalCSRef"/>
         <xsl:call-template name="gml:CylindricalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:cylindricalCSRef_Substitution">
      <gml:cylindricalCSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ObliqueCartesianCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ObliqueCartesianCS"/>
         <xsl:call-template name="gml:ObliqueCartesianCSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ObliqueCartesianCS_Substitution">
      <gml:ObliqueCartesianCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:obliqueCartesianCSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:obliqueCartesianCSRef"/>
         <xsl:call-template name="gml:ObliqueCartesianCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:obliqueCartesianCSRef_Substitution">
      <gml:obliqueCartesianCSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:singleCRSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:singleCRSRef"/>
         <xsl:call-template name="gml:SingleCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:singleCRSRef_Substitution">
      <gml:singleCRSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:definedByConversion">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:definedByConversion"/>
         <xsl:call-template name="gml:GeneralConversionPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:definedByConversion_Substitution">
      <gml:definedByConversion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:includesSingleCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:includesSingleCRS"/>
         <xsl:call-template name="gml:SingleCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:includesSingleCRS_Substitution">
      <gml:includesSingleCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:compoundCRSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:compoundCRSRef"/>
         <xsl:call-template name="gml:CompoundCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:compoundCRSRef_Substitution">
      <gml:compoundCRSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesEllipsoidalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesEllipsoidalCS"/>
         <xsl:call-template name="gml:EllipsoidalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesEllipsoidalCS_Substitution">
      <gml:usesEllipsoidalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesCartesianCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesCartesianCS"/>
         <xsl:call-template name="gml:CartesianCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesCartesianCS_Substitution">
      <gml:usesCartesianCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesSphericalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesSphericalCS"/>
         <xsl:call-template name="gml:SphericalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesSphericalCS_Substitution">
      <gml:usesSphericalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesGeodeticDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesGeodeticDatum"/>
         <xsl:call-template name="gml:GeodeticDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesGeodeticDatum_Substitution">
      <gml:usesGeodeticDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesVerticalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesVerticalCS"/>
         <xsl:call-template name="gml:VerticalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesVerticalCS_Substitution">
      <gml:usesVerticalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesVerticalDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesVerticalDatum"/>
         <xsl:call-template name="gml:VerticalDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesVerticalDatum_Substitution">
      <gml:usesVerticalDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:verticalCRSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:verticalCRSRef"/>
         <xsl:call-template name="gml:VerticalCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:verticalCRSRef_Substitution">
      <gml:verticalCRSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:baseGeographicCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:baseGeographicCRS"/>
         <xsl:call-template name="gml:GeographicCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:baseGeographicCRS_Substitution">
      <gml:baseGeographicCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:projectedCRSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:projectedCRSRef"/>
         <xsl:call-template name="gml:ProjectedCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:projectedCRSRef_Substitution">
      <gml:projectedCRSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesCS"/>
         <xsl:call-template name="gml:CoordinateSystemPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesCS_Substitution">
      <gml:usesCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:derivedCRSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:derivedCRSRef"/>
         <xsl:call-template name="gml:DerivedCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:derivedCRSRef_Substitution">
      <gml:derivedCRSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesEngineeringDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesEngineeringDatum"/>
         <xsl:call-template name="gml:EngineeringDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesEngineeringDatum_Substitution">
      <gml:usesEngineeringDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:engineeringCRSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:engineeringCRSRef"/>
         <xsl:call-template name="gml:EngineeringCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:engineeringCRSRef_Substitution">
      <gml:engineeringCRSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesAffineCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesAffineCS"/>
         <xsl:call-template name="gml:AffineCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesAffineCS_Substitution">
      <gml:usesAffineCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesImageDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesImageDatum"/>
         <xsl:call-template name="gml:ImageDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesImageDatum_Substitution">
      <gml:usesImageDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesObliqueCartesianCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesObliqueCartesianCS"/>
         <xsl:call-template name="gml:ObliqueCartesianCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesObliqueCartesianCS_Substitution">
      <gml:usesObliqueCartesianCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:imageCRSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:imageCRSRef"/>
         <xsl:call-template name="gml:ImageCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:imageCRSRef_Substitution">
      <gml:imageCRSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesTimeCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesTimeCS"/>
         <xsl:call-template name="gml:TimeCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesTimeCS_Substitution">
      <gml:usesTimeCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesTemporalCS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesTemporalCS"/>
         <xsl:call-template name="gml:TemporalCSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesTemporalCS_Substitution">
      <gml:usesTemporalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:usesTemporalDatum">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:usesTemporalDatum"/>
         <xsl:call-template name="gml:TemporalDatumPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:usesTemporalDatum_Substitution">
      <gml:usesTemporalDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:temporalCRSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:temporalCRSRef"/>
         <xsl:call-template name="gml:TemporalCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:temporalCRSRef_Substitution">
      <gml:temporalCRSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GeographicCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GeographicCRS"/>
         <xsl:call-template name="gml:GeographicCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GeographicCRS_Substitution">
      <gml:GeographicCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:geographicCRSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:geographicCRSRef"/>
         <xsl:call-template name="gml:GeographicCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:geographicCRSRef_Substitution">
      <gml:geographicCRSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GeocentricCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GeocentricCRS"/>
         <xsl:call-template name="gml:GeocentricCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GeocentricCRS_Substitution">
      <gml:GeocentricCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:geocentricCRSRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:geocentricCRSRef"/>
         <xsl:call-template name="gml:GeocentricCRSPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:geocentricCRSRef_Substitution">
      <gml:geocentricCRSRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:dmsAngle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:dmsAngle"/>
         <xsl:call-template name="gml:DMSAngleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:dmsAngle_Substitution">
      <gml:dmsAngle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:degrees">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:degrees"/>
         <xsl:call-template name="gml:DegreesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:degrees_Substitution">
      <gml:degrees xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:decimalMinutes_Substitution">
      <xsl:call-template name="gml:DecimalMinutesType_Template"/>
   </xsl:template>
   <xsl:template name="gml:minutes_Substitution">
      <xsl:call-template name="gml:ArcMinutesType_Template"/>
   </xsl:template>
   <xsl:template name="gml:seconds_Substitution">
      <xsl:call-template name="gml:ArcSecondsType_Template"/>
   </xsl:template>
   <xsl:template match="//gml:member">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:member"/>
         <xsl:call-template name="gml:AssociationRoleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:member_Substitution">
      <gml:member xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:members">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:members"/>
         <xsl:call-template name="gml:ArrayAssociationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:members_Substitution">
      <gml:members xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:metaDataProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:metaDataProperty"/>
         <xsl:call-template name="gml:MetaDataPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:metaDataProperty_Substitution">
      <gml:metaDataProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Bag">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Bag"/>
         <xsl:call-template name="gml:BagType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Bag_Substitution">
      <gml:Bag xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Array">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Array"/>
         <xsl:call-template name="gml:ArrayType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Array_Substitution">
      <gml:Array xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractMetaData">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractMetaData"/>
         <xsl:call-template name="gml:AbstractMetaDataType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractMetaData_Substitution">
      <gml:AbstractMetaData xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GenericMetaData">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GenericMetaData"/>
         <xsl:call-template name="gml:GenericMetaDataType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GenericMetaData_Substitution">
      <gml:GenericMetaData xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:coordinates">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:coordinates"/>
         <xsl:call-template name="gml:CoordinatesType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:coordinates_Substitution">
      <gml:coordinates xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:pointRep">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:pointRep"/>
         <xsl:call-template name="gml:PointPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:pointRep_Substitution">
      <gml:pointRep xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:location">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:location"/>
         <xsl:call-template name="gml:LocationPropertyType_Template"/>
      </owl:NamedIndividual>
   <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:DirectPositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:location"/>
         <xsl:call-template name="gml:DirectPositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:location_Substitution">
      <gml:location xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:LocationString">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:LocationString"/>
         <xsl:call-template name="gml:StringOrRefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:LocationString_Substitution">
      <gml:LocationString xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:LocationKeyWord">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:LocationKeyWord"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:LocationKeyWord_Substitution">
      <gml:LocationKeyWord xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:priorityLocation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:priorityLocation"/>
         <xsl:call-template name="gml:PriorityLocationPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:priorityLocation_Substitution">
      <gml:priorityLocation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:featureMember">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:featureMember"/>
         <xsl:call-template name="gml:FeaturePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:featureMember_Substitution">
      <gml:featureMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:featureProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:featureProperty"/>
         <xsl:call-template name="gml:FeaturePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:featureProperty_Substitution">
      <gml:featureProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:featureMembers">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:featureMembers"/>
         <xsl:call-template name="gml:FeatureArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:featureMembers_Substitution">
      <gml:featureMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractFeatureCollection">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractFeatureCollection"/>
         <xsl:call-template name="gml:AbstractFeatureCollectionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractFeatureCollection_Substitution">
      <gml:AbstractFeatureCollection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:FeatureCollection">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:FeatureCollection"/>
         <xsl:call-template name="gml:FeatureCollectionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:FeatureCollection_Substitution">
      <gml:FeatureCollection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:track">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:track"/>
         <xsl:call-template name="gml:HistoryPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:track_Substitution">
      <gml:track xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DefinitionCollection">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DefinitionCollection"/>
         <xsl:call-template name="gml:DictionaryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:DefinitionCollection_Substitution">
      <gml:DefinitionCollection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:definitionMember">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:definitionMember"/>
         <xsl:call-template name="gml:DictionaryEntryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:definitionMember_Substitution">
      <gml:definitionMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:indirectEntry">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:indirectEntry"/>
         <xsl:call-template name="gml:IndirectEntryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:indirectEntry_Substitution">
      <gml:indirectEntry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DefinitionProxy">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DefinitionProxy"/>
         <xsl:call-template name="gml:DefinitionProxyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:DefinitionProxy_Substitution">
      <gml:DefinitionProxy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:definitionRef">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:definitionRef"/>
         <xsl:call-template name="gml:ReferenceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:definitionRef_Substitution">
      <gml:definitionRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MappingRule">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MappingRule"/>
         <xsl:call-template name="gml:StringOrRefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MappingRule_Substitution">
      <gml:MappingRule xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:centerOf">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:centerOf"/>
         <xsl:call-template name="gml:PointPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:centerOf_Substitution">
      <gml:centerOf xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:position">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:position"/>
         <xsl:call-template name="gml:PointPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:position_Substitution">
      <gml:position xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:extentOf">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:extentOf"/>
         <xsl:call-template name="gml:SurfacePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:extentOf_Substitution">
      <gml:extentOf xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:edgeOf">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:edgeOf"/>
         <xsl:call-template name="gml:CurvePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:edgeOf_Substitution">
      <gml:edgeOf xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:centerLineOf">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:centerLineOf"/>
         <xsl:call-template name="gml:CurvePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:centerLineOf_Substitution">
      <gml:centerLineOf xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiLocation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiLocation"/>
         <xsl:call-template name="gml:MultiPointPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiLocation_Substitution">
      <gml:multiLocation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiCenterOf">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiCenterOf"/>
         <xsl:call-template name="gml:MultiPointPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiCenterOf_Substitution">
      <gml:multiCenterOf xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiPosition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiPosition"/>
         <xsl:call-template name="gml:MultiPointPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiPosition_Substitution">
      <gml:multiPosition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiCenterLineOf">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiCenterLineOf"/>
         <xsl:call-template name="gml:MultiCurvePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiCenterLineOf_Substitution">
      <gml:multiCenterLineOf xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiEdgeOf">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiEdgeOf"/>
         <xsl:call-template name="gml:MultiCurvePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiEdgeOf_Substitution">
      <gml:multiEdgeOf xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiCoverage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiCoverage"/>
         <xsl:call-template name="gml:MultiSurfacePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiCoverage_Substitution">
      <gml:multiCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiExtentOf">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiExtentOf"/>
         <xsl:call-template name="gml:MultiSurfacePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiExtentOf_Substitution">
      <gml:multiExtentOf xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:polygonPatches">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:polygonPatches"/>
         <xsl:call-template name="gml:SurfacePatchArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:polygonPatches_Substitution">
      <gml:polygonPatches xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:trianglePatches">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:trianglePatches"/>
         <xsl:call-template name="gml:SurfacePatchArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:trianglePatches_Substitution">
      <gml:trianglePatches xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiPointDomain">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiPointDomain"/>
         <xsl:call-template name="gml:DomainSetType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiPointDomain_Substitution">
      <gml:multiPointDomain xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiCurveDomain">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiCurveDomain"/>
         <xsl:call-template name="gml:DomainSetType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiCurveDomain_Substitution">
      <gml:multiCurveDomain xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiSurfaceDomain">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiSurfaceDomain"/>
         <xsl:call-template name="gml:DomainSetType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiSurfaceDomain_Substitution">
      <gml:multiSurfaceDomain xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiSolidDomain">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiSolidDomain"/>
         <xsl:call-template name="gml:DomainSetType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiSolidDomain_Substitution">
      <gml:multiSolidDomain xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:gridDomain">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:gridDomain"/>
         <xsl:call-template name="gml:DomainSetType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:gridDomain_Substitution">
      <gml:gridDomain xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:rectifiedGridDomain">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:rectifiedGridDomain"/>
         <xsl:call-template name="gml:DomainSetType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:rectifiedGridDomain_Substitution">
      <gml:rectifiedGridDomain xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:generalOperationParameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:generalOperationParameter"/>
         <xsl:call-template name="gml:AbstractGeneralOperationParameterPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:generalOperationParameter_Substitution">
      <gml:generalOperationParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MovingObjectStatus">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MovingObjectStatus"/>
         <xsl:call-template name="gml:MovingObjectStatusType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MovingObjectStatus_Substitution">
      <gml:MovingObjectStatus xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:status">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:status"/>
         <xsl:call-template name="gml:StringOrRefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:status_Substitution">
      <gml:status xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:statusReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:statusReference"/>
         <xsl:call-template name="gml:ReferenceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:statusReference_Substitution">
      <gml:statusReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:topoComplexProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:topoComplexProperty"/>
         <xsl:call-template name="gml:TopoComplexPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:topoComplexProperty_Substitution">
      <gml:topoComplexProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiPointProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiPointProperty"/>
         <xsl:call-template name="gml:MultiPointPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiPointProperty_Substitution">
      <gml:multiPointProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiCurveProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiCurveProperty"/>
         <xsl:call-template name="gml:MultiCurvePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiCurveProperty_Substitution">
      <gml:multiCurveProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiSurfaceProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiSurfaceProperty"/>
         <xsl:call-template name="gml:MultiSurfacePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiSurfaceProperty_Substitution">
      <gml:multiSurfaceProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiSolidProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiSolidProperty"/>
         <xsl:call-template name="gml:MultiSolidPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiSolidProperty_Substitution">
      <gml:multiSolidProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:multiGeometryProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:multiGeometryProperty"/>
         <xsl:call-template name="gml:MultiGeometryPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:multiGeometryProperty_Substitution">
      <gml:multiGeometryProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:pointArrayProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:pointArrayProperty"/>
         <xsl:call-template name="gml:PointArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:pointArrayProperty_Substitution">
      <gml:pointArrayProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:curveArrayProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:curveArrayProperty"/>
         <xsl:call-template name="gml:CurveArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:curveArrayProperty_Substitution">
      <gml:curveArrayProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:surfaceArrayProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:surfaceArrayProperty"/>
         <xsl:call-template name="gml:SurfaceArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:surfaceArrayProperty_Substitution">
      <gml:surfaceArrayProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:solidArrayProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:solidArrayProperty"/>
         <xsl:call-template name="gml:SolidArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:solidArrayProperty_Substitution">
      <gml:solidArrayProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Definition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Definition"/>
         <xsl:call-template name="gml:DefinitionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Definition_Substitution">
      <gml:Definition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Dictionary">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Dictionary"/>
         <xsl:call-template name="gml:DictionaryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Dictionary_Substitution">
      <gml:Dictionary xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:dictionaryEntry">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:dictionaryEntry"/>
         <xsl:call-template name="gml:DictionaryEntryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:dictionaryEntry_Substitution">
      <gml:dictionaryEntry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:direction">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:direction"/>
         <xsl:call-template name="gml:DirectionPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:direction_Substitution">
      <gml:direction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:dataSource">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:dataSource"/>
         <xsl:call-template name="gml:StringOrRefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:dataSource_Substitution">
      <gml:dataSource xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:dataSourceReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:dataSourceReference"/>
         <xsl:call-template name="gml:ReferenceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:dataSourceReference_Substitution">
      <gml:dataSourceReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DynamicFeature">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DynamicFeature"/>
         <xsl:call-template name="gml:DynamicFeatureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:DynamicFeature_Substitution">
      <gml:DynamicFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DynamicFeatureCollection">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DynamicFeatureCollection"/>
         <xsl:call-template name="gml:DynamicFeatureCollectionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:DynamicFeatureCollection_Substitution">
      <gml:DynamicFeatureCollection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:dynamicMembers">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:dynamicMembers"/>
         <xsl:call-template name="gml:DynamicFeatureMemberType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:dynamicMembers_Substitution">
      <gml:dynamicMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractTimeSlice">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractTimeSlice"/>
         <xsl:call-template name="gml:AbstractTimeSliceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeSlice_Substitution">
      <gml:AbstractTimeSlice xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:history">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:history"/>
         <xsl:call-template name="gml:HistoryPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:history_Substitution">
      <gml:history xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractFeature">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractFeature"/>
         <xsl:call-template name="gml:AbstractFeatureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractFeature_Substitution">
      <gml:AbstractFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:boundedBy">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:boundedBy"/>
         <xsl:call-template name="gml:BoundingShapeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:boundedBy_Substitution">
      <gml:boundedBy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:EnvelopeWithTimePeriod">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:EnvelopeWithTimePeriod"/>
         <xsl:call-template name="gml:EnvelopeWithTimePeriodType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:EnvelopeWithTimePeriod_Substitution">
      <gml:EnvelopeWithTimePeriod xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:locationName">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:locationName"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:locationName_Substitution">
      <gml:locationName xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:locationReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:locationReference"/>
         <xsl:call-template name="gml:ReferenceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:locationReference_Substitution">
      <gml:locationReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractGeometricAggregate">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractGeometricAggregate"/>
         <xsl:call-template name="gml:AbstractGeometricAggregateType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractGeometricAggregate_Substitution">
      <gml:AbstractGeometricAggregate xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MultiGeometry">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MultiGeometry"/>
         <xsl:call-template name="gml:MultiGeometryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MultiGeometry_Substitution">
      <gml:MultiGeometry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:geometryMember">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:geometryMember"/>
         <xsl:call-template name="gml:GeometryPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:geometryMember_Substitution">
      <gml:geometryMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:geometryMembers">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:geometryMembers"/>
         <xsl:call-template name="gml:GeometryArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:geometryMembers_Substitution">
      <gml:geometryMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MultiPoint">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MultiPoint"/>
         <xsl:call-template name="gml:MultiPointType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MultiPoint_Substitution">
      <gml:MultiPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:pointMember">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:pointMember"/>
         <xsl:call-template name="gml:PointPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:pointMember_Substitution">
      <gml:pointMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:pointMembers">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:pointMembers"/>
         <xsl:call-template name="gml:PointArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:pointMembers_Substitution">
      <gml:pointMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MultiCurve">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MultiCurve"/>
         <xsl:call-template name="gml:MultiCurveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MultiCurve_Substitution">
      <gml:MultiCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:curveMembers">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:curveMembers"/>
         <xsl:call-template name="gml:CurveArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:curveMembers_Substitution">
      <gml:curveMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MultiSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MultiSurface"/>
         <xsl:call-template name="gml:MultiSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MultiSurface_Substitution">
      <gml:MultiSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:surfaceMembers">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:surfaceMembers"/>
         <xsl:call-template name="gml:SurfaceArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:surfaceMembers_Substitution">
      <gml:surfaceMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:MultiSolid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:MultiSolid"/>
         <xsl:call-template name="gml:MultiSolidType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:MultiSolid_Substitution">
      <gml:MultiSolid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:solidMember">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:solidMember"/>
         <xsl:call-template name="gml:SolidPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:solidMember_Substitution">
      <gml:solidMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:solidMembers">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:solidMembers"/>
         <xsl:call-template name="gml:SolidArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:solidMembers_Substitution">
      <gml:solidMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractGeometry">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractGeometry"/>
         <xsl:call-template name="gml:AbstractGeometryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractGeometry_Substitution">
      <gml:AbstractGeometry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:pos">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:pos"/>
         <xsl:call-template name="gml:DirectPositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:pos_Substitution">
      <gml:pos xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:posList">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:posList"/>
         <xsl:call-template name="gml:DirectPositionListType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:posList_Substitution">
      <gml:posList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:vector">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:vector"/>
         <xsl:call-template name="gml:VectorType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:vector_Substitution">
      <gml:vector xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Envelope">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Envelope"/>
         <xsl:call-template name="gml:EnvelopeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Envelope_Substitution">
      <gml:Envelope xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractGeometricPrimitive">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractGeometricPrimitive"/>
         <xsl:call-template name="gml:AbstractGeometricPrimitiveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractGeometricPrimitive_Substitution">
      <gml:AbstractGeometricPrimitive xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Point">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Point"/>
         <xsl:call-template name="gml:PointType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Point_Substitution">
      <gml:Point xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:pointProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:pointProperty"/>
         <xsl:call-template name="gml:PointPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:pointProperty_Substitution">
      <gml:pointProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractCurve">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractCurve"/>
         <xsl:call-template name="gml:AbstractCurveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractCurve_Substitution">
      <gml:AbstractCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:curveProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:curveProperty"/>
         <xsl:call-template name="gml:CurvePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:curveProperty_Substitution">
      <gml:curveProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:LineString">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:LineString"/>
         <xsl:call-template name="gml:LineStringType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:LineString_Substitution">
      <gml:LineString xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractSurface"/>
         <xsl:call-template name="gml:AbstractSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractSurface_Substitution">
      <gml:AbstractSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:surfaceProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:surfaceProperty"/>
         <xsl:call-template name="gml:SurfacePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:surfaceProperty_Substitution">
      <gml:surfaceProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Polygon">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Polygon"/>
         <xsl:call-template name="gml:PolygonType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Polygon_Substitution">
      <gml:Polygon xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:exterior">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:exterior"/>
         <xsl:call-template name="gml:AbstractRingPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:exterior_Substitution">
      <gml:exterior xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:interior">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:interior"/>
         <xsl:call-template name="gml:AbstractRingPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:interior_Substitution">
      <gml:interior xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractRing">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractRing"/>
         <xsl:call-template name="gml:AbstractRingType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractRing_Substitution">
      <gml:AbstractRing xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:LinearRing">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:LinearRing"/>
         <xsl:call-template name="gml:LinearRingType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:LinearRing_Substitution">
      <gml:LinearRing xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GeometricComplex">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GeometricComplex"/>
         <xsl:call-template name="gml:GeometricComplexType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GeometricComplex_Substitution">
      <gml:GeometricComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CompositeCurve">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CompositeCurve"/>
         <xsl:call-template name="gml:CompositeCurveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CompositeCurve_Substitution">
      <gml:CompositeCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CompositeSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CompositeSurface"/>
         <xsl:call-template name="gml:CompositeSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CompositeSurface_Substitution">
      <gml:CompositeSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CompositeSolid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CompositeSolid"/>
         <xsl:call-template name="gml:CompositeSolidType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CompositeSolid_Substitution">
      <gml:CompositeSolid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Curve">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Curve"/>
         <xsl:call-template name="gml:CurveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Curve_Substitution">
      <gml:Curve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:baseCurve">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:baseCurve"/>
         <xsl:call-template name="gml:CurvePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:baseCurve_Substitution">
      <gml:baseCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:OrientableCurve">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:OrientableCurve"/>
         <xsl:call-template name="gml:OrientableCurveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:OrientableCurve_Substitution">
      <gml:OrientableCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractCurveSegment">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractCurveSegment"/>
         <xsl:call-template name="gml:AbstractCurveSegmentType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractCurveSegment_Substitution">
      <gml:AbstractCurveSegment xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:segments">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:segments"/>
         <xsl:call-template name="gml:CurveSegmentArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:segments_Substitution">
      <gml:segments xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:LineStringSegment">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:LineStringSegment"/>
         <xsl:call-template name="gml:LineStringSegmentType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:LineStringSegment_Substitution">
      <gml:LineStringSegment xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ArcString">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ArcString"/>
         <xsl:call-template name="gml:ArcStringType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ArcString_Substitution">
      <gml:ArcString xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Arc">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Arc"/>
         <xsl:call-template name="gml:ArcType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Arc_Substitution">
      <gml:Arc xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Circle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Circle"/>
         <xsl:call-template name="gml:CircleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Circle_Substitution">
      <gml:Circle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ArcStringByBulge">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ArcStringByBulge"/>
         <xsl:call-template name="gml:ArcStringByBulgeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ArcStringByBulge_Substitution">
      <gml:ArcStringByBulge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ArcByBulge">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ArcByBulge"/>
         <xsl:call-template name="gml:ArcByBulgeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ArcByBulge_Substitution">
      <gml:ArcByBulge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ArcByCenterPoint">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ArcByCenterPoint"/>
         <xsl:call-template name="gml:ArcByCenterPointType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ArcByCenterPoint_Substitution">
      <gml:ArcByCenterPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CircleByCenterPoint">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CircleByCenterPoint"/>
         <xsl:call-template name="gml:CircleByCenterPointType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CircleByCenterPoint_Substitution">
      <gml:CircleByCenterPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CubicSpline">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CubicSpline"/>
         <xsl:call-template name="gml:CubicSplineType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CubicSpline_Substitution">
      <gml:CubicSpline xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:BSpline">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:BSpline"/>
         <xsl:call-template name="gml:BSplineType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:BSpline_Substitution">
      <gml:BSpline xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Bezier">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Bezier"/>
         <xsl:call-template name="gml:BezierType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Bezier_Substitution">
      <gml:Bezier xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:OffsetCurve">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:OffsetCurve"/>
         <xsl:call-template name="gml:OffsetCurveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:OffsetCurve_Substitution">
      <gml:OffsetCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AffinePlacement">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AffinePlacement"/>
         <xsl:call-template name="gml:AffinePlacementType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AffinePlacement_Substitution">
      <gml:AffinePlacement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Clothoid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Clothoid"/>
         <xsl:call-template name="gml:ClothoidType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Clothoid_Substitution">
      <gml:Clothoid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:GeodesicString">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:GeodesicString"/>
         <xsl:call-template name="gml:GeodesicStringType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:GeodesicString_Substitution">
      <gml:GeodesicString xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Geodesic">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Geodesic"/>
         <xsl:call-template name="gml:GeodesicType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Geodesic_Substitution">
      <gml:Geodesic xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Surface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Surface"/>
         <xsl:call-template name="gml:SurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Surface_Substitution">
      <gml:Surface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:baseSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:baseSurface"/>
         <xsl:call-template name="gml:SurfacePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:baseSurface_Substitution">
      <gml:baseSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:OrientableSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:OrientableSurface"/>
         <xsl:call-template name="gml:OrientableSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:OrientableSurface_Substitution">
      <gml:OrientableSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractSurfacePatch">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractSurfacePatch"/>
         <xsl:call-template name="gml:AbstractSurfacePatchType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractSurfacePatch_Substitution">
      <gml:AbstractSurfacePatch xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:patches">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:patches"/>
         <xsl:call-template name="gml:SurfacePatchArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:patches_Substitution">
      <gml:patches xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:PolygonPatch">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:PolygonPatch"/>
         <xsl:call-template name="gml:PolygonPatchType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:PolygonPatch_Substitution">
      <gml:PolygonPatch xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Triangle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Triangle"/>
         <xsl:call-template name="gml:TriangleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Triangle_Substitution">
      <gml:Triangle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Rectangle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Rectangle"/>
         <xsl:call-template name="gml:RectangleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Rectangle_Substitution">
      <gml:Rectangle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Ring">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Ring"/>
         <xsl:call-template name="gml:RingType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Ring_Substitution">
      <gml:Ring xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:curveMember">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:curveMember"/>
         <xsl:call-template name="gml:CurvePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:curveMember_Substitution">
      <gml:curveMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractParametricCurveSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractParametricCurveSurface"/>
         <xsl:call-template name="gml:AbstractParametricCurveSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractParametricCurveSurface_Substitution">
      <gml:AbstractParametricCurveSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractGriddedSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractGriddedSurface"/>
         <xsl:call-template name="gml:AbstractGriddedSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractGriddedSurface_Substitution">
      <gml:AbstractGriddedSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Cone">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Cone"/>
         <xsl:call-template name="gml:ConeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Cone_Substitution">
      <gml:Cone xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Cylinder">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Cylinder"/>
         <xsl:call-template name="gml:CylinderType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Cylinder_Substitution">
      <gml:Cylinder xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Sphere">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Sphere"/>
         <xsl:call-template name="gml:SphereType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Sphere_Substitution">
      <gml:Sphere xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:PolyhedralSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:PolyhedralSurface"/>
         <xsl:call-template name="gml:SurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:PolyhedralSurface_Substitution">
      <gml:PolyhedralSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TriangulatedSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TriangulatedSurface"/>
         <xsl:call-template name="gml:SurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TriangulatedSurface_Substitution">
      <gml:TriangulatedSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Tin">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Tin"/>
         <xsl:call-template name="gml:TinType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Tin_Substitution">
      <gml:Tin xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractSolid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractSolid"/>
         <xsl:call-template name="gml:AbstractSolidType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractSolid_Substitution">
      <gml:AbstractSolid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:solidProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:solidProperty"/>
         <xsl:call-template name="gml:SolidPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:solidProperty_Substitution">
      <gml:solidProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Solid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Solid"/>
         <xsl:call-template name="gml:SolidType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Solid_Substitution">
      <gml:Solid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Shell">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Shell"/>
         <xsl:call-template name="gml:ShellType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Shell_Substitution">
      <gml:Shell xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:surfaceMember">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:surfaceMember"/>
         <xsl:call-template name="gml:SurfacePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:surfaceMember_Substitution">
      <gml:surfaceMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractGML">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractGML"/>
         <xsl:call-template name="gml:AbstractGMLType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractGML_Substitution">
      <gml:AbstractGML xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:abstractAssociationRole">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:abstractAssociationRole"/>
         <xsl:call-template name="gml:AssociationRoleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:abstractAssociationRole_Substitution">
      <gml:abstractAssociationRole xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:abstractStrictAssociationRole">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:abstractStrictAssociationRole"/>
         <xsl:call-template name="gml:AssociationRoleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:abstractStrictAssociationRole_Substitution">
      <gml:abstractStrictAssociationRole xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:abstractReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:abstractReference"/>
         <xsl:call-template name="gml:ReferenceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:abstractReference_Substitution">
      <gml:abstractReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:abstractInlineProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:abstractInlineProperty"/>
         <xsl:call-template name="gml:InlinePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:abstractInlineProperty_Substitution">
      <gml:abstractInlineProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:description">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:description"/>
         <xsl:call-template name="gml:StringOrRefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:description_Substitution">
      <gml:description xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:descriptionReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:descriptionReference"/>
         <xsl:call-template name="gml:ReferenceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:descriptionReference_Substitution">
      <gml:descriptionReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:name">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:name"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:name_Substitution">
      <gml:name xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:identifier">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:identifier"/>
         <xsl:call-template name="gml:CodeWithAuthorityType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:identifier_Substitution">
      <gml:identifier xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Grid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Grid"/>
         <xsl:call-template name="gml:GridType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Grid_Substitution">
      <gml:Grid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractImplicitGeometry">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractImplicitGeometry"/>
         <xsl:call-template name="gml:AbstractGeometryType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractImplicitGeometry_Substitution">
      <gml:AbstractImplicitGeometry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:RectifiedGrid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:RectifiedGrid"/>
         <xsl:call-template name="gml:RectifiedGridType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:RectifiedGrid_Substitution">
      <gml:RectifiedGrid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:measure">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:measure"/>
         <xsl:call-template name="gml:MeasureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:measure_Substitution">
      <gml:measure xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:angle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:angle"/>
         <xsl:call-template name="gml:AngleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:angle_Substitution">
      <gml:angle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Observation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Observation"/>
         <xsl:call-template name="gml:ObservationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Observation_Substitution">
      <gml:Observation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:using">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:using"/>
         <xsl:call-template name="gml:ProcedurePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:using_Substitution">
      <gml:using xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:target">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:target"/>
         <xsl:call-template name="gml:TargetPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:target_Substitution">
      <gml:target xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:subject">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:subject"/>
         <xsl:call-template name="gml:TargetPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:subject_Substitution">
      <gml:subject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:resultOf">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:resultOf"/>
         <xsl:call-template name="gml:ResultType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:resultOf_Substitution">
      <gml:resultOf xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DirectedObservation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DirectedObservation"/>
         <xsl:call-template name="gml:DirectedObservationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:DirectedObservation_Substitution">
      <gml:DirectedObservation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DirectedObservationAtDistance">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DirectedObservationAtDistance"/>
         <xsl:call-template name="gml:DirectedObservationAtDistanceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:DirectedObservationAtDistance_Substitution">
      <gml:DirectedObservationAtDistance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractCRS">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractCRS"/>
         <xsl:call-template name="gml:AbstractCRSType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractCRS_Substitution">
      <gml:AbstractCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:domainOfValidity">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:domainOfValidity"/>
         <xsl:call-template name="_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:domainOfValidity_Substitution">
      <gml:domainOfValidity xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractTimeObject">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractTimeObject"/>
         <xsl:call-template name="gml:AbstractTimeObjectType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeObject_Substitution">
      <gml:AbstractTimeObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractTimePrimitive">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractTimePrimitive"/>
         <xsl:call-template name="gml:AbstractTimePrimitiveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractTimePrimitive_Substitution">
      <gml:AbstractTimePrimitive xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:validTime">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:validTime"/>
         <xsl:call-template name="gml:TimePrimitivePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:validTime_Substitution">
      <gml:validTime xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractTimeComplex">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractTimeComplex"/>
         <xsl:call-template name="gml:AbstractTimeComplexType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeComplex_Substitution">
      <gml:AbstractTimeComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractTimeGeometricPrimitive">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractTimeGeometricPrimitive"/>
         <xsl:call-template name="gml:AbstractTimeGeometricPrimitiveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeGeometricPrimitive_Substitution">
      <gml:AbstractTimeGeometricPrimitive xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeInstant">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeInstant"/>
         <xsl:call-template name="gml:TimeInstantType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeInstant_Substitution">
      <gml:TimeInstant xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimePeriod">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimePeriod"/>
         <xsl:call-template name="gml:TimePeriodType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimePeriod_Substitution">
      <gml:TimePeriod xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:timePosition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:timePosition"/>
         <xsl:call-template name="gml:TimePositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:timePosition_Substitution">
      <gml:timePosition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:timeInterval">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:timeInterval"/>
         <xsl:call-template name="gml:TimeIntervalLengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:timeInterval_Substitution">
      <gml:timeInterval xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeReferenceSystem">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeReferenceSystem"/>
         <xsl:call-template name="gml:TimeReferenceSystemType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeReferenceSystem_Substitution">
      <gml:TimeReferenceSystem xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeCoordinateSystem">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeCoordinateSystem"/>
         <xsl:call-template name="gml:TimeCoordinateSystemType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeCoordinateSystem_Substitution">
      <gml:TimeCoordinateSystem xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeCalendar">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeCalendar"/>
         <xsl:call-template name="gml:TimeCalendarType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeCalendar_Substitution">
      <gml:TimeCalendar xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeCalendarEra">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeCalendarEra"/>
         <xsl:call-template name="gml:TimeCalendarEraType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeCalendarEra_Substitution">
      <gml:TimeCalendarEra xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeClock">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeClock"/>
         <xsl:call-template name="gml:TimeClockType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeClock_Substitution">
      <gml:TimeClock xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeOrdinalReferenceSystem">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeOrdinalReferenceSystem"/>
         <xsl:call-template name="gml:TimeOrdinalReferenceSystemType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeOrdinalReferenceSystem_Substitution">
      <gml:TimeOrdinalReferenceSystem xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeOrdinalEra">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeOrdinalEra"/>
         <xsl:call-template name="gml:TimeOrdinalEraType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeOrdinalEra_Substitution">
      <gml:TimeOrdinalEra xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractTimeTopologyPrimitive">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractTimeTopologyPrimitive"/>
         <xsl:call-template name="gml:AbstractTimeTopologyPrimitiveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeTopologyPrimitive_Substitution">
      <gml:AbstractTimeTopologyPrimitive xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeTopologyComplex">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeTopologyComplex"/>
         <xsl:call-template name="gml:TimeTopologyComplexType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeTopologyComplex_Substitution">
      <gml:TimeTopologyComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeNode">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeNode"/>
         <xsl:call-template name="gml:TimeNodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeNode_Substitution">
      <gml:TimeNode xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TimeEdge">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TimeEdge"/>
         <xsl:call-template name="gml:TimeEdgeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TimeEdge_Substitution">
      <gml:TimeEdge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractTopology">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractTopology"/>
         <xsl:call-template name="gml:AbstractTopologyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractTopology_Substitution">
      <gml:AbstractTopology xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:AbstractTopoPrimitive">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:AbstractTopoPrimitive"/>
         <xsl:call-template name="gml:AbstractTopoPrimitiveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:AbstractTopoPrimitive_Substitution">
      <gml:AbstractTopoPrimitive xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Node">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Node"/>
         <xsl:call-template name="gml:NodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Node_Substitution">
      <gml:Node xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:directedNode">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:directedNode"/>
         <xsl:call-template name="gml:DirectedNodePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:directedNode_Substitution">
      <gml:directedNode xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Edge">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Edge"/>
         <xsl:call-template name="gml:EdgeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Edge_Substitution">
      <gml:Edge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:directedEdge">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:directedEdge"/>
         <xsl:call-template name="gml:DirectedEdgePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:directedEdge_Substitution">
      <gml:directedEdge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Face">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Face"/>
         <xsl:call-template name="gml:FaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Face_Substitution">
      <gml:Face xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:directedFace">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:directedFace"/>
         <xsl:call-template name="gml:DirectedFacePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:directedFace_Substitution">
      <gml:directedFace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TopoSolid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TopoSolid"/>
         <xsl:call-template name="gml:TopoSolidType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TopoSolid_Substitution">
      <gml:TopoSolid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:directedTopoSolid">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:directedTopoSolid"/>
         <xsl:call-template name="gml:DirectedTopoSolidPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:directedTopoSolid_Substitution">
      <gml:directedTopoSolid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TopoPoint">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TopoPoint"/>
         <xsl:call-template name="gml:TopoPointType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TopoPoint_Substitution">
      <gml:TopoPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:topoPointProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:topoPointProperty"/>
         <xsl:call-template name="gml:TopoPointPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:topoPointProperty_Substitution">
      <gml:topoPointProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TopoCurve">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TopoCurve"/>
         <xsl:call-template name="gml:TopoCurveType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TopoCurve_Substitution">
      <gml:TopoCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:topoCurveProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:topoCurveProperty"/>
         <xsl:call-template name="gml:TopoCurvePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:topoCurveProperty_Substitution">
      <gml:topoCurveProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TopoSurface">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TopoSurface"/>
         <xsl:call-template name="gml:TopoSurfaceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TopoSurface_Substitution">
      <gml:TopoSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:topoSurfaceProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:topoSurfaceProperty"/>
         <xsl:call-template name="gml:TopoSurfacePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:topoSurfaceProperty_Substitution">
      <gml:topoSurfaceProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TopoVolume">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TopoVolume"/>
         <xsl:call-template name="gml:TopoVolumeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TopoVolume_Substitution">
      <gml:TopoVolume xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:topoVolumeProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:topoVolumeProperty"/>
         <xsl:call-template name="gml:TopoVolumePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:topoVolumeProperty_Substitution">
      <gml:topoVolumeProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:TopoComplex">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:TopoComplex"/>
         <xsl:call-template name="gml:TopoComplexType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:TopoComplex_Substitution">
      <gml:TopoComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:subComplex">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:subComplex"/>
         <xsl:call-template name="gml:TopoComplexPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:subComplex_Substitution">
      <gml:subComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:superComplex">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:superComplex"/>
         <xsl:call-template name="gml:TopoComplexPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:superComplex_Substitution">
      <gml:superComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:maximalComplex">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:maximalComplex"/>
         <xsl:call-template name="gml:TopoComplexPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:maximalComplex_Substitution">
      <gml:maximalComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:topoPrimitiveMember">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:topoPrimitiveMember"/>
         <xsl:call-template name="gml:TopoPrimitiveMemberType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:topoPrimitiveMember_Substitution">
      <gml:topoPrimitiveMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:topoPrimitiveMembers">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:topoPrimitiveMembers"/>
         <xsl:call-template name="gml:TopoPrimitiveArrayAssociationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:topoPrimitiveMembers_Substitution">
      <gml:topoPrimitiveMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:unitOfMeasure">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:unitOfMeasure"/>
         <xsl:call-template name="gml:UnitOfMeasureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:unitOfMeasure_Substitution">
      <gml:unitOfMeasure xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:UnitDefinition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:UnitDefinition"/>
         <xsl:call-template name="gml:UnitDefinitionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:UnitDefinition_Substitution">
      <gml:UnitDefinition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:quantityType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:quantityType"/>
         <xsl:call-template name="gml:StringOrRefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:quantityType_Substitution">
      <gml:quantityType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:quantityTypeReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:quantityTypeReference"/>
         <xsl:call-template name="gml:ReferenceType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:quantityTypeReference_Substitution">
      <gml:quantityTypeReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:catalogSymbol">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:catalogSymbol"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:catalogSymbol_Substitution">
      <gml:catalogSymbol xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:BaseUnit">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:BaseUnit"/>
         <xsl:call-template name="gml:BaseUnitType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:BaseUnit_Substitution">
      <gml:BaseUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DerivedUnit">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DerivedUnit"/>
         <xsl:call-template name="gml:DerivedUnitType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:DerivedUnit_Substitution">
      <gml:DerivedUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:derivationUnitTerm">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:derivationUnitTerm"/>
         <xsl:call-template name="gml:DerivationUnitTermType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:derivationUnitTerm_Substitution">
      <gml:derivationUnitTerm xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ConventionalUnit">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ConventionalUnit"/>
         <xsl:call-template name="gml:ConventionalUnitType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ConventionalUnit_Substitution">
      <gml:ConventionalUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:conversionToPreferredUnit">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:conversionToPreferredUnit"/>
         <xsl:call-template name="gml:ConversionToPreferredUnitType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:conversionToPreferredUnit_Substitution">
      <gml:conversionToPreferredUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:roughConversionToPreferredUnit">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:roughConversionToPreferredUnit"/>
         <xsl:call-template name="gml:ConversionToPreferredUnitType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:roughConversionToPreferredUnit_Substitution">
      <gml:roughConversionToPreferredUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Boolean">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Boolean"/>
         <xsl:call-template name="_Template"/>
      </owl:NamedIndividual>
   <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:Boolean', '_', generate-id() )}">
         <rdf:type rdf:resource=""/>
         <xsl:call-template name="gml:Boolean_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Boolean_Substitution">
      <gml:Boolean xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:BooleanList_Substitution">
      <xsl:call-template name="gml:booleanOrNilReasonList_Template"/>
   </xsl:template>
   <xsl:template match="//gml:Category">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Category"/>
         <xsl:call-template name="_Template"/>
      </owl:NamedIndividual>
   <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:Category', '_', generate-id() )}">
         <rdf:type rdf:resource=""/>
         <xsl:call-template name="gml:Category_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Category_Substitution">
      <gml:Category xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CategoryList">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CategoryList"/>
         <xsl:call-template name="gml:CodeOrNilReasonListType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CategoryList_Substitution">
      <gml:CategoryList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:Count">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Count"/>
         <xsl:call-template name="_Template"/>
      </owl:NamedIndividual>
   <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:Count', '_', generate-id() )}">
         <rdf:type rdf:resource=""/>
         <xsl:call-template name="gml:Count_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Count_Substitution">
      <gml:Count xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:CountList_Substitution">
      <xsl:call-template name="gml:integerOrNilReasonList_Template"/>
   </xsl:template>
   <xsl:template match="//gml:Quantity">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:Quantity"/>
         <xsl:call-template name="_Template"/>
      </owl:NamedIndividual>
   <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:Quantity', '_', generate-id() )}">
         <rdf:type rdf:resource=""/>
         <xsl:call-template name="gml:Quantity_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:Quantity_Substitution">
      <gml:Quantity xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:QuantityList">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:QuantityList"/>
         <xsl:call-template name="gml:MeasureOrNilReasonListType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:QuantityList_Substitution">
      <gml:QuantityList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractValue_Substitution"/>
   <xsl:template name="gml:AbstractScalarValue_Substitution"/>
   <xsl:template name="gml:AbstractScalarValueList_Substitution"/>
   <xsl:template match="//gml:valueProperty">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:valueProperty"/>
         <xsl:call-template name="gml:ValuePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:valueProperty_Substitution">
      <gml:valueProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:valueComponent">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:valueComponent"/>
         <xsl:call-template name="gml:ValuePropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:valueComponent_Substitution">
      <gml:valueComponent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:valueComponents">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:valueComponents"/>
         <xsl:call-template name="gml:ValueArrayPropertyType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:valueComponents_Substitution">
      <gml:valueComponents xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CompositeValue">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CompositeValue"/>
         <xsl:call-template name="gml:CompositeValueType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CompositeValue_Substitution">
      <gml:CompositeValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:ValueArray">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:ValueArray"/>
         <xsl:call-template name="gml:ValueArrayType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:ValueArray_Substitution">
      <gml:ValueArray xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:CategoryExtent">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:CategoryExtent"/>
         <xsl:call-template name="gml:CategoryExtentType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:CategoryExtent_Substitution">
      <gml:CategoryExtent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:CountExtent_Substitution">
      <xsl:call-template name="gml:CountExtentType_Template"/>
   </xsl:template>
   <xsl:template match="//gml:QuantityExtent">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}">
         <rdf:type rdf:resource="gml:QuantityExtent"/>
         <xsl:call-template name="gml:QuantityExtentType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:QuantityExtent_Substitution">
      <gml:QuantityExtent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if ( @gml:id ) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:ADEOfAbstractSurfaceData_Property">
      <app:hasADEOfAbstractSurfaceData xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:ADEOfAbstractTexture_Property">
      <app:hasADEOfAbstractTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:ADEOfAppearance_Property">
      <app:hasADEOfAppearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:ADEOfGeoreferencedTexture_Property">
      <app:hasADEOfGeoreferencedTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:ADEOfParameterizedTexture_Property">
      <app:hasADEOfParameterizedTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:ADEOfX3DMaterial_Property">
      <app:hasADEOfX3DMaterial xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:isFront_Property">
      <app:isFront>
         <xsl:value-of select="text()"/>
      </app:isFront>
   </xsl:template>
   <xsl:template name="app:adeOfAbstractSurfaceData_Property">
      <app:adeOfAbstractSurfaceData xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:AbstractSurfaceData_Property">
      <app:hasAbstractSurfaceData xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:imageURI_Property">
      <app:imageURI>
         <xsl:value-of select="text()"/>
      </app:imageURI>
   </xsl:template>
   <xsl:template name="app:mimeType_Property">
      <app:mimeType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//app:mimeType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="app:mimeType"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="app:textureType_Property">
      <app:textureType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:wrapMode_Property">
      <app:wrapMode xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:borderColor_Property">
      <app:borderColor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:adeOfAbstractTexture_Property">
      <app:adeOfAbstractTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:AbstractTexture_Property">
      <app:hasAbstractTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:AbstractTextureParameterization_Property">
      <app:hasAbstractTextureParameterization xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:theme_Property">
      <app:theme>
         <xsl:value-of select="text()"/>
      </app:theme>
   </xsl:template>
   <xsl:template name="app:surfaceData_Property">
      <app:surfaceData xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:adeOfAppearance_Property">
      <app:adeOfAppearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:Appearance_Property">
      <app:hasAppearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:preferWorldFile_Property">
      <app:preferWorldFile>
         <xsl:value-of select="text()"/>
      </app:preferWorldFile>
   </xsl:template>
   <xsl:template name="app:referencePoint_Property">
      <app:referencePoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:orientation_Property">
      <app:orientation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:target_Property">
      <app:target>
         <xsl:value-of select="text()"/>
      </app:target>
   </xsl:template>
   <xsl:template name="app:adeOfGeoreferencedTexture_Property">
      <app:adeOfGeoreferencedTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:GeoreferencedTexture_Property">
      <app:hasGeoreferencedTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:textureParameterization_Property">
      <app:textureParameterization xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:adeOfParameterizedTexture_Property">
      <app:adeOfParameterizedTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:ParameterizedTexture_Property">
      <app:hasParameterizedTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:worldToTexture_Property">
      <app:worldToTexture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:TexCoordGen_Property">
      <app:hasTexCoordGen xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:textureCoordinates_Property">
      <app:textureCoordinates xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:ring_Property">
      <app:ring>
         <xsl:value-of select="text()"/>
      </app:ring>
   </xsl:template>
   <xsl:template name="app:TexCoordList_Property">
      <app:hasTexCoordList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:TextureAssociation_Property">
      <app:hasTextureAssociation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="app:ambientIntensity_Property">
      <app:ambientIntensity xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:diffuseColor_Property">
      <app:diffuseColor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:emissiveColor_Property">
      <app:emissiveColor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:specularColor_Property">
      <app:specularColor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:shininess_Property">
      <app:shininess xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:transparency_Property">
      <app:transparency xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:isSmooth_Property">
      <app:isSmooth>
         <xsl:value-of select="text()"/>
      </app:isSmooth>
   </xsl:template>
   <xsl:template name="app:adeOfX3DMaterial_Property">
      <app:adeOfX3DMaterial xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="app:X3DMaterial_Property">
      <app:hasX3DMaterial xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:ADEOfAbstractBridge_Property">
      <brid:hasADEOfAbstractBridge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridge_Property">
      <brid:hasADEOfBridge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeConstructiveElement_Property">
      <brid:hasADEOfBridgeConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeFurniture_Property">
      <brid:hasADEOfBridgeFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeInstallation_Property">
      <brid:hasADEOfBridgeInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgePart_Property">
      <brid:hasADEOfBridgePart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:ADEOfBridgeRoom_Property">
      <brid:hasADEOfBridgeRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:class_Property">
      <brid:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="brid:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:function_Property">
      <brid:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="brid:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:usage_Property">
      <brid:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//brid:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="brid:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="brid:isMovable_Property">
      <brid:isMovable>
         <xsl:value-of select="text()"/>
      </brid:isMovable>
   </xsl:template>
   <xsl:template name="brid:bridgeConstructiveElement_Property">
      <brid:bridgeConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:BridgeConstructiveElement_Property">
      <brid:hasBridgeConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:bridgeInstallation_Property">
      <brid:bridgeInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:BridgeInstallation_Property">
      <brid:hasBridgeInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:bridgeRoom_Property">
      <brid:bridgeRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:BridgeRoom_Property">
      <brid:hasBridgeRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:bridgeFurniture_Property">
      <brid:bridgeFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:BridgeFurniture_Property">
      <brid:hasBridgeFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:address_Property">
      <brid:address xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:adeOfAbstractBridge_Property">
      <brid:adeOfAbstractBridge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:AbstractBridge_Property">
      <brid:hasAbstractBridge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:bridgePart_Property">
      <brid:bridgePart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:BridgePart_Property">
      <brid:hasBridgePart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:adeOfBridge_Property">
      <brid:adeOfBridge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:Bridge_Property">
      <brid:hasBridge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="brid:adeOfBridgeConstructiveElement_Property">
      <brid:adeOfBridgeConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:adeOfBridgeFurniture_Property">
      <brid:adeOfBridgeFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:adeOfBridgeInstallation_Property">
      <brid:adeOfBridgeInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:adeOfBridgePart_Property">
      <brid:adeOfBridgePart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="brid:adeOfBridgeRoom_Property">
      <brid:adeOfBridgeRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfAbstractBuilding_Property">
      <bldg:hasADEOfAbstractBuilding xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfAbstractBuildingSubdivision_Property">
      <bldg:hasADEOfAbstractBuildingSubdivision xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuilding_Property">
      <bldg:hasADEOfBuilding xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingConstructiveElement_Property">
      <bldg:hasADEOfBuildingConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingFurniture_Property">
      <bldg:hasADEOfBuildingFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingInstallation_Property">
      <bldg:hasADEOfBuildingInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingPart_Property">
      <bldg:hasADEOfBuildingPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingRoom_Property">
      <bldg:hasADEOfBuildingRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfBuildingUnit_Property">
      <bldg:hasADEOfBuildingUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:ADEOfStorey_Property">
      <bldg:hasADEOfStorey xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:class_Property">
      <bldg:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:function_Property">
      <bldg:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:usage_Property">
      <bldg:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:roofType_Property">
      <bldg:roofType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:roofType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:roofType"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:storeysAboveGround_Property">
      <bldg:storeysAboveGround>
         <xsl:value-of select="text()"/>
      </bldg:storeysAboveGround>
   </xsl:template>
   <xsl:template name="bldg:storeysBelowGround_Property">
      <bldg:storeysBelowGround>
         <xsl:value-of select="text()"/>
      </bldg:storeysBelowGround>
   </xsl:template>
   <xsl:template name="bldg:storeyHeightsAboveGround_Property">
      <bldg:storeyHeightsAboveGround xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:MeasureOrNilReasonListType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:storeyHeightsAboveGround">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:MeasureOrNilReasonListType', '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:storeyHeightsAboveGround"/>
         <xsl:call-template name="gml:MeasureOrNilReasonListType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:storeyHeightsBelowGround_Property">
      <bldg:storeyHeightsBelowGround xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:MeasureOrNilReasonListType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:storeyHeightsBelowGround">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:MeasureOrNilReasonListType', '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:storeyHeightsBelowGround"/>
         <xsl:call-template name="gml:MeasureOrNilReasonListType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:buildingConstructiveElement_Property">
      <bldg:buildingConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingConstructiveElement_Property">
      <bldg:hasBuildingConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:buildingInstallation_Property">
      <bldg:buildingInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingInstallation_Property">
      <bldg:hasBuildingInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:buildingRoom_Property">
      <bldg:buildingRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingRoom_Property">
      <bldg:hasBuildingRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:buildingFurniture_Property">
      <bldg:buildingFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingFurniture_Property">
      <bldg:hasBuildingFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:buildingSubdivision_Property">
      <bldg:buildingSubdivision xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:AbstractBuildingSubdivision_Property">
      <bldg:hasAbstractBuildingSubdivision xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:address_Property">
      <bldg:address xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:adeOfAbstractBuilding_Property">
      <bldg:adeOfAbstractBuilding xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:AbstractBuilding_Property">
      <bldg:hasAbstractBuilding xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:elevation_Property">
      <bldg:elevation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:sortKey_Property">
      <bldg:sortKey>
         <xsl:value-of select="text()"/>
      </bldg:sortKey>
   </xsl:template>
   <xsl:template name="bldg:adeOfAbstractBuildingSubdivision_Property">
      <bldg:adeOfAbstractBuildingSubdivision xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:buildingPart_Property">
      <bldg:buildingPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingPart_Property">
      <bldg:hasBuildingPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:adeOfBuilding_Property">
      <bldg:adeOfBuilding xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:Building_Property">
      <bldg:hasBuilding xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:adeOfBuildingConstructiveElement_Property">
      <bldg:adeOfBuildingConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:adeOfBuildingFurniture_Property">
      <bldg:adeOfBuildingFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:adeOfBuildingInstallation_Property">
      <bldg:adeOfBuildingInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:adeOfBuildingPart_Property">
      <bldg:adeOfBuildingPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:roomHeight_Property">
      <bldg:roomHeight xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:adeOfBuildingRoom_Property">
      <bldg:adeOfBuildingRoom xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:storey_Property">
      <bldg:storey xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:adeOfBuildingUnit_Property">
      <bldg:adeOfBuildingUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:BuildingUnit_Property">
      <bldg:hasBuildingUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:highReference_Property">
      <bldg:highReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:highReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:highReference"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:lowReference_Property">
      <bldg:lowReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:lowReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:lowReference"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:status_Property">
      <bldg:status xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:value_Property">
      <bldg:value xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//bldg:value">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="bldg:value"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="bldg:RoomHeight_Property">
      <bldg:hasRoomHeight xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="bldg:buildingUnit_Property">
      <bldg:buildingUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:adeOfStorey_Property">
      <bldg:adeOfStorey xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="bldg:Storey_Property">
      <bldg:hasStorey xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="frn:ADEOfCityFurniture_Property">
      <frn:hasADEOfCityFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="frn:class_Property">
      <frn:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//frn:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="frn:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="frn:function_Property">
      <frn:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//frn:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="frn:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="frn:usage_Property">
      <frn:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//frn:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="frn:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="frn:adeOfCityFurniture_Property">
      <frn:adeOfCityFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="frn:CityFurniture_Property">
      <frn:hasCityFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractAppearance_Property">
      <core:hasADEOfAbstractAppearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractCityObject_Property">
      <core:hasADEOfAbstractCityObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractDynamizer_Property">
      <core:hasADEOfAbstractDynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractFeature_Property">
      <core:hasADEOfAbstractFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractFeatureWithLifespan_Property">
      <core:hasADEOfAbstractFeatureWithLifespan xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractLogicalSpace_Property">
      <core:hasADEOfAbstractLogicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractOccupiedSpace_Property">
      <core:hasADEOfAbstractOccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractPhysicalSpace_Property">
      <core:hasADEOfAbstractPhysicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractPointCloud_Property">
      <core:hasADEOfAbstractPointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractSpace_Property">
      <core:hasADEOfAbstractSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractSpaceBoundary_Property">
      <core:hasADEOfAbstractSpaceBoundary xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractThematicSurface_Property">
      <core:hasADEOfAbstractThematicSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractUnoccupiedSpace_Property">
      <core:hasADEOfAbstractUnoccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractVersion_Property">
      <core:hasADEOfAbstractVersion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAbstractVersionTransition_Property">
      <core:hasADEOfAbstractVersionTransition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfAddress_Property">
      <core:hasADEOfAddress xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfCityModel_Property">
      <core:hasADEOfCityModel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:ADEOfClosureSurface_Property">
      <core:hasADEOfClosureSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractAppearance_Property">
      <core:adeOfAbstractAppearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractAppearance_Property">
      <core:hasAbstractAppearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:externalReference_Property">
      <core:externalReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:generalizesTo_Property">
      <core:generalizesTo xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:relativeToTerrain_Property">
      <core:relativeToTerrain xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:relativeToWater_Property">
      <core:relativeToWater xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:relatedTo_Property">
      <core:relatedTo xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:appearance_Property">
      <core:appearance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:genericAttribute_Property">
      <core:genericAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:dynamizer_Property">
      <core:dynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractCityObject_Property">
      <core:adeOfAbstractCityObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractCityObject_Property">
      <core:hasAbstractCityObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractDynamizer_Property">
      <core:adeOfAbstractDynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractDynamizer_Property">
      <core:hasAbstractDynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractFeature_Property">
      <core:adeOfAbstractFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractFeature_Property">
      <core:hasAbstractFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:creationDate_Property">
      <core:creationDate>
         <xsl:value-of select="text()"/>
      </core:creationDate>
   </xsl:template>
   <xsl:template name="core:terminationDate_Property">
      <core:terminationDate>
         <xsl:value-of select="text()"/>
      </core:terminationDate>
   </xsl:template>
   <xsl:template name="core:validFrom_Property">
      <core:validFrom>
         <xsl:value-of select="text()"/>
      </core:validFrom>
   </xsl:template>
   <xsl:template name="core:validTo_Property">
      <core:validTo>
         <xsl:value-of select="text()"/>
      </core:validTo>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractFeatureWithLifespan_Property">
      <core:adeOfAbstractFeatureWithLifespan xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractFeatureWithLifespan_Property">
      <core:hasAbstractFeatureWithLifespan xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractGenericAttribute_Property">
      <core:hasAbstractGenericAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractLogicalSpace_Property">
      <core:adeOfAbstractLogicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractLogicalSpace_Property">
      <core:hasAbstractLogicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:lod1ImplicitRepresentation_Property">
      <core:lod1ImplicitRepresentation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod2ImplicitRepresentation_Property">
      <core:lod2ImplicitRepresentation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod3ImplicitRepresentation_Property">
      <core:lod3ImplicitRepresentation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractOccupiedSpace_Property">
      <core:adeOfAbstractOccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractOccupiedSpace_Property">
      <core:hasAbstractOccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:lod1TerrainIntersectionCurve_Property">
      <core:lod1TerrainIntersectionCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod2TerrainIntersectionCurve_Property">
      <core:lod2TerrainIntersectionCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod3TerrainIntersectionCurve_Property">
      <core:lod3TerrainIntersectionCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:pointCloud_Property">
      <core:pointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractPhysicalSpace_Property">
      <core:adeOfAbstractPhysicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractPhysicalSpace_Property">
      <core:hasAbstractPhysicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractPointCloud_Property">
      <core:adeOfAbstractPointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractPointCloud_Property">
      <core:hasAbstractPointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:spaceType_Property">
      <core:spaceType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:volume_Property">
      <core:volume xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   <core:volume xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:VolumeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:area_Property">
      <core:area xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   <core:area xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:AreaType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:boundary_Property">
      <core:boundary xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod0Point_Property">
      <core:lod0Point xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod0MultiSurface_Property">
      <core:lod0MultiSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod0MultiCurve_Property">
      <core:lod0MultiCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod1Solid_Property">
      <core:lod1Solid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod2Solid_Property">
      <core:lod2Solid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod2MultiSurface_Property">
      <core:lod2MultiSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod2MultiCurve_Property">
      <core:lod2MultiCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod3Solid_Property">
      <core:lod3Solid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod3MultiSurface_Property">
      <core:lod3MultiSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:lod3MultiCurve_Property">
      <core:lod3MultiCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractSpace_Property">
      <core:adeOfAbstractSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractSpace_Property">
      <core:hasAbstractSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractSpaceBoundary_Property">
      <core:adeOfAbstractSpaceBoundary xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractSpaceBoundary_Property">
      <core:hasAbstractSpaceBoundary xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:lod1MultiSurface_Property">
      <core:lod1MultiSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractThematicSurface_Property">
      <core:adeOfAbstractThematicSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractThematicSurface_Property">
      <core:hasAbstractThematicSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractUnoccupiedSpace_Property">
      <core:adeOfAbstractUnoccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractUnoccupiedSpace_Property">
      <core:hasAbstractUnoccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractVersion_Property">
      <core:adeOfAbstractVersion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractVersion_Property">
      <core:hasAbstractVersion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAbstractVersionTransition_Property">
      <core:adeOfAbstractVersionTransition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:AbstractVersionTransition_Property">
      <core:hasAbstractVersionTransition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:xalAddress_Property">
      <core:xalAddress xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="xAL:Address_Property">
      <xAL:hasAddress xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:multiPoint_Property">
      <core:multiPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfAddress_Property">
      <core:adeOfAddress xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:Address_Property">
      <core:hasAddress xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:engineeringCRS_Property">
      <core:engineeringCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:EngineeringCRS_Property">
      <gml:hasEngineeringCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfCityModel_Property">
      <core:adeOfCityModel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:CityModel_Property">
      <core:hasCityModel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:relationType_Property">
      <core:relationType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   <core:relationType>
         <xsl:value-of select="text()"/>
      </core:relationType>
   </xsl:template>
   <xsl:template match="//core:relationType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="core:relationType"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:CityObjectRelation_Property">
      <core:hasCityObjectRelation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:adeOfClosureSurface_Property">
      <core:adeOfClosureSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:ClosureSurface_Property">
      <core:hasClosureSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:targetResource_Property">
      <core:targetResource>
         <xsl:value-of select="text()"/>
      </core:targetResource>
   </xsl:template>
   <xsl:template name="core:informationSystem_Property">
      <core:informationSystem>
         <xsl:value-of select="text()"/>
      </core:informationSystem>
   </xsl:template>
   <xsl:template name="core:ExternalReference_Property">
      <core:hasExternalReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:transformationMatrix_Property">
      <core:transformationMatrix xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:mimeType_Property">
      <core:mimeType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:mimeType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="core:mimeType"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:libraryObject_Property">
      <core:libraryObject>
         <xsl:value-of select="text()"/>
      </core:libraryObject>
   </xsl:template>
   <xsl:template name="core:referencePoint_Property">
      <core:referencePoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:relativeGeometry_Property">
      <core:relativeGeometry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:ImplicitGeometry_Property">
      <core:hasImplicitGeometry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:numberOfOccupants_Property">
      <core:numberOfOccupants>
         <xsl:value-of select="text()"/>
      </core:numberOfOccupants>
   </xsl:template>
   <xsl:template name="core:interval_Property">
      <core:interval xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:interval">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="core:interval"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:occupantType_Property">
      <core:occupantType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:occupantType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="core:occupantType"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:Occupancy_Property">
      <core:hasOccupancy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:area">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:AreaType', '_', generate-id() )}">
         <rdf:type rdf:resource="core:area"/>
         <xsl:call-template name="gml:AreaType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:typeOfArea_Property">
      <core:typeOfArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:typeOfArea">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="core:typeOfArea"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:QualifiedArea_Property">
      <core:hasQualifiedArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:volume">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:VolumeType', '_', generate-id() )}">
         <rdf:type rdf:resource="core:volume"/>
         <xsl:call-template name="gml:VolumeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:typeOfVolume_Property">
      <core:typeOfVolume xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//core:typeOfVolume">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="core:typeOfVolume"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="core:QualifiedVolume_Property">
      <core:hasQualifiedVolume xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="grp:ADEOfCityObjectGroup_Property">
      <grp:hasADEOfCityObjectGroup xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="grp:class_Property">
      <grp:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//grp:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="grp:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="grp:function_Property">
      <grp:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//grp:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="grp:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="grp:usage_Property">
      <grp:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//grp:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="grp:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="grp:groupMember_Property">
      <grp:groupMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="grp:Role_Property">
      <grp:hasRole xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="grp:parent_Property">
      <grp:parent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="grp:adeOfCityObjectGroup_Property">
      <grp:adeOfCityObjectGroup xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="grp:CityObjectGroup_Property">
      <grp:hasCityObjectGroup xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="grp:role_Property">
      <grp:role>
         <xsl:value-of select="text()"/>
      </grp:role>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractConstruction_Property">
      <con:hasADEOfAbstractConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractConstructionSurface_Property">
      <con:hasADEOfAbstractConstructionSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractConstructiveElement_Property">
      <con:hasADEOfAbstractConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractFillingElement_Property">
      <con:hasADEOfAbstractFillingElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractFillingSurface_Property">
      <con:hasADEOfAbstractFillingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractFurniture_Property">
      <con:hasADEOfAbstractFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfAbstractInstallation_Property">
      <con:hasADEOfAbstractInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfCeilingSurface_Property">
      <con:hasADEOfCeilingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfDoor_Property">
      <con:hasADEOfDoor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfDoorSurface_Property">
      <con:hasADEOfDoorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfFloorSurface_Property">
      <con:hasADEOfFloorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfGroundSurface_Property">
      <con:hasADEOfGroundSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfInteriorWallSurface_Property">
      <con:hasADEOfInteriorWallSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfOtherConstruction_Property">
      <con:hasADEOfOtherConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfOuterCeilingSurface_Property">
      <con:hasADEOfOuterCeilingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfOuterFloorSurface_Property">
      <con:hasADEOfOuterFloorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfRoofSurface_Property">
      <con:hasADEOfRoofSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfWallSurface_Property">
      <con:hasADEOfWallSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfWindow_Property">
      <con:hasADEOfWindow xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:ADEOfWindowSurface_Property">
      <con:hasADEOfWindowSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:conditionOfConstruction_Property">
      <con:conditionOfConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:dateOfConstruction_Property">
      <con:dateOfConstruction>
         <xsl:value-of select="text()"/>
      </con:dateOfConstruction>
   </xsl:template>
   <xsl:template name="con:dateOfDemolition_Property">
      <con:dateOfDemolition>
         <xsl:value-of select="text()"/>
      </con:dateOfDemolition>
   </xsl:template>
   <xsl:template name="con:constructionEvent_Property">
      <con:constructionEvent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:elevation_Property">
      <con:elevation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:height_Property">
      <con:height xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:occupancy_Property">
      <con:occupancy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfAbstractConstruction_Property">
      <con:adeOfAbstractConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:AbstractConstruction_Property">
      <con:hasAbstractConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:fillingSurface_Property">
      <con:fillingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfAbstractConstructionSurface_Property">
      <con:adeOfAbstractConstructionSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:AbstractConstructionSurface_Property">
      <con:hasAbstractConstructionSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:isStructuralElement_Property">
      <con:isStructuralElement>
         <xsl:value-of select="text()"/>
      </con:isStructuralElement>
   </xsl:template>
   <xsl:template name="con:filling_Property">
      <con:filling xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfAbstractConstructiveElement_Property">
      <con:adeOfAbstractConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:AbstractConstructiveElement_Property">
      <con:hasAbstractConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfAbstractFillingElement_Property">
      <con:adeOfAbstractFillingElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:AbstractFillingElement_Property">
      <con:hasAbstractFillingElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfAbstractFillingSurface_Property">
      <con:adeOfAbstractFillingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:AbstractFillingSurface_Property">
      <con:hasAbstractFillingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfAbstractFurniture_Property">
      <con:adeOfAbstractFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:AbstractFurniture_Property">
      <con:hasAbstractFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:relationToConstruction_Property">
      <con:relationToConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfAbstractInstallation_Property">
      <con:adeOfAbstractInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:AbstractInstallation_Property">
      <con:hasAbstractInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfCeilingSurface_Property">
      <con:adeOfCeilingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:CeilingSurface_Property">
      <con:hasCeilingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:event_Property">
      <con:event xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:event">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="con:event"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:dateOfEvent_Property">
      <con:dateOfEvent>
         <xsl:value-of select="text()"/>
      </con:dateOfEvent>
   </xsl:template>
   <xsl:template name="con:description_Property">
      <con:description>
         <xsl:value-of select="text()"/>
      </con:description>
   </xsl:template>
   <xsl:template name="con:ConstructionEvent_Property">
      <con:hasConstructionEvent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:class_Property">
      <con:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="con:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:function_Property">
      <con:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="con:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:usage_Property">
      <con:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="con:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:address_Property">
      <con:address xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfDoor_Property">
      <con:adeOfDoor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:Door_Property">
      <con:hasDoor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfDoorSurface_Property">
      <con:adeOfDoorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:DoorSurface_Property">
      <con:hasDoorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:elevationReference_Property">
      <con:elevationReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:elevationReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="con:elevationReference"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:elevationValue_Property">
      <con:elevationValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:DirectPositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:elevationValue">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:DirectPositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="con:elevationValue"/>
         <xsl:call-template name="gml:DirectPositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:Elevation_Property">
      <con:hasElevation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfFloorSurface_Property">
      <con:adeOfFloorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:FloorSurface_Property">
      <con:hasFloorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfGroundSurface_Property">
      <con:adeOfGroundSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:GroundSurface_Property">
      <con:hasGroundSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:highReference_Property">
      <con:highReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:highReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="con:highReference"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:lowReference_Property">
      <con:lowReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:lowReference">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="con:lowReference"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:status_Property">
      <con:status xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:value_Property">
      <con:value xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//con:value">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="con:value"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="con:Height_Property">
      <con:hasHeight xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfInteriorWallSurface_Property">
      <con:adeOfInteriorWallSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:InteriorWallSurface_Property">
      <con:hasInteriorWallSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfOtherConstruction_Property">
      <con:adeOfOtherConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:OtherConstruction_Property">
      <con:hasOtherConstruction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfOuterCeilingSurface_Property">
      <con:adeOfOuterCeilingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:OuterCeilingSurface_Property">
      <con:hasOuterCeilingSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfOuterFloorSurface_Property">
      <con:adeOfOuterFloorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:OuterFloorSurface_Property">
      <con:hasOuterFloorSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfRoofSurface_Property">
      <con:adeOfRoofSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:RoofSurface_Property">
      <con:hasRoofSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfWallSurface_Property">
      <con:adeOfWallSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:WallSurface_Property">
      <con:hasWallSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfWindow_Property">
      <con:adeOfWindow xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:Window_Property">
      <con:hasWindow xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="con:adeOfWindowSurface_Property">
      <con:adeOfWindowSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="con:WindowSurface_Property">
      <con:hasWindowSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:ADEOfAbstractAtomicTimeseries_Property">
      <dyn:hasADEOfAbstractAtomicTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:ADEOfAbstractTimeseries_Property">
      <dyn:hasADEOfAbstractTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:ADEOfCompositeTimeseries_Property">
      <dyn:hasADEOfCompositeTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:ADEOfDynamizer_Property">
      <dyn:hasADEOfDynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:ADEOfGenericTimeseries_Property">
      <dyn:hasADEOfGenericTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:ADEOfStandardFileTimeseries_Property">
      <dyn:hasADEOfStandardFileTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:ADEOfTabulatedFileTimeseries_Property">
      <dyn:hasADEOfTabulatedFileTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:observationProperty_Property">
      <dyn:observationProperty>
         <xsl:value-of select="text()"/>
      </dyn:observationProperty>
   </xsl:template>
   <xsl:template name="dyn:uom_Property">
      <dyn:uom>
         <xsl:value-of select="text()"/>
      </dyn:uom>
   </xsl:template>
   <xsl:template name="dyn:adeOfAbstractAtomicTimeseries_Property">
      <dyn:adeOfAbstractAtomicTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:AbstractAtomicTimeseries_Property">
      <dyn:hasAbstractAtomicTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:firstTimestamp_Property">
      <dyn:firstTimestamp xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:TimePositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:firstTimestamp">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:TimePositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:firstTimestamp"/>
         <xsl:call-template name="gml:TimePositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:lastTimestamp_Property">
      <dyn:lastTimestamp xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:TimePositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:lastTimestamp">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:TimePositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:lastTimestamp"/>
         <xsl:call-template name="gml:TimePositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:adeOfAbstractTimeseries_Property">
      <dyn:adeOfAbstractTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:AbstractTimeseries_Property">
      <dyn:hasAbstractTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:component_Property">
      <dyn:component xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:adeOfCompositeTimeseries_Property">
      <dyn:adeOfCompositeTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:CompositeTimeseries_Property">
      <dyn:hasCompositeTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:attributeRef_Property">
      <dyn:attributeRef>
         <xsl:value-of select="text()"/>
      </dyn:attributeRef>
   </xsl:template>
   <xsl:template name="dyn:startTime_Property">
      <dyn:startTime xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:TimePositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:startTime">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:TimePositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:startTime"/>
         <xsl:call-template name="gml:TimePositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:endTime_Property">
      <dyn:endTime xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:TimePositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:endTime">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:TimePositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:endTime"/>
         <xsl:call-template name="gml:TimePositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:dynamicData_Property">
      <dyn:dynamicData xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:sensorConnection_Property">
      <dyn:sensorConnection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:adeOfDynamizer_Property">
      <dyn:adeOfDynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:Dynamizer_Property">
      <dyn:hasDynamizer xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:valueType_Property">
      <dyn:valueType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:timeValuePair_Property">
      <dyn:timeValuePair xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:adeOfGenericTimeseries_Property">
      <dyn:adeOfGenericTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:GenericTimeseries_Property">
      <dyn:hasGenericTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:connectionType_Property">
      <dyn:connectionType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:connectionType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:connectionType"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:sensorID_Property">
      <dyn:sensorID>
         <xsl:value-of select="text()"/>
      </dyn:sensorID>
   </xsl:template>
   <xsl:template name="dyn:sensorName_Property">
      <dyn:sensorName>
         <xsl:value-of select="text()"/>
      </dyn:sensorName>
   </xsl:template>
   <xsl:template name="dyn:observationID_Property">
      <dyn:observationID>
         <xsl:value-of select="text()"/>
      </dyn:observationID>
   </xsl:template>
   <xsl:template name="dyn:datastreamID_Property">
      <dyn:datastreamID>
         <xsl:value-of select="text()"/>
      </dyn:datastreamID>
   </xsl:template>
   <xsl:template name="dyn:baseURL_Property">
      <dyn:baseURL>
         <xsl:value-of select="text()"/>
      </dyn:baseURL>
   </xsl:template>
   <xsl:template name="dyn:authType_Property">
      <dyn:authType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:authType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:authType"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:mqttServer_Property">
      <dyn:mqttServer>
         <xsl:value-of select="text()"/>
      </dyn:mqttServer>
   </xsl:template>
   <xsl:template name="dyn:mqttTopic_Property">
      <dyn:mqttTopic>
         <xsl:value-of select="text()"/>
      </dyn:mqttTopic>
   </xsl:template>
   <xsl:template name="dyn:linkToObservation_Property">
      <dyn:linkToObservation>
         <xsl:value-of select="text()"/>
      </dyn:linkToObservation>
   </xsl:template>
   <xsl:template name="dyn:linkToSensorDescription_Property">
      <dyn:linkToSensorDescription>
         <xsl:value-of select="text()"/>
      </dyn:linkToSensorDescription>
   </xsl:template>
   <xsl:template name="dyn:sensorLocation_Property">
      <dyn:sensorLocation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:SensorConnection_Property">
      <dyn:hasSensorConnection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:fileLocation_Property">
      <dyn:fileLocation>
         <xsl:value-of select="text()"/>
      </dyn:fileLocation>
   </xsl:template>
   <xsl:template name="dyn:fileType_Property">
      <dyn:fileType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:fileType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:fileType"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:mimeType_Property">
      <dyn:mimeType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:mimeType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:mimeType"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:adeOfStandardFileTimeseries_Property">
      <dyn:adeOfStandardFileTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:StandardFileTimeseries_Property">
      <dyn:hasStandardFileTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:numberOfHeaderLines_Property">
      <dyn:numberOfHeaderLines>
         <xsl:value-of select="text()"/>
      </dyn:numberOfHeaderLines>
   </xsl:template>
   <xsl:template name="dyn:fieldSeparator_Property">
      <dyn:fieldSeparator>
         <xsl:value-of select="text()"/>
      </dyn:fieldSeparator>
   </xsl:template>
   <xsl:template name="dyn:decimalSymbol_Property">
      <dyn:decimalSymbol>
         <xsl:value-of select="text()"/>
      </dyn:decimalSymbol>
   </xsl:template>
   <xsl:template name="dyn:idColumnNo_Property">
      <dyn:idColumnNo>
         <xsl:value-of select="text()"/>
      </dyn:idColumnNo>
   </xsl:template>
   <xsl:template name="dyn:idColumnName_Property">
      <dyn:idColumnName>
         <xsl:value-of select="text()"/>
      </dyn:idColumnName>
   </xsl:template>
   <xsl:template name="dyn:idValue_Property">
      <dyn:idValue>
         <xsl:value-of select="text()"/>
      </dyn:idValue>
   </xsl:template>
   <xsl:template name="dyn:timeColumnNo_Property">
      <dyn:timeColumnNo>
         <xsl:value-of select="text()"/>
      </dyn:timeColumnNo>
   </xsl:template>
   <xsl:template name="dyn:timeColumnName_Property">
      <dyn:timeColumnName>
         <xsl:value-of select="text()"/>
      </dyn:timeColumnName>
   </xsl:template>
   <xsl:template name="dyn:valueColumnNo_Property">
      <dyn:valueColumnNo>
         <xsl:value-of select="text()"/>
      </dyn:valueColumnNo>
   </xsl:template>
   <xsl:template name="dyn:valueColumnName_Property">
      <dyn:valueColumnName>
         <xsl:value-of select="text()"/>
      </dyn:valueColumnName>
   </xsl:template>
   <xsl:template name="dyn:adeOfTabulatedFileTimeseries_Property">
      <dyn:adeOfTabulatedFileTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:TabulatedFileTimeseries_Property">
      <dyn:hasTabulatedFileTimeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:timestamp_Property">
      <dyn:timestamp xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:TimePositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//dyn:timestamp">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:TimePositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="dyn:timestamp"/>
         <xsl:call-template name="gml:TimePositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="dyn:intValue_Property">
      <dyn:intValue>
         <xsl:value-of select="text()"/>
      </dyn:intValue>
   </xsl:template>
   <xsl:template name="dyn:doubleValue_Property">
      <dyn:doubleValue>
         <xsl:value-of select="text()"/>
      </dyn:doubleValue>
   </xsl:template>
   <xsl:template name="dyn:stringValue_Property">
      <dyn:stringValue>
         <xsl:value-of select="text()"/>
      </dyn:stringValue>
   </xsl:template>
   <xsl:template name="dyn:geometryValue_Property">
      <dyn:geometryValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:uriValue_Property">
      <dyn:uriValue>
         <xsl:value-of select="text()"/>
      </dyn:uriValue>
   </xsl:template>
   <xsl:template name="dyn:boolValue_Property">
      <dyn:boolValue>
         <xsl:value-of select="text()"/>
      </dyn:boolValue>
   </xsl:template>
   <xsl:template name="dyn:implicitGeometryValue_Property">
      <dyn:implicitGeometryValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:appearanceValue_Property">
      <dyn:appearanceValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:TimeValuePair_Property">
      <dyn:hasTimeValuePair xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dyn:repetitions_Property">
      <dyn:repetitions>
         <xsl:value-of select="text()"/>
      </dyn:repetitions>
   </xsl:template>
   <xsl:template name="dyn:additionalGap_Property">
      <dyn:additionalGap>
         <xsl:value-of select="text()"/>
      </dyn:additionalGap>
   </xsl:template>
   <xsl:template name="dyn:timeseries_Property">
      <dyn:timeseries xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dyn:TimeseriesComponent_Property">
      <dyn:hasTimeseriesComponent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericLogicalSpace_Property">
      <gen:hasADEOfGenericLogicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericOccupiedSpace_Property">
      <gen:hasADEOfGenericOccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericThematicSurface_Property">
      <gen:hasADEOfGenericThematicSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:ADEOfGenericUnoccupiedSpace_Property">
      <gen:hasADEOfGenericUnoccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:name_Property">
      <gen:name>
         <xsl:value-of select="text()"/>
      </gen:name>
   </xsl:template>
   <xsl:template name="gen:value_Property">
      <gen:value xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   <gen:value>
         <xsl:value-of select="text()"/>
      </gen:value>
   <gen:value xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:MeasureType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:value">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="gen:value"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:MeasureType', '_', generate-id() )}">
         <rdf:type rdf:resource="gen:value"/>
         <xsl:call-template name="gml:MeasureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:CodeAttribute_Property">
      <gen:hasCodeAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:DateAttribute_Property">
      <gen:hasDateAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:DoubleAttribute_Property">
      <gen:hasDoubleAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:codeSpace_Property">
      <gen:codeSpace>
         <xsl:value-of select="text()"/>
      </gen:codeSpace>
   </xsl:template>
   <xsl:template name="gen:genericAttribute_Property">
      <gen:genericAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gen:GenericAttributeSet_Property">
      <gen:hasGenericAttributeSet xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:class_Property">
      <gen:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="gen:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:function_Property">
      <gen:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="gen:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:usage_Property">
      <gen:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gen:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="gen:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gen:adeOfGenericLogicalSpace_Property">
      <gen:adeOfGenericLogicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gen:GenericLogicalSpace_Property">
      <gen:hasGenericLogicalSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:adeOfGenericOccupiedSpace_Property">
      <gen:adeOfGenericOccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gen:GenericOccupiedSpace_Property">
      <gen:hasGenericOccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:adeOfGenericThematicSurface_Property">
      <gen:adeOfGenericThematicSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gen:GenericThematicSurface_Property">
      <gen:hasGenericThematicSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:adeOfGenericUnoccupiedSpace_Property">
      <gen:adeOfGenericUnoccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gen:GenericUnoccupiedSpace_Property">
      <gen:hasGenericUnoccupiedSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:IntAttribute_Property">
      <gen:hasIntAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:MeasureAttribute_Property">
      <gen:hasMeasureAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:StringAttribute_Property">
      <gen:hasStringAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gen:UriAttribute_Property">
      <gen:hasUriAttribute xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="luse:ADEOfLandUse_Property">
      <luse:hasADEOfLandUse xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="luse:class_Property">
      <luse:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//luse:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="luse:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="luse:function_Property">
      <luse:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//luse:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="luse:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="luse:usage_Property">
      <luse:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//luse:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="luse:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="luse:adeOfLandUse_Property">
      <luse:adeOfLandUse xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="luse:LandUse_Property">
      <luse:hasLandUse xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="pcl:ADEOfPointCloud_Property">
      <pcl:hasADEOfPointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="pcl:mimeType_Property">
      <pcl:mimeType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//pcl:mimeType">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="pcl:mimeType"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="pcl:pointFile_Property">
      <pcl:pointFile>
         <xsl:value-of select="text()"/>
      </pcl:pointFile>
   </xsl:template>
   <xsl:template name="pcl:pointFileSrsName_Property">
      <pcl:pointFileSrsName>
         <xsl:value-of select="text()"/>
      </pcl:pointFileSrsName>
   </xsl:template>
   <xsl:template name="pcl:points_Property">
      <pcl:points xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="pcl:adeOfPointCloud_Property">
      <pcl:adeOfPointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="pcl:PointCloud_Property">
      <pcl:hasPointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:ADEOfAbstractReliefComponent_Property">
      <dem:hasADEOfAbstractReliefComponent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:ADEOfBreaklineRelief_Property">
      <dem:hasADEOfBreaklineRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:ADEOfMassPointRelief_Property">
      <dem:hasADEOfMassPointRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:ADEOfRasterRelief_Property">
      <dem:hasADEOfRasterRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:ADEOfReliefFeature_Property">
      <dem:hasADEOfReliefFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:ADEOfTINRelief_Property">
      <dem:hasADEOfTINRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:lod_Property">
      <dem:lod xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:extent_Property">
      <dem:extent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:adeOfAbstractReliefComponent_Property">
      <dem:adeOfAbstractReliefComponent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:AbstractReliefComponent_Property">
      <dem:hasAbstractReliefComponent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:ridgeOrValleyLines_Property">
      <dem:ridgeOrValleyLines xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:breaklines_Property">
      <dem:breaklines xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:adeOfBreaklineRelief_Property">
      <dem:adeOfBreaklineRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:BreaklineRelief_Property">
      <dem:hasBreaklineRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:reliefPoints_Property">
      <dem:reliefPoints xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:pointCloud_Property">
      <dem:pointCloud xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:adeOfMassPointRelief_Property">
      <dem:adeOfMassPointRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:MassPointRelief_Property">
      <dem:hasMassPointRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:grid_Property">
      <dem:grid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:RectifiedGridCoverage_Property">
      <gml:hasRectifiedGridCoverage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:adeOfRasterRelief_Property">
      <dem:adeOfRasterRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:RasterRelief_Property">
      <dem:hasRasterRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:reliefComponent_Property">
      <dem:reliefComponent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:adeOfReliefFeature_Property">
      <dem:adeOfReliefFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:ReliefFeature_Property">
      <dem:hasReliefFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:tin_Property">
      <dem:tin xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:TriangulatedSurface_Property">
      <gml:hasTriangulatedSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="dem:adeOfTINRelief_Property">
      <dem:adeOfTINRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="dem:TINRelief_Property">
      <dem:hasTINRelief xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfAbstractTransportationSpace_Property">
      <tran:hasADEOfAbstractTransportationSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfAuxiliaryTrafficArea_Property">
      <tran:hasADEOfAuxiliaryTrafficArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfAuxiliaryTrafficSpace_Property">
      <tran:hasADEOfAuxiliaryTrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfClearanceSpace_Property">
      <tran:hasADEOfClearanceSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfHole_Property">
      <tran:hasADEOfHole xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfHoleSurface_Property">
      <tran:hasADEOfHoleSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfIntersection_Property">
      <tran:hasADEOfIntersection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfMarking_Property">
      <tran:hasADEOfMarking xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfRailway_Property">
      <tran:hasADEOfRailway xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfRoad_Property">
      <tran:hasADEOfRoad xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfSection_Property">
      <tran:hasADEOfSection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfSquare_Property">
      <tran:hasADEOfSquare xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfTrack_Property">
      <tran:hasADEOfTrack xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfTrafficArea_Property">
      <tran:hasADEOfTrafficArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfTrafficSpace_Property">
      <tran:hasADEOfTrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:ADEOfWaterway_Property">
      <tran:hasADEOfWaterway xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:trafficDirection_Property">
      <tran:trafficDirection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:occupancy_Property">
      <tran:occupancy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:trafficSpace_Property">
      <tran:trafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:TrafficSpace_Property">
      <tran:hasTrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:auxiliaryTrafficSpace_Property">
      <tran:auxiliaryTrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:AuxiliaryTrafficSpace_Property">
      <tran:hasAuxiliaryTrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:hole_Property">
      <tran:hole xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:Hole_Property">
      <tran:hasHole xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:marking_Property">
      <tran:marking xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:Marking_Property">
      <tran:hasMarking xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfAbstractTransportationSpace_Property">
      <tran:adeOfAbstractTransportationSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:AbstractTransportationSpace_Property">
      <tran:hasAbstractTransportationSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:class_Property">
      <tran:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="tran:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:function_Property">
      <tran:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="tran:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:usage_Property">
      <tran:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="tran:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:surfaceMaterial_Property">
      <tran:surfaceMaterial xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tran:surfaceMaterial">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="tran:surfaceMaterial"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tran:adeOfAuxiliaryTrafficArea_Property">
      <tran:adeOfAuxiliaryTrafficArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:AuxiliaryTrafficArea_Property">
      <tran:hasAuxiliaryTrafficArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:granularity_Property">
      <tran:granularity xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfAuxiliaryTrafficSpace_Property">
      <tran:adeOfAuxiliaryTrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfClearanceSpace_Property">
      <tran:adeOfClearanceSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:ClearanceSpace_Property">
      <tran:hasClearanceSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfHole_Property">
      <tran:adeOfHole xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfHoleSurface_Property">
      <tran:adeOfHoleSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:HoleSurface_Property">
      <tran:hasHoleSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfIntersection_Property">
      <tran:adeOfIntersection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:Intersection_Property">
      <tran:hasIntersection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfMarking_Property">
      <tran:adeOfMarking xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:section_Property">
      <tran:section xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:Section_Property">
      <tran:hasSection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:intersection_Property">
      <tran:intersection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfRailway_Property">
      <tran:adeOfRailway xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:Railway_Property">
      <tran:hasRailway xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfRoad_Property">
      <tran:adeOfRoad xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:Road_Property">
      <tran:hasRoad xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfSection_Property">
      <tran:adeOfSection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfSquare_Property">
      <tran:adeOfSquare xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:Square_Property">
      <tran:hasSquare xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfTrack_Property">
      <tran:adeOfTrack xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:Track_Property">
      <tran:hasTrack xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfTrafficArea_Property">
      <tran:adeOfTrafficArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:TrafficArea_Property">
      <tran:hasTrafficArea xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tran:predecessor_Property">
      <tran:predecessor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:successor_Property">
      <tran:successor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:clearanceSpace_Property">
      <tran:clearanceSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfTrafficSpace_Property">
      <tran:adeOfTrafficSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:adeOfWaterway_Property">
      <tran:adeOfWaterway xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tran:Waterway_Property">
      <tran:hasWaterway xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:ADEOfAbstractTunnel_Property">
      <tun:hasADEOfAbstractTunnel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:ADEOfHollowSpace_Property">
      <tun:hasADEOfHollowSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnel_Property">
      <tun:hasADEOfTunnel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelConstructiveElement_Property">
      <tun:hasADEOfTunnelConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelFurniture_Property">
      <tun:hasADEOfTunnelFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelInstallation_Property">
      <tun:hasADEOfTunnelInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:ADEOfTunnelPart_Property">
      <tun:hasADEOfTunnelPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:class_Property">
      <tun:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="tun:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:function_Property">
      <tun:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="tun:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:usage_Property">
      <tun:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//tun:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="tun:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="tun:tunnelConstructiveElement_Property">
      <tun:tunnelConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:TunnelConstructiveElement_Property">
      <tun:hasTunnelConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:tunnelInstallation_Property">
      <tun:tunnelInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:TunnelInstallation_Property">
      <tun:hasTunnelInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:hollowSpace_Property">
      <tun:hollowSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:HollowSpace_Property">
      <tun:hasHollowSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:tunnelFurniture_Property">
      <tun:tunnelFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:TunnelFurniture_Property">
      <tun:hasTunnelFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:adeOfAbstractTunnel_Property">
      <tun:adeOfAbstractTunnel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:AbstractTunnel_Property">
      <tun:hasAbstractTunnel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:adeOfHollowSpace_Property">
      <tun:adeOfHollowSpace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:tunnelPart_Property">
      <tun:tunnelPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:TunnelPart_Property">
      <tun:hasTunnelPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:adeOfTunnel_Property">
      <tun:adeOfTunnel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:Tunnel_Property">
      <tun:hasTunnel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="tun:adeOfTunnelConstructiveElement_Property">
      <tun:adeOfTunnelConstructiveElement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:adeOfTunnelFurniture_Property">
      <tun:adeOfTunnelFurniture xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:adeOfTunnelInstallation_Property">
      <tun:adeOfTunnelInstallation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="tun:adeOfTunnelPart_Property">
      <tun:adeOfTunnelPart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="veg:ADEOfAbstractVegetationObject_Property">
      <veg:hasADEOfAbstractVegetationObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="veg:ADEOfPlantCover_Property">
      <veg:hasADEOfPlantCover xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="veg:ADEOfSolitaryVegetationObject_Property">
      <veg:hasADEOfSolitaryVegetationObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="veg:adeOfAbstractVegetationObject_Property">
      <veg:adeOfAbstractVegetationObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="veg:AbstractVegetationObject_Property">
      <veg:hasAbstractVegetationObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="veg:class_Property">
      <veg:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:function_Property">
      <veg:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:usage_Property">
      <veg:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:averageHeight_Property">
      <veg:averageHeight xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:averageHeight">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:averageHeight"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:minHeight_Property">
      <veg:minHeight xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:minHeight">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:minHeight"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:maxHeight_Property">
      <veg:maxHeight xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:maxHeight">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:maxHeight"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:adeOfPlantCover_Property">
      <veg:adeOfPlantCover xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="veg:PlantCover_Property">
      <veg:hasPlantCover xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="veg:species_Property">
      <veg:species xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:species">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:species"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:height_Property">
      <veg:height xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:height">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:height"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:trunkDiameter_Property">
      <veg:trunkDiameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:trunkDiameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:trunkDiameter"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:crownDiameter_Property">
      <veg:crownDiameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:crownDiameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:crownDiameter"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:rootBallDiameter_Property">
      <veg:rootBallDiameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:rootBallDiameter">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:rootBallDiameter"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:maxRootBallDepth_Property">
      <veg:maxRootBallDepth xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//veg:maxRootBallDepth">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="veg:maxRootBallDepth"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="veg:adeOfSolitaryVegetationObject_Property">
      <veg:adeOfSolitaryVegetationObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="veg:SolitaryVegetationObject_Property">
      <veg:hasSolitaryVegetationObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="vers:ADEOfVersion_Property">
      <vers:hasADEOfVersion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="vers:ADEOfVersionTransition_Property">
      <vers:hasADEOfVersionTransition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="vers:type_Property">
      <vers:type xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="vers:oldFeature_Property">
      <vers:oldFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="vers:newFeature_Property">
      <vers:newFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="vers:Transaction_Property">
      <vers:hasTransaction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="vers:tag_Property">
      <vers:tag>
         <xsl:value-of select="text()"/>
      </vers:tag>
   </xsl:template>
   <xsl:template name="vers:versionMember_Property">
      <vers:versionMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="vers:adeOfVersion_Property">
      <vers:adeOfVersion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="vers:Version_Property">
      <vers:hasVersion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="vers:reason_Property">
      <vers:reason>
         <xsl:value-of select="text()"/>
      </vers:reason>
   </xsl:template>
   <xsl:template name="vers:clonePredecessor_Property">
      <vers:clonePredecessor>
         <xsl:value-of select="text()"/>
      </vers:clonePredecessor>
   </xsl:template>
   <xsl:template name="vers:from_Property">
      <vers:from xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="vers:to_Property">
      <vers:to xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="vers:transaction_Property">
      <vers:transaction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="vers:adeOfVersionTransition_Property">
      <vers:adeOfVersionTransition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="vers:VersionTransition_Property">
      <vers:hasVersionTransition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="wtr:ADEOfAbstractWaterBoundarySurface_Property">
      <wtr:hasADEOfAbstractWaterBoundarySurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="wtr:ADEOfWaterBody_Property">
      <wtr:hasADEOfWaterBody xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="wtr:ADEOfWaterGroundSurface_Property">
      <wtr:hasADEOfWaterGroundSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="wtr:ADEOfWaterSurface_Property">
      <wtr:hasADEOfWaterSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="wtr:adeOfAbstractWaterBoundarySurface_Property">
      <wtr:adeOfAbstractWaterBoundarySurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="wtr:AbstractWaterBoundarySurface_Property">
      <wtr:hasAbstractWaterBoundarySurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="wtr:class_Property">
      <wtr:class xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:class">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:class"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:function_Property">
      <wtr:function xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:function">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:function"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:usage_Property">
      <wtr:usage xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:usage">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:usage"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:adeOfWaterBody_Property">
      <wtr:adeOfWaterBody xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="wtr:WaterBody_Property">
      <wtr:hasWaterBody xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="wtr:adeOfWaterGroundSurface_Property">
      <wtr:adeOfWaterGroundSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="wtr:WaterGroundSurface_Property">
      <wtr:hasWaterGroundSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="wtr:waterLevel_Property">
      <wtr:waterLevel xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//wtr:waterLevel">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="wtr:waterLevel"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="wtr:adeOfWaterSurface_Property">
      <wtr:adeOfWaterSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="wtr:WaterSurface_Property">
      <wtr:hasWaterSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:domainOfValidity_Property">
      <gml:hasdomainOfValidity xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:domainOfValidity>
         <xsl:value-of select="text()"/>
      </gml:domainOfValidity>
   </xsl:template>
   <xsl:template name="gml:scope_Property">
      <gml:hasscope xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:operationVersion_Property">
      <gml:hasoperationVersion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:coordinateOperationAccuracy_Property">
      <gml:hascoordinateOperationAccuracy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:sourceCRS_Property">
      <gml:hassourceCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:targetCRS_Property">
      <gml:hastargetCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gmd:AbstractDQ_PositionalAccuracy_Property">
      <gmd:hasAbstractDQ_PositionalAccuracy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCoordinateOperation_Property">
      <gml:hasAbstractCoordinateOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractSingleOperation_Property">
      <gml:hasAbstractSingleOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:metaDataProperty_Property">
      <gml:hasmetaDataProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:description_Property">
      <gml:hasdescription xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:description>
         <xsl:value-of select="text()"/>
      </gml:description>
   </xsl:template>
   <xsl:template name="gml:descriptionReference_Property">
      <gml:hasdescriptionReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:identifier_Property">
      <gml:hasidentifier xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:name_Property">
      <gml:hasname xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:remarks_Property">
      <gml:hasremarks xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralConversion_Property">
      <gml:hasAbstractGeneralConversion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralTransformation_Property">
      <gml:hasAbstractGeneralTransformation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:coordOperation_Property">
      <gml:hascoordOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:ConcatenatedOperation_Property">
      <gml:hasConcatenatedOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:modifiedCoordinate_Property">
      <gml:hasmodifiedCoordinate xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:PassThroughOperation_Property">
      <gml:hasPassThroughOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:method_Property">
      <gml:hasmethod xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:parameterValue_Property">
      <gml:hasparameterValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Conversion_Property">
      <gml:hasConversion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Transformation_Property">
      <gml:hasTransformation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralParameterValue_Property">
      <gml:hasAbstractGeneralParameterValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:value_Property">
      <gml:hasvalue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:value>
         <xsl:value-of select="text()"/>
      </gml:value>
   </xsl:template>
   <xsl:template name="gml:dmsAngleValue_Property">
      <gml:hasdmsAngleValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:stringValue_Property">
      <gml:hasstringValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:integerValue_Property">
      <gml:hasintegerValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:booleanValue_Property">
      <gml:hasbooleanValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:valueList_Property">
      <gml:hasvalueList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:integerValueList_Property">
      <gml:hasintegerValueList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:valueFile_Property">
      <gml:hasvalueFile xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:operationParameter_Property">
      <gml:hasoperationParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:group_Property">
      <gml:hasgroup xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:group xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:formulaCitation_Property">
      <gml:hasformulaCitation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:formula_Property">
      <gml:hasformula xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:formula xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:sourceDimensions_Property">
      <gml:hassourceDimensions xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:targetDimensions_Property">
      <gml:hastargetDimensions xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:parameter_Property">
      <gml:hasparameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gmd:CI_Citation_Property">
      <gmd:hasCI_Citation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:OperationMethod_Property">
      <gml:hasOperationMethod xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:minimumOccurs_Property">
      <gml:hasminimumOccurs xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeneralOperationParameter_Property">
      <gml:hasAbstractGeneralOperationParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:OperationParameter_Property">
      <gml:hasOperationParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:maximumOccurs_Property">
      <gml:hasmaximumOccurs xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:OperationParameterGroup_Property">
      <gml:hasOperationParameterGroup xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractSingleCRS_Property">
      <gml:hasAbstractSingleCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:conversion_Property">
      <gml:hasconversion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:componentReferenceSystem_Property">
      <gml:hascomponentReferenceSystem xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:CompoundCRS_Property">
      <gml:hasCompoundCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:ellipsoidalCS_Property">
      <gml:hasellipsoidalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:cartesianCS_Property">
      <gml:hascartesianCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:sphericalCS_Property">
      <gml:hassphericalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:geodeticDatum_Property">
      <gml:hasgeodeticDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:GeodeticCRS_Property">
      <gml:hasGeodeticCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:verticalCS_Property">
      <gml:hasverticalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:verticalDatum_Property">
      <gml:hasverticalDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:VerticalCRS_Property">
      <gml:hasVerticalCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:baseGeodeticCRS_Property">
      <gml:hasbaseGeodeticCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:baseGeographicCRS_Property">
      <gml:hasbaseGeographicCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:ProjectedCRS_Property">
      <gml:hasProjectedCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:baseCRS_Property">
      <gml:hasbaseCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:derivedCRSType_Property">
      <gml:hasderivedCRSType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:coordinateSystem_Property">
      <gml:hascoordinateSystem xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:DerivedCRS_Property">
      <gml:hasDerivedCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:affineCS_Property">
      <gml:hasaffineCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:cylindricalCS_Property">
      <gml:hascylindricalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:linearCS_Property">
      <gml:haslinearCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:polarCS_Property">
      <gml:haspolarCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:userDefinedCS_Property">
      <gml:hasuserDefinedCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:engineeringDatum_Property">
      <gml:hasengineeringDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:usesObliqueCartesianCS_Property">
      <gml:hasusesObliqueCartesianCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:imageDatum_Property">
      <gml:hasimageDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:ImageCRS_Property">
      <gml:hasImageCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:timeCS_Property">
      <gml:hastimeCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:usesTemporalCS_Property">
      <gml:hasusesTemporalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:temporalDatum_Property">
      <gml:hastemporalDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TemporalCRS_Property">
      <gml:hasTemporalCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:axisAbbrev_Property">
      <gml:hasaxisAbbrev xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:axisDirection_Property">
      <gml:hasaxisDirection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:minimumValue_Property">
      <gml:hasminimumValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:maximumValue_Property">
      <gml:hasmaximumValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:rangeMeaning_Property">
      <gml:hasrangeMeaning xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:CoordinateSystemAxis_Property">
      <gml:hasCoordinateSystemAxis xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:axis_Property">
      <gml:hasaxis xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCoordinateSystem_Property">
      <gml:hasAbstractCoordinateSystem xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:EllipsoidalCS_Property">
      <gml:hasEllipsoidalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:CartesianCS_Property">
      <gml:hasCartesianCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:VerticalCS_Property">
      <gml:hasVerticalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TimeCS_Property">
      <gml:hasTimeCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:LinearCS_Property">
      <gml:hasLinearCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:UserDefinedCS_Property">
      <gml:hasUserDefinedCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:SphericalCS_Property">
      <gml:hasSphericalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:PolarCS_Property">
      <gml:hasPolarCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:CylindricalCS_Property">
      <gml:hasCylindricalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AffineCS_Property">
      <gml:hasAffineCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:domainSet_Property">
      <gml:hasdomainSet xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:rangeSet_Property">
      <gml:hasrangeSet xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:coverageFunction_Property">
      <gml:hascoverageFunction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeometry_Property">
      <gml:hasAbstractGeometry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeObject_Property">
      <gml:hasAbstractTimeObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:ValueArray_Property">
      <gml:hasValueArray xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractScalarValueList_Property">
      <gml:hasAbstractScalarValueList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:DataBlock_Property">
      <gml:hasDataBlock xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:File_Property">
      <gml:hasFile xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:rangeParameters_Property">
      <gml:hasrangeParameters xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:tupleList_Property">
      <gml:hastupleList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:doubleOrNilReasonTupleList_Property">
      <gml:hasdoubleOrNilReasonTupleList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:fileName_Property">
      <gml:fileName>
         <xsl:value-of select="text()"/>
      </gml:fileName>
   </xsl:template>
   <xsl:template name="gml:fileReference_Property">
      <gml:fileReference>
         <xsl:value-of select="text()"/>
      </gml:fileReference>
   </xsl:template>
   <xsl:template name="gml:fileStructure_Property">
      <gml:fileStructure xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:fileStructure">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:fileStructure"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:mimeType_Property">
      <gml:mimeType>
         <xsl:value-of select="text()"/>
      </gml:mimeType>
   </xsl:template>
   <xsl:template name="gml:compression_Property">
      <gml:compression>
         <xsl:value-of select="text()"/>
      </gml:compression>
   </xsl:template>
   <xsl:template name="gml:MappingRule_Property">
      <gml:hasMappingRule xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:CoverageMappingRule_Property">
      <gml:hasCoverageMappingRule xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:GridFunction_Property">
      <gml:hasGridFunction xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:ruleDefinition_Property">
      <gml:ruleDefinition>
         <xsl:value-of select="text()"/>
      </gml:ruleDefinition>
   </xsl:template>
   <xsl:template name="gml:ruleReference_Property">
      <gml:ruleReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:sequenceRule_Property">
      <gml:sequenceRule xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:SequenceRuleType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:sequenceRule">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:SequenceRuleType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:sequenceRule"/>
         <xsl:call-template name="gml:SequenceRuleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:startPoint_Property">
      <gml:startPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:anchorDefinition_Property">
      <gml:hasanchorDefinition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:realizationEpoch_Property">
      <gml:hasrealizationEpoch xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractDatum_Property">
      <gml:hasAbstractDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:primeMeridian_Property">
      <gml:hasprimeMeridian xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:ellipsoid_Property">
      <gml:hasellipsoid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:GeodeticDatum_Property">
      <gml:hasGeodeticDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:semiMajorAxis_Property">
      <gml:hassemiMajorAxis xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:secondDefiningParameter_Property">
      <gml:hassecondDefiningParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:SecondDefiningParameter_Property">
      <gml:hasSecondDefiningParameter xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:inverseFlattening_Property">
      <gml:inverseFlattening xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:MeasureType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:inverseFlattening">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:MeasureType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:inverseFlattening"/>
         <xsl:call-template name="gml:MeasureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:semiMinorAxis_Property">
      <gml:semiMinorAxis xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:semiMinorAxis">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:semiMinorAxis"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:isSphere_Property">
      <gml:isSphere>
         <xsl:value-of select="text()"/>
      </gml:isSphere>
   </xsl:template>
   <xsl:template name="gml:Ellipsoid_Property">
      <gml:hasEllipsoid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:greenwichLongitude_Property">
      <gml:hasgreenwichLongitude xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:PrimeMeridian_Property">
      <gml:hasPrimeMeridian xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:EngineeringDatum_Property">
      <gml:hasEngineeringDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:pixelInCell_Property">
      <gml:haspixelInCell xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:ImageDatum_Property">
      <gml:hasImageDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:VerticalDatum_Property">
      <gml:hasVerticalDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:origin_Property">
      <gml:hasorigin xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:origin xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:TemporalDatum_Property">
      <gml:hasTemporalDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractStyle_Property">
      <gml:hasAbstractStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:featureStyle_Property">
      <gml:hasfeatureStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:graphStyle_Property">
      <gml:hasgraphStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:FeatureStyle_Property">
      <gml:hasFeatureStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:featureConstraint_Property">
      <gml:featureConstraint>
         <xsl:value-of select="text()"/>
      </gml:featureConstraint>
   </xsl:template>
   <xsl:template name="gml:geometryStyle_Property">
      <gml:hasgeometryStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:topologyStyle_Property">
      <gml:hastopologyStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:labelStyle_Property">
      <gml:haslabelStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:spatialResolution_Property">
      <gml:spatialResolution xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:ScaleType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:spatialResolution">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:ScaleType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:spatialResolution"/>
         <xsl:call-template name="gml:ScaleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:styleVariation_Property">
      <gml:styleVariation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:StyleVariationType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:styleVariation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:StyleVariationType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:styleVariation"/>
         <xsl:call-template name="gml:StyleVariationType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="smil20:animate_Property">
      <smil20:hasanimate xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="smil20:animateMotion_Property">
      <smil20:hasanimateMotion xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="smil20:animateColor_Property">
      <smil20:hasanimateColor xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="smil20:set_Property">
      <smil20:hasset xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:GeometryStyle_Property">
      <gml:hasGeometryStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:symbol_Property">
      <gml:hassymbol xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:style_Property">
      <gml:style>
         <xsl:value-of select="text()"/>
      </gml:style>
   </xsl:template>
   <xsl:template name="gml:TopologyStyle_Property">
      <gml:hasTopologyStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:LabelStyle_Property">
      <gml:hasLabelStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:label_Property">
      <gml:label xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:GraphStyle_Property">
      <gml:hasGraphStyle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:planar_Property">
      <gml:planar>
         <xsl:value-of select="text()"/>
      </gml:planar>
   </xsl:template>
   <xsl:template name="gml:directed_Property">
      <gml:directed>
         <xsl:value-of select="text()"/>
      </gml:directed>
   </xsl:template>
   <xsl:template name="gml:grid_Property">
      <gml:grid>
         <xsl:value-of select="text()"/>
      </gml:grid>
   </xsl:template>
   <xsl:template name="gml:minDistance_Property">
      <gml:minDistance>
         <xsl:value-of select="text()"/>
      </gml:minDistance>
   </xsl:template>
   <xsl:template name="gml:minAngle_Property">
      <gml:minAngle>
         <xsl:value-of select="text()"/>
      </gml:minAngle>
   </xsl:template>
   <xsl:template name="gml:graphType_Property">
      <gml:graphType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:drawingType_Property">
      <gml:drawingType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:lineType_Property">
      <gml:lineType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:aestheticCriteria_Property">
      <gml:aestheticCriteria xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:LabelExpression_Property">
      <gml:LabelExpression>
         <xsl:value-of select="text()"/>
      </gml:LabelExpression>
   </xsl:template>
   <xsl:template name="gml:AbstractOperation_Property">
      <gml:hasAbstractOperation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TemporalCS_Property">
      <gml:hasTemporalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:ObliqueCartesianCS_Property">
      <gml:hasObliqueCartesianCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:usesEllipsoidalCS_Property">
      <gml:hasusesEllipsoidalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:usesGeodeticDatum_Property">
      <gml:hasusesGeodeticDatum xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:GeographicCRS_Property">
      <gml:hasGeographicCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:usesCartesianCS_Property">
      <gml:hasusesCartesianCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:usesSphericalCS_Property">
      <gml:hasusesSphericalCS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:GeocentricCRS_Property">
      <gml:hasGeocentricCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:degrees_Property">
      <gml:hasdegrees xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:decimalMinutes_Property">
      <gml:hasdecimalMinutes xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:minutes_Property">
      <gml:hasminutes xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:seconds_Property">
      <gml:hasseconds xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:angle_Property">
      <gml:hasangle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:dmsAngle_Property">
      <gml:hasdmsAngle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractObject_Property">
      <gml:hasAbstractObject xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:member_Property">
      <gml:hasmember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:member xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:members_Property">
      <gml:hasmembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractMetaData_Property">
      <gml:hasAbstractMetaData xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:LocationKeyWord_Property">
      <gml:hasLocationKeyWord xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:LocationString_Property">
      <gml:hasLocationString xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Null_Property">
      <gml:hasNull xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractFeature_Property">
      <gml:hasAbstractFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:boundedBy_Property">
      <gml:hasboundedBy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:location_Property">
      <gml:haslocation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:location xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:DirectPositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:featureMember_Property">
      <gml:hasfeatureMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:featureMembers_Property">
      <gml:hasfeatureMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:DefinitionProxy_Property">
      <gml:hasDefinitionProxy xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:definitionRef_Property">
      <gml:hasdefinitionRef xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:position_Property">
      <gml:position xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:pos_Property">
      <gml:haspos xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:locationName_Property">
      <gml:haslocationName xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:locationReference_Property">
      <gml:haslocationReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:speed_Property">
      <gml:speed xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:MeasureType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:speed">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:MeasureType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:speed"/>
         <xsl:call-template name="gml:MeasureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:bearing_Property">
      <gml:bearing xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:acceleration_Property">
      <gml:acceleration xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:MeasureType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:acceleration">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:MeasureType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:acceleration"/>
         <xsl:call-template name="gml:MeasureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:elevation_Property">
      <gml:elevation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:MeasureType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:elevation">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:MeasureType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:elevation"/>
         <xsl:call-template name="gml:MeasureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:status_Property">
      <gml:hasstatus xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:statusReference_Property">
      <gml:hasstatusReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:dictionaryEntry_Property">
      <gml:hasdictionaryEntry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:indirectEntry_Property">
      <gml:hasindirectEntry xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Definition_Property">
      <gml:hasDefinition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:DirectionVector_Property">
      <gml:DirectionVector xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:DirectionDescription_Property">
      <gml:DirectionDescription xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:CompassPoint_Property">
      <gml:CompassPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:DirectionKeyword_Property">
      <gml:DirectionKeyword xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DirectionKeyword">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DirectionKeyword"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:DirectionString_Property">
      <gml:DirectionString xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:StringOrRefType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:DirectionString">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:StringOrRefType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:DirectionString"/>
         <xsl:call-template name="gml:StringOrRefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:vector_Property">
      <gml:hasvector xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:horizontalAngle_Property">
      <gml:horizontalAngle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:AngleType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:horizontalAngle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:AngleType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:horizontalAngle"/>
         <xsl:call-template name="gml:AngleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:verticalAngle_Property">
      <gml:verticalAngle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:AngleType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:verticalAngle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:AngleType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:verticalAngle"/>
         <xsl:call-template name="gml:AngleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:compassPoint_Property">
      <gml:compassPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:keyword_Property">
      <gml:keyword xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:CodeType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:keyword">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:CodeType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:keyword"/>
         <xsl:call-template name="gml:CodeType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:reference_Property">
      <gml:reference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:dynamicMembers_Property">
      <gml:hasdynamicMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:DynamicFeature_Property">
      <gml:hasDynamicFeature xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:validTime_Property">
      <gml:hasvalidTime xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:dataSource_Property">
      <gml:hasdataSource xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeSlice_Property">
      <gml:hasAbstractTimeSlice xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Envelope_Property">
      <gml:hasEnvelope xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:beginPosition_Property">
      <gml:beginPosition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:TimePositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:beginPosition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:TimePositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:beginPosition"/>
         <xsl:call-template name="gml:TimePositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:endPosition_Property">
      <gml:endPosition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:TimePositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:endPosition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:TimePositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:endPosition"/>
         <xsl:call-template name="gml:TimePositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:geometryMember_Property">
      <gml:hasgeometryMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:geometryMembers_Property">
      <gml:hasgeometryMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeometricAggregate_Property">
      <gml:hasAbstractGeometricAggregate xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:pointMember_Property">
      <gml:haspointMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:pointMembers_Property">
      <gml:haspointMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:MultiPoint_Property">
      <gml:hasMultiPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:curveMember_Property">
      <gml:hascurveMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:curveMembers_Property">
      <gml:hascurveMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:MultiCurve_Property">
      <gml:hasMultiCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:surfaceMember_Property">
      <gml:hassurfaceMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:surfaceMembers_Property">
      <gml:hassurfaceMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:MultiSurface_Property">
      <gml:hasMultiSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:solidMember_Property">
      <gml:hassolidMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:solidMembers_Property">
      <gml:hassolidMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:MultiSolid_Property">
      <gml:hasMultiSolid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:lowerCorner_Property">
      <gml:lowerCorner xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:DirectPositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:lowerCorner">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:DirectPositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:lowerCorner"/>
         <xsl:call-template name="gml:DirectPositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:upperCorner_Property">
      <gml:upperCorner xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:DirectPositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:upperCorner">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:DirectPositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:upperCorner"/>
         <xsl:call-template name="gml:DirectPositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:coordinates_Property">
      <gml:hascoordinates xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractGeometricPrimitive_Property">
      <gml:hasAbstractGeometricPrimitive xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Point_Property">
      <gml:hasPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCurve_Property">
      <gml:hasAbstractCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:pointProperty_Property">
      <gml:haspointProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:pointRep_Property">
      <gml:haspointRep xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:posList_Property">
      <gml:hasposList xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractSurface_Property">
      <gml:hasAbstractSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:exterior_Property">
      <gml:hasexterior xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:exterior xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:interior_Property">
      <gml:hasinterior xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:interior xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractRing_Property">
      <gml:hasAbstractRing xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:LinearRing_Property">
      <gml:hasLinearRing xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:element_Property">
      <gml:element xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:GeometricComplex_Property">
      <gml:hasGeometricComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:CompositeCurve_Property">
      <gml:hasCompositeCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:CompositeSurface_Property">
      <gml:hasCompositeSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:CompositeSolid_Property">
      <gml:hasCompositeSolid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:segments_Property">
      <gml:hassegments xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:baseCurve_Property">
      <gml:hasbaseCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCurveSegment_Property">
      <gml:hasAbstractCurveSegment xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:bulge_Property">
      <gml:bulge>
         <xsl:value-of select="text()"/>
      </gml:bulge>
   </xsl:template>
   <xsl:template name="gml:normal_Property">
      <gml:normal xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:VectorType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:normal">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:VectorType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:normal"/>
         <xsl:call-template name="gml:VectorType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:radius_Property">
      <gml:radius xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:radius">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:radius"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:startAngle_Property">
      <gml:startAngle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:AngleType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:startAngle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:AngleType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:startAngle"/>
         <xsl:call-template name="gml:AngleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:endAngle_Property">
      <gml:endAngle xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:AngleType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:endAngle">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:AngleType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:endAngle"/>
         <xsl:call-template name="gml:AngleType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:vectorAtStart_Property">
      <gml:vectorAtStart xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:VectorType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:vectorAtStart">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:VectorType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:vectorAtStart"/>
         <xsl:call-template name="gml:VectorType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:vectorAtEnd_Property">
      <gml:vectorAtEnd xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:VectorType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:vectorAtEnd">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:VectorType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:vectorAtEnd"/>
         <xsl:call-template name="gml:VectorType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:degree_Property">
      <gml:degree>
         <xsl:value-of select="text()"/>
      </gml:degree>
   </xsl:template>
   <xsl:template name="gml:knot_Property">
      <gml:knot xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:multiplicity_Property">
      <gml:multiplicity>
         <xsl:value-of select="text()"/>
      </gml:multiplicity>
   </xsl:template>
   <xsl:template name="gml:weight_Property">
      <gml:weight>
         <xsl:value-of select="text()"/>
      </gml:weight>
   </xsl:template>
   <xsl:template name="gml:Knot_Property">
      <gml:Knot xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:offsetBase_Property">
      <gml:offsetBase xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:distance_Property">
      <gml:distance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   <gml:distance xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:MeasureType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:distance">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:distance"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:MeasureType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:distance"/>
         <xsl:call-template name="gml:MeasureType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:refDirection_Property">
      <gml:refDirection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:VectorType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:refDirection">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:VectorType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:refDirection"/>
         <xsl:call-template name="gml:VectorType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:inDimension_Property">
      <gml:inDimension>
         <xsl:value-of select="text()"/>
      </gml:inDimension>
   </xsl:template>
   <xsl:template name="gml:outDimension_Property">
      <gml:outDimension>
         <xsl:value-of select="text()"/>
      </gml:outDimension>
   </xsl:template>
   <xsl:template name="gml:refLocation_Property">
      <gml:refLocation xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:AffinePlacement_Property">
      <gml:hasAffinePlacement xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:scaleFactor_Property">
      <gml:scaleFactor>
         <xsl:value-of select="text()"/>
      </gml:scaleFactor>
   </xsl:template>
   <xsl:template name="gml:startParameter_Property">
      <gml:startParameter>
         <xsl:value-of select="text()"/>
      </gml:startParameter>
   </xsl:template>
   <xsl:template name="gml:endParameter_Property">
      <gml:endParameter>
         <xsl:value-of select="text()"/>
      </gml:endParameter>
   </xsl:template>
   <xsl:template name="gml:patches_Property">
      <gml:haspatches xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:baseSurface_Property">
      <gml:hasbaseSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractSurfacePatch_Property">
      <gml:hasAbstractSurfacePatch xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Ring_Property">
      <gml:hasRing xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Row_Property">
      <gml:Row xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:stopLines_Property">
      <gml:stopLines xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:breakLines_Property">
      <gml:breakLines xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:maxLength_Property">
      <gml:maxLength xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:LengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:maxLength">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:LengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:maxLength"/>
         <xsl:call-template name="gml:LengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:controlPoint_Property">
      <gml:controlPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:LineStringSegment_Property">
      <gml:hasLineStringSegment xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractSolid_Property">
      <gml:hasAbstractSolid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Shell_Property">
      <gml:hasShell xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:limits_Property">
      <gml:limits xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:axisLabels_Property">
      <gml:axisLabels xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   <gml:axisLabels>
         <xsl:value-of select="./@gml:axisLabels"/>
      </gml:axisLabels>
   </xsl:template>
   <xsl:template name="gml:axisName_Property">
      <gml:axisName>
         <xsl:value-of select="text()"/>
      </gml:axisName>
   </xsl:template>
   <xsl:template name="gml:GridEnvelope_Property">
      <gml:GridEnvelope xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:low_Property">
      <gml:low xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:high_Property">
      <gml:high xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:offsetVector_Property">
      <gml:offsetVector xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:VectorType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:offsetVector">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:VectorType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:offsetVector"/>
         <xsl:call-template name="gml:VectorType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:using_Property">
      <gml:hasusing xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:target_Property">
      <gml:hastarget xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:resultOf_Property">
      <gml:hasresultOf xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:direction_Property">
      <gml:hasdirection xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   <gml:direction>
         <xsl:value-of select="./@gml:direction"/>
      </gml:direction>
   </xsl:template>
   <xsl:template name="gmd:EX_Extent_Property">
      <gmd:hasEX_Extent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractCRS_Property">
      <gml:hasAbstractCRS xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:relatedTime_Property">
      <gml:relatedTime xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTimePrimitive_Property">
      <gml:hasAbstractTimePrimitive xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:timePosition_Property">
      <gml:hastimePosition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TimeInstant_Property">
      <gml:hasTimeInstant xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:begin_Property">
      <gml:begin xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:end_Property">
      <gml:end xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:TimePeriod_Property">
      <gml:hasTimePeriod xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:originPosition_Property">
      <gml:originPosition xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:TimePositionType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:originPosition">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:TimePositionType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:originPosition"/>
         <xsl:call-template name="gml:TimePositionType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:interval_Property">
      <gml:interval xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:TimeIntervalLengthType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:interval">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:TimeIntervalLengthType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:interval"/>
         <xsl:call-template name="gml:TimeIntervalLengthType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:referenceFrame_Property">
      <gml:referenceFrame xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:referenceEvent_Property">
      <gml:referenceEvent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:StringOrRefType', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template match="//gml:referenceEvent">
      <owl:NamedIndividual xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:liris="https://liris.cnrs.fr/ontologies#" rdf:ID="{concat( 'gml:StringOrRefType', '_', generate-id() )}">
         <rdf:type rdf:resource="gml:referenceEvent"/>
         <xsl:call-template name="gml:StringOrRefType_Template"/>
      </owl:NamedIndividual>
   </xsl:template>
   <xsl:template name="gml:referenceDate_Property">
      <gml:referenceDate xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:julianReference_Property">
      <gml:julianReference>
         <xsl:value-of select="text()"/>
      </gml:julianReference>
   </xsl:template>
   <xsl:template name="gml:epochOfUse_Property">
      <gml:epochOfUse xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:TimeCalendar_Property">
      <gml:hasTimeCalendar xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TimeCalendarEra_Property">
      <gml:hasTimeCalendarEra xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:referenceTime_Property">
      <gml:referenceTime>
         <xsl:value-of select="text()"/>
      </gml:referenceTime>
   </xsl:template>
   <xsl:template name="gml:utcReference_Property">
      <gml:utcReference>
         <xsl:value-of select="text()"/>
      </gml:utcReference>
   </xsl:template>
   <xsl:template name="gml:dateBasis_Property">
      <gml:dateBasis xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:TimeClock_Property">
      <gml:hasTimeClock xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:component_Property">
      <gml:component xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:start_Property">
      <gml:start xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:extent_Property">
      <gml:extent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:TimeOrdinalEra_Property">
      <gml:hasTimeOrdinalEra xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:complex_Property">
      <gml:complex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTimeTopologyPrimitive_Property">
      <gml:hasAbstractTimeTopologyPrimitive xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:primitive_Property">
      <gml:primitive xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:TimeTopologyComplex_Property">
      <gml:hasTimeTopologyComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:previousEdge_Property">
      <gml:previousEdge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:nextEdge_Property">
      <gml:nextEdge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:TimeNode_Property">
      <gml:hasTimeNode xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TimeEdge_Property">
      <gml:hasTimeEdge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Node_Property">
      <gml:hasNode xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Edge_Property">
      <gml:hasEdge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Face_Property">
      <gml:hasFace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TopoSolid_Property">
      <gml:hasTopoSolid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:container_Property">
      <gml:container xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:directedEdge_Property">
      <gml:hasdirectedEdge xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:directedNode_Property">
      <gml:hasdirectedNode xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:directedFace_Property">
      <gml:hasdirectedFace xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:curveProperty_Property">
      <gml:hascurveProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:isolated_Property">
      <gml:isolated xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:directedTopoSolid_Property">
      <gml:hasdirectedTopoSolid xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:surfaceProperty_Property">
      <gml:hassurfaceProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:solidProperty_Property">
      <gml:hassolidProperty xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TopoPoint_Property">
      <gml:hasTopoPoint xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TopoCurve_Property">
      <gml:hasTopoCurve xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TopoSurface_Property">
      <gml:hasTopoSurface xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TopoVolume_Property">
      <gml:hasTopoVolume xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:maximalComplex_Property">
      <gml:hasmaximalComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:superComplex_Property">
      <gml:hassuperComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:subComplex_Property">
      <gml:hassubComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:topoPrimitiveMember_Property">
      <gml:hastopoPrimitiveMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:topoPrimitiveMembers_Property">
      <gml:hastopoPrimitiveMembers xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractTopoPrimitive_Property">
      <gml:hasAbstractTopoPrimitive xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:TopoComplex_Property">
      <gml:hasTopoComplex xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:quantityType_Property">
      <gml:hasquantityType xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:quantityTypeReference_Property">
      <gml:hasquantityTypeReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:catalogSymbol_Property">
      <gml:hascatalogSymbol xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:unitsSystem_Property">
      <gml:unitsSystem xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:derivationUnitTerm_Property">
      <gml:hasderivationUnitTerm xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:conversionToPreferredUnit_Property">
      <gml:hasconversionToPreferredUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:roughConversionToPreferredUnit_Property">
      <gml:hasroughConversionToPreferredUnit xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:factor_Property">
      <gml:factor>
         <xsl:value-of select="text()"/>
      </gml:factor>
   </xsl:template>
   <xsl:template name="gml:a_Property">
      <gml:a>
         <xsl:value-of select="text()"/>
      </gml:a>
   </xsl:template>
   <xsl:template name="gml:b_Property">
      <gml:b>
         <xsl:value-of select="text()"/>
      </gml:b>
   </xsl:template>
   <xsl:template name="gml:c_Property">
      <gml:c>
         <xsl:value-of select="text()"/>
      </gml:c>
   </xsl:template>
   <xsl:template name="gml:d_Property">
      <gml:d>
         <xsl:value-of select="text()"/>
      </gml:d>
   </xsl:template>
   <xsl:template name="gml:valueComponent_Property">
      <gml:hasvalueComponent xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:valueComponents_Property">
      <gml:hasvalueComponents xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Boolean_Property">
      <gml:hasBoolean xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:Boolean', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Category_Property">
      <gml:hasCategory xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:Category', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Quantity_Property">
      <gml:hasQuantity xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:Quantity', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:Count_Property">
      <gml:hasCount xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{concat( 'gml:Count', '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="core:cityObjectMember_Property">
      <core:cityObjectMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:appearanceMember_Property">
      <core:appearanceMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:versionMember_Property">
      <core:versionMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:versionTransitionMember_Property">
      <core:versionTransitionMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="core:featureMember_Property">
      <core:featureMember xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   </xsl:template>
   <xsl:template name="gml:history_Property">
      <gml:hashistory xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:dataSourceReference_Property">
      <gml:hasdataSourceReference xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:rows_Property">
      <gml:rows xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (./*/@gml:id) then ./*/@gml:id else concat( local-name(./*), '_', generate-id(./*) )}"/>
   <gml:rows>
         <xsl:value-of select="./@gml:rows"/>
      </gml:rows>
   </xsl:template>
   <xsl:template name="gml:duration_Property">
      <gml:hasduration xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:timeInterval_Property">
      <gml:hastimeInterval xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:AbstractValue_Property">
      <gml:hasAbstractValue xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" rdf:resource="{if (@gml:id) then @gml:id else concat( local-name(), '_', generate-id() )}"/>
   </xsl:template>
   <xsl:template name="gml:codeSpace_Property">
      <gml:codeSpace>
         <xsl:value-of select="./@gml:codeSpace"/>
      </gml:codeSpace>
   </xsl:template>
   <xsl:template name="gml:uom_Property">
      <gml:uom>
         <xsl:value-of select="./@gml:uom"/>
      </gml:uom>
   </xsl:template>
   <xsl:template name="gml:decimal_Property">
      <gml:decimal>
         <xsl:value-of select="./@gml:decimal"/>
      </gml:decimal>
   </xsl:template>
   <xsl:template name="gml:cs_Property">
      <gml:cs>
         <xsl:value-of select="./@gml:cs"/>
      </gml:cs>
   </xsl:template>
   <xsl:template name="gml:ts_Property">
      <gml:ts>
         <xsl:value-of select="./@gml:ts"/>
      </gml:ts>
   </xsl:template>
   <xsl:template name="gml:id_Property">
      <gml:id>
         <xsl:value-of select="./@gml:id"/>
      </gml:id>
   </xsl:template>
   <xsl:template name="gml:order_Property">
      <gml:order>
         <xsl:value-of select="./@gml:order"/>
      </gml:order>
   </xsl:template>
   <xsl:template name="gml:axisOrder_Property">
      <gml:axisOrder>
         <xsl:value-of select="./@gml:axisOrder"/>
      </gml:axisOrder>
   </xsl:template>
   <xsl:template name="gml:about_Property">
      <gml:about>
         <xsl:value-of select="./@gml:about"/>
      </gml:about>
   </xsl:template>
   <xsl:template name="gml:featureType_Property">
      <gml:featureType>
         <xsl:value-of select="./@gml:featureType"/>
      </gml:featureType>
   </xsl:template>
   <xsl:template name="gml:baseType_Property">
      <gml:baseType>
         <xsl:value-of select="./@gml:baseType"/>
      </gml:baseType>
   </xsl:template>
   <xsl:template name="gml:queryGrammar_Property">
      <gml:queryGrammar>
         <xsl:value-of select="./@gml:queryGrammar"/>
      </gml:queryGrammar>
   </xsl:template>
   <xsl:template name="gml:geometryProperty_Property">
      <gml:geometryProperty>
         <xsl:value-of select="./@gml:geometryProperty"/>
      </gml:geometryProperty>
   </xsl:template>
   <xsl:template name="gml:geometryType_Property">
      <gml:geometryType>
         <xsl:value-of select="./@gml:geometryType"/>
      </gml:geometryType>
   </xsl:template>
   <xsl:template name="gml:topologyProperty_Property">
      <gml:topologyProperty>
         <xsl:value-of select="./@gml:topologyProperty"/>
      </gml:topologyProperty>
   </xsl:template>
   <xsl:template name="gml:topologyType_Property">
      <gml:topologyType>
         <xsl:value-of select="./@gml:topologyType"/>
      </gml:topologyType>
   </xsl:template>
   <xsl:template name="gml:symbolType_Property">
      <gml:symbolType>
         <xsl:value-of select="./@gml:symbolType"/>
      </gml:symbolType>
   </xsl:template>
   <xsl:template name="gml:transform_Property">
      <gml:transform>
         <xsl:value-of select="./@gml:transform"/>
      </gml:transform>
   </xsl:template>
   <xsl:template name="gml:styleProperty_Property">
      <gml:styleProperty>
         <xsl:value-of select="./@gml:styleProperty"/>
      </gml:styleProperty>
   </xsl:template>
   <xsl:template name="gml:featurePropertyRange_Property">
      <gml:featurePropertyRange>
         <xsl:value-of select="./@gml:featurePropertyRange"/>
      </gml:featurePropertyRange>
   </xsl:template>
   <xsl:template name="gml:remoteSchema_Property">
      <gml:remoteSchema>
         <xsl:value-of select="./@gml:remoteSchema"/>
      </gml:remoteSchema>
   </xsl:template>
   <xsl:template name="gml:priority_Property">
      <gml:priority>
         <xsl:value-of select="./@gml:priority"/>
      </gml:priority>
   </xsl:template>
   <xsl:template name="gml:nilReason_Property">
      <gml:nilReason>
         <xsl:value-of select="./@gml:nilReason"/>
      </gml:nilReason>
   </xsl:template>
   <xsl:template name="gml:frame_Property">
      <gml:frame>
         <xsl:value-of select="./@gml:frame"/>
      </gml:frame>
   </xsl:template>
   <xsl:template name="gml:srsName_Property">
      <gml:srsName>
         <xsl:value-of select="./@gml:srsName"/>
      </gml:srsName>
   </xsl:template>
   <xsl:template name="gml:srsDimension_Property">
      <gml:srsDimension>
         <xsl:value-of select="./@gml:srsDimension"/>
      </gml:srsDimension>
   </xsl:template>
   <xsl:template name="gml:uomLabels_Property">
      <gml:uomLabels>
         <xsl:value-of select="./@gml:uomLabels"/>
      </gml:uomLabels>
   </xsl:template>
   <xsl:template name="gml:count_Property">
      <gml:count>
         <xsl:value-of select="./@gml:count"/>
      </gml:count>
   </xsl:template>
   <xsl:template name="gml:orientation_Property">
      <gml:orientation>
         <xsl:value-of select="./@gml:orientation"/>
      </gml:orientation>
   </xsl:template>
   <xsl:template name="gml:numDerivativesAtStart_Property">
      <gml:numDerivativesAtStart>
         <xsl:value-of select="./@gml:numDerivativesAtStart"/>
      </gml:numDerivativesAtStart>
   </xsl:template>
   <xsl:template name="gml:numDerivativesAtEnd_Property">
      <gml:numDerivativesAtEnd>
         <xsl:value-of select="./@gml:numDerivativesAtEnd"/>
      </gml:numDerivativesAtEnd>
   </xsl:template>
   <xsl:template name="gml:numDerivativeInterior_Property">
      <gml:numDerivativeInterior>
         <xsl:value-of select="./@gml:numDerivativeInterior"/>
      </gml:numDerivativeInterior>
   </xsl:template>
   <xsl:template name="gml:interpolation_Property">
      <gml:interpolation>
         <xsl:value-of select="./@gml:interpolation"/>
      </gml:interpolation>
   </xsl:template>
   <xsl:template name="gml:numArc_Property">
      <gml:numArc>
         <xsl:value-of select="./@gml:numArc"/>
      </gml:numArc>
   </xsl:template>
   <xsl:template name="gml:isPolynomial_Property">
      <gml:isPolynomial>
         <xsl:value-of select="./@gml:isPolynomial"/>
      </gml:isPolynomial>
   </xsl:template>
   <xsl:template name="gml:knotType_Property">
      <gml:knotType>
         <xsl:value-of select="./@gml:knotType"/>
      </gml:knotType>
   </xsl:template>
   <xsl:template name="gml:columns_Property">
      <gml:columns>
         <xsl:value-of select="./@gml:columns"/>
      </gml:columns>
   </xsl:template>
   <xsl:template name="gml:horizontalCurveType_Property">
      <gml:horizontalCurveType>
         <xsl:value-of select="./@gml:horizontalCurveType"/>
      </gml:horizontalCurveType>
   </xsl:template>
   <xsl:template name="gml:verticalCurveType_Property">
      <gml:verticalCurveType>
         <xsl:value-of select="./@gml:verticalCurveType"/>
      </gml:verticalCurveType>
   </xsl:template>
   <xsl:template name="gml:owns_Property">
      <gml:owns>
         <xsl:value-of select="./@gml:owns"/>
      </gml:owns>
   </xsl:template>
   <xsl:template name="gml:aggregationType_Property">
      <gml:aggregationType>
         <xsl:value-of select="./@gml:aggregationType"/>
      </gml:aggregationType>
   </xsl:template>
   <xsl:template name="gml:dimension_Property">
      <gml:dimension>
         <xsl:value-of select="./@gml:dimension"/>
      </gml:dimension>
   </xsl:template>
   <xsl:template name="gml:relativePosition_Property">
      <gml:relativePosition>
         <xsl:value-of select="./@gml:relativePosition"/>
      </gml:relativePosition>
   </xsl:template>
   <xsl:template name="gml:calendarEraName_Property">
      <gml:calendarEraName>
         <xsl:value-of select="./@gml:calendarEraName"/>
      </gml:calendarEraName>
   </xsl:template>
   <xsl:template name="gml:indeterminatePosition_Property">
      <gml:indeterminatePosition>
         <xsl:value-of select="./@gml:indeterminatePosition"/>
      </gml:indeterminatePosition>
   </xsl:template>
   <xsl:template name="gml:unit_Property">
      <gml:unit>
         <xsl:value-of select="./@gml:unit"/>
      </gml:unit>
   </xsl:template>
   <xsl:template name="gml:radix_Property">
      <gml:radix>
         <xsl:value-of select="./@gml:radix"/>
      </gml:radix>
   </xsl:template>
   <xsl:template name="gml:universal_Property">
      <gml:universal>
         <xsl:value-of select="./@gml:universal"/>
      </gml:universal>
   </xsl:template>
   <xsl:template name="gml:isMaximal_Property">
      <gml:isMaximal>
         <xsl:value-of select="./@gml:isMaximal"/>
      </gml:isMaximal>
   </xsl:template>
   <xsl:template name="gml:exponent_Property">
      <gml:exponent>
         <xsl:value-of select="./@gml:exponent"/>
      </gml:exponent>
   </xsl:template>
   <xsl:template name="core:CityModelMemberGroup_Template">
      <xsl:for-each select="./core:cityObjectMember">
         <xsl:call-template name="core:cityObjectMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:appearanceMember">
         <xsl:call-template name="core:appearanceMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:versionMember">
         <xsl:call-template name="core:versionMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:versionTransitionMember">
         <xsl:call-template name="core:versionTransitionMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:featureMember">
         <xsl:call-template name="core:featureMember_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeature">
         <xsl:call-template name="core:AbstractFeature_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractSurfaceData">
         <xsl:call-template name="app:AbstractSurfaceData_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:AbstractTexture">
         <xsl:call-template name="app:AbstractTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:GeoreferencedTexture">
         <xsl:call-template name="app:GeoreferencedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:ParameterizedTexture">
         <xsl:call-template name="app:ParameterizedTexture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:X3DMaterial">
         <xsl:call-template name="app:X3DMaterial_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractFeatureWithLifespan">
         <xsl:call-template name="core:AbstractFeatureWithLifespan_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractAppearance">
         <xsl:call-template name="core:AbstractAppearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./app:Appearance">
         <xsl:call-template name="app:Appearance_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractCityObject">
         <xsl:call-template name="core:AbstractCityObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpace">
         <xsl:call-template name="core:AbstractSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractLogicalSpace">
         <xsl:call-template name="core:AbstractLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuildingSubdivision">
         <xsl:call-template name="bldg:AbstractBuildingSubdivision_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingUnit">
         <xsl:call-template name="bldg:BuildingUnit_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Storey">
         <xsl:call-template name="bldg:Storey_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./grp:CityObjectGroup">
         <xsl:call-template name="grp:CityObjectGroup_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericLogicalSpace">
         <xsl:call-template name="gen:GenericLogicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPhysicalSpace">
         <xsl:call-template name="core:AbstractPhysicalSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractOccupiedSpace">
         <xsl:call-template name="core:AbstractOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./frn:CityFurniture">
         <xsl:call-template name="frn:CityFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstruction">
         <xsl:call-template name="con:AbstractConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:AbstractBridge">
         <xsl:call-template name="brid:AbstractBridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:Bridge">
         <xsl:call-template name="brid:Bridge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgePart">
         <xsl:call-template name="brid:BridgePart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:AbstractBuilding">
         <xsl:call-template name="bldg:AbstractBuilding_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:Building">
         <xsl:call-template name="bldg:Building_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingPart">
         <xsl:call-template name="bldg:BuildingPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OtherConstruction">
         <xsl:call-template name="con:OtherConstruction_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:AbstractTunnel">
         <xsl:call-template name="tun:AbstractTunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:Tunnel">
         <xsl:call-template name="tun:Tunnel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelPart">
         <xsl:call-template name="tun:TunnelPart_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructiveElement">
         <xsl:call-template name="con:AbstractConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeConstructiveElement">
         <xsl:call-template name="brid:BridgeConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingConstructiveElement">
         <xsl:call-template name="bldg:BuildingConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelConstructiveElement">
         <xsl:call-template name="tun:TunnelConstructiveElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingElement">
         <xsl:call-template name="con:AbstractFillingElement_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Door">
         <xsl:call-template name="con:Door_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:Window">
         <xsl:call-template name="con:Window_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFurniture">
         <xsl:call-template name="con:AbstractFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeFurniture">
         <xsl:call-template name="brid:BridgeFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingFurniture">
         <xsl:call-template name="bldg:BuildingFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelFurniture">
         <xsl:call-template name="tun:TunnelFurniture_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractInstallation">
         <xsl:call-template name="con:AbstractInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeInstallation">
         <xsl:call-template name="brid:BridgeInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingInstallation">
         <xsl:call-template name="bldg:BuildingInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:TunnelInstallation">
         <xsl:call-template name="tun:TunnelInstallation_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericOccupiedSpace">
         <xsl:call-template name="gen:GenericOccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:AbstractVegetationObject">
         <xsl:call-template name="veg:AbstractVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:PlantCover">
         <xsl:call-template name="veg:PlantCover_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./veg:SolitaryVegetationObject">
         <xsl:call-template name="veg:SolitaryVegetationObject_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterBody">
         <xsl:call-template name="wtr:WaterBody_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractUnoccupiedSpace">
         <xsl:call-template name="core:AbstractUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./brid:BridgeRoom">
         <xsl:call-template name="brid:BridgeRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./bldg:BuildingRoom">
         <xsl:call-template name="bldg:BuildingRoom_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericUnoccupiedSpace">
         <xsl:call-template name="gen:GenericUnoccupiedSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AbstractTransportationSpace">
         <xsl:call-template name="tran:AbstractTransportationSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Intersection">
         <xsl:call-template name="tran:Intersection_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Railway">
         <xsl:call-template name="tran:Railway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Road">
         <xsl:call-template name="tran:Road_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Section">
         <xsl:call-template name="tran:Section_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Square">
         <xsl:call-template name="tran:Square_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Track">
         <xsl:call-template name="tran:Track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Waterway">
         <xsl:call-template name="tran:Waterway_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficSpace">
         <xsl:call-template name="tran:AuxiliaryTrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:ClearanceSpace">
         <xsl:call-template name="tran:ClearanceSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Hole">
         <xsl:call-template name="tran:Hole_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficSpace">
         <xsl:call-template name="tran:TrafficSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tun:HollowSpace">
         <xsl:call-template name="tun:HollowSpace_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractSpaceBoundary">
         <xsl:call-template name="core:AbstractSpaceBoundary_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractThematicSurface">
         <xsl:call-template name="core:AbstractThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:ClosureSurface">
         <xsl:call-template name="core:ClosureSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractConstructionSurface">
         <xsl:call-template name="con:AbstractConstructionSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:CeilingSurface">
         <xsl:call-template name="con:CeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:FloorSurface">
         <xsl:call-template name="con:FloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:GroundSurface">
         <xsl:call-template name="con:GroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:InteriorWallSurface">
         <xsl:call-template name="con:InteriorWallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterCeilingSurface">
         <xsl:call-template name="con:OuterCeilingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:OuterFloorSurface">
         <xsl:call-template name="con:OuterFloorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:RoofSurface">
         <xsl:call-template name="con:RoofSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WallSurface">
         <xsl:call-template name="con:WallSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:AbstractFillingSurface">
         <xsl:call-template name="con:AbstractFillingSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:DoorSurface">
         <xsl:call-template name="con:DoorSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./con:WindowSurface">
         <xsl:call-template name="con:WindowSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gen:GenericThematicSurface">
         <xsl:call-template name="gen:GenericThematicSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./luse:LandUse">
         <xsl:call-template name="luse:LandUse_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:AuxiliaryTrafficArea">
         <xsl:call-template name="tran:AuxiliaryTrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:HoleSurface">
         <xsl:call-template name="tran:HoleSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:Marking">
         <xsl:call-template name="tran:Marking_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./tran:TrafficArea">
         <xsl:call-template name="tran:TrafficArea_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:AbstractWaterBoundarySurface">
         <xsl:call-template name="wtr:AbstractWaterBoundarySurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterGroundSurface">
         <xsl:call-template name="wtr:WaterGroundSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./wtr:WaterSurface">
         <xsl:call-template name="wtr:WaterSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:AbstractReliefComponent">
         <xsl:call-template name="dem:AbstractReliefComponent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:BreaklineRelief">
         <xsl:call-template name="dem:BreaklineRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:MassPointRelief">
         <xsl:call-template name="dem:MassPointRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:RasterRelief">
         <xsl:call-template name="dem:RasterRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:TINRelief">
         <xsl:call-template name="dem:TINRelief_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dem:ReliefFeature">
         <xsl:call-template name="dem:ReliefFeature_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractDynamizer">
         <xsl:call-template name="core:AbstractDynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:Dynamizer">
         <xsl:call-template name="dyn:Dynamizer_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersion">
         <xsl:call-template name="core:AbstractVersion_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:Version">
         <xsl:call-template name="vers:Version_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractVersionTransition">
         <xsl:call-template name="core:AbstractVersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./vers:VersionTransition">
         <xsl:call-template name="vers:VersionTransition_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:CityModel">
         <xsl:call-template name="core:CityModel_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:AbstractPointCloud">
         <xsl:call-template name="core:AbstractPointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./pcl:PointCloud">
         <xsl:call-template name="pcl:PointCloud_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./core:Address">
         <xsl:call-template name="core:Address_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractTimeseries">
         <xsl:call-template name="dyn:AbstractTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:AbstractAtomicTimeseries">
         <xsl:call-template name="dyn:AbstractAtomicTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:GenericTimeseries">
         <xsl:call-template name="dyn:GenericTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:StandardFileTimeseries">
         <xsl:call-template name="dyn:StandardFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:TabulatedFileTimeseries">
         <xsl:call-template name="dyn:TabulatedFileTimeseries_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./dyn:CompositeTimeseries">
         <xsl:call-template name="dyn:CompositeTimeseries_Substitution"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:dynamicProperties_Template">
      <xsl:for-each select="./gml:validTime">
         <xsl:call-template name="gml:validTime_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:history">
         <xsl:call-template name="gml:history_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:track">
         <xsl:call-template name="gml:track_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:dataSource">
         <xsl:call-template name="gml:dataSource_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:dataSourceReference">
         <xsl:call-template name="gml:dataSourceReference_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:geometricPositionGroup_Template">
      <xsl:for-each select="./gml:pos">
         <xsl:call-template name="gml:pos_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:pointProperty">
         <xsl:call-template name="gml:pointProperty_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:geometricPositionListGroup_Template">
      <xsl:for-each select="./gml:posList">
         <xsl:call-template name="gml:posList_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:geometricPositionGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:PointGrid_Template">
      <xsl:for-each select="./gml:rows">
         <xsl:call-template name="gml:rows_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Row">
         <xsl:call-template name="gml:Row_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:geometricPositionListGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:StandardObjectProperties_Template">
      <xsl:for-each select="./gml:metaDataProperty">
         <xsl:call-template name="gml:metaDataProperty_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:description">
         <xsl:call-template name="gml:description_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:descriptionReference">
         <xsl:call-template name="gml:descriptionReference_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:identifier">
         <xsl:call-template name="gml:identifier_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:name">
         <xsl:call-template name="gml:name_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:timeLength_Template">
      <xsl:for-each select="./gml:duration">
         <xsl:call-template name="gml:duration_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:timeInterval">
         <xsl:call-template name="gml:timeInterval_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:Value_Template">
      <xsl:for-each select="./gml:AbstractValue">
         <xsl:call-template name="gml:AbstractValue_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractScalarValue">
         <xsl:call-template name="gml:AbstractScalarValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Boolean">
         <xsl:call-template name="gml:Boolean_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Category">
         <xsl:call-template name="gml:Category_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Count">
         <xsl:call-template name="gml:Count_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Quantity">
         <xsl:call-template name="gml:Quantity_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractScalarValueList">
         <xsl:call-template name="gml:AbstractScalarValueList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:BooleanList">
         <xsl:call-template name="gml:BooleanList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CategoryList">
         <xsl:call-template name="gml:CategoryList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CountList">
         <xsl:call-template name="gml:CountList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:QuantityList">
         <xsl:call-template name="gml:QuantityList_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeValue">
         <xsl:call-template name="gml:CompositeValue_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:ValueArray">
         <xsl:call-template name="gml:ValueArray_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CategoryExtent">
         <xsl:call-template name="gml:CategoryExtent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CountExtent">
         <xsl:call-template name="gml:CountExtent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:QuantityExtent">
         <xsl:call-template name="gml:QuantityExtent_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometry">
         <xsl:call-template name="gml:AbstractGeometry_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricAggregate">
         <xsl:call-template name="gml:AbstractGeometricAggregate_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiGeometry">
         <xsl:call-template name="gml:MultiGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiPoint">
         <xsl:call-template name="gml:MultiPoint_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiCurve">
         <xsl:call-template name="gml:MultiCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSurface">
         <xsl:call-template name="gml:MultiSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:MultiSolid">
         <xsl:call-template name="gml:MultiSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractGeometricPrimitive">
         <xsl:call-template name="gml:AbstractGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Point">
         <xsl:call-template name="gml:Point_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractCurve">
         <xsl:call-template name="gml:AbstractCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:LineString">
         <xsl:call-template name="gml:LineString_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeCurve">
         <xsl:call-template name="gml:CompositeCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Curve">
         <xsl:call-template name="gml:Curve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableCurve">
         <xsl:call-template name="gml:OrientableCurve_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSurface">
         <xsl:call-template name="gml:AbstractSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Polygon">
         <xsl:call-template name="gml:Polygon_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSurface">
         <xsl:call-template name="gml:CompositeSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Surface">
         <xsl:call-template name="gml:Surface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:PolyhedralSurface">
         <xsl:call-template name="gml:PolyhedralSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TriangulatedSurface">
         <xsl:call-template name="gml:TriangulatedSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Tin">
         <xsl:call-template name="gml:Tin_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:OrientableSurface">
         <xsl:call-template name="gml:OrientableSurface_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractSolid">
         <xsl:call-template name="gml:AbstractSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:CompositeSolid">
         <xsl:call-template name="gml:CompositeSolid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Solid">
         <xsl:call-template name="gml:Solid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:GeometricComplex">
         <xsl:call-template name="gml:GeometricComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractImplicitGeometry">
         <xsl:call-template name="gml:AbstractImplicitGeometry_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Grid">
         <xsl:call-template name="gml:Grid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:RectifiedGrid">
         <xsl:call-template name="gml:RectifiedGrid_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeObject">
         <xsl:call-template name="gml:AbstractTimeObject_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimePrimitive">
         <xsl:call-template name="gml:AbstractTimePrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeGeometricPrimitive">
         <xsl:call-template name="gml:AbstractTimeGeometricPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeInstant">
         <xsl:call-template name="gml:TimeInstant_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimePeriod">
         <xsl:call-template name="gml:TimePeriod_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeTopologyPrimitive">
         <xsl:call-template name="gml:AbstractTimeTopologyPrimitive_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeNode">
         <xsl:call-template name="gml:TimeNode_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeEdge">
         <xsl:call-template name="gml:TimeEdge_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:AbstractTimeComplex">
         <xsl:call-template name="gml:AbstractTimeComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:TimeTopologyComplex">
         <xsl:call-template name="gml:TimeTopologyComplex_Substitution"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:Null">
         <xsl:call-template name="gml:Null_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:SRSReferenceGroup_Template">
      <xsl:for-each select="./gml:srsName">
         <xsl:call-template name="gml:srsName_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:srsDimension">
         <xsl:call-template name="gml:srsDimension_Property"/>
      </xsl:for-each>
      <xsl:call-template name="gml:SRSInformationGroup_Template"/>
   </xsl:template>
   <xsl:template name="gml:SRSInformationGroup_Template">
      <xsl:for-each select="./gml:axisLabels">
         <xsl:call-template name="gml:axisLabels_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:uomLabels">
         <xsl:call-template name="gml:uomLabels_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:AssociationAttributeGroup_Template">
      <xsl:for-each select="./gml:nilReason">
         <xsl:call-template name="gml:nilReason_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:remoteSchema">
         <xsl:call-template name="gml:remoteSchema_Property"/>
      </xsl:for-each>
      <xsl:call-template name="xlink:simpleAttrs_Template"/>
   </xsl:template>
   <xsl:template name="gml:OwnershipAttributeGroup_Template">
      <xsl:for-each select="./gml:owns">
         <xsl:call-template name="gml:owns_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:AggregationAttributeGroup_Template">
      <xsl:for-each select="./gml:aggregationType">
         <xsl:call-template name="gml:aggregationType_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template name="gml:referenceSystem_Template">
      <xsl:for-each select="./gml:codeSpace">
         <xsl:call-template name="gml:codeSpace_Property"/>
      </xsl:for-each>
      <xsl:for-each select="./gml:uom">
         <xsl:call-template name="gml:uom_Property"/>
      </xsl:for-each>
   </xsl:template>
   <xsl:template match="text()">
      <xsl:if test="string(.) = ''"/>
   </xsl:template>
<xsl:template name="gml:_Object_Template"/><xsl:template name="xlink:simpleAttrs_Template"/></xsl:stylesheet>
